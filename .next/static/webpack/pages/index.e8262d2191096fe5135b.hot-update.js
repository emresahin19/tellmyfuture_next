/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/main.js":
/*!****************************!*\
  !*** ./components/main.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/regenerator */ \"./node_modules/next/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _calendar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./calendar */ \"./components/calendar.js\");\n/* harmony import */ var _clock__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./clock */ \"./components/clock.js\");\n/* harmony import */ var _calculate__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./calculate */ \"./components/calculate.js\");\n/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @fortawesome/react-fontawesome */ \"./node_modules/@fortawesome/react-fontawesome/index.es.js\");\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\");\n/* harmony import */ var _skymap_sky__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./skymap/sky */ \"./components/skymap/sky.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\n\n\n\n\nvar _jsxFileName = \"/home/dnc/tellmyfuture_next/components/main.js\";\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\nvar LocateMap = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c = function _c() {\n  return __webpack_require__.e(/*! import() */ \"components_map_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./map */ \"./components/map.js\"));\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./map */ \"./components/map.js\")];\n    },\n    modules: [\"../components/main.js -> \" + \"./map\"]\n  }\n});\n_c2 = LocateMap;\n\nvar Main = /*#__PURE__*/function (_Component) {\n  (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__.default)(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__.default)(this, Main);\n\n    _this = _super.call(this, props);\n\n    (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__.default)((0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__.default)(_this), \"handleFullsc\", function () {\n      _this.setState({\n        fullsc: !_this.state.fullsc\n      });\n    });\n\n    (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__.default)((0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__.default)(_this), \"handleBack\", function () {\n      _this.setState({\n        callendar: true,\n        chart: false\n      });\n    });\n\n    _this.state = {\n      month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      calendar_days: [],\n      daysofmonths: [],\n      calendar: false,\n      map: false,\n      ready: false,\n      monthList: false,\n      clock: false,\n      chart: false,\n      fullsc: false,\n      year: 0,\n      month: 0,\n      day: 0,\n      hour: 0,\n      minute: 0,\n      longitude: 0,\n      latitude: 0,\n      screenWidth: 0\n    };\n    return _this;\n  }\n\n  (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__.default)(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        ready: true,\n        calendar: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(\"div\", {\n        className: (!this.state.ready ? 'glass' : 'glass-after') + (this.state.chart ? ' fullscreen' : ''),\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(\"span\", {\n          style: this.state.chart ? {\n            opacity: 1\n          } : {\n            opacity: 0\n          },\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_14__.FontAwesomeIcon, {\n            className: \"back-button\",\n            icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_17__.faAngleLeft,\n            onClick: this.handleBack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(\"div\", {\n          id: \"paper\",\n          style: this.state.chart ? {} : {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), this.state.chart ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(_skymap_sky__WEBPACK_IMPORTED_MODULE_15__.default, {\n          lon: this.state.longitude,\n          lat: this.state.latitude,\n          year: this.state.year,\n          month: this.state.month,\n          day: this.state.day,\n          hour: this.state.hour,\n          minute: this.state.minute\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.Fragment, {}, void 0, false), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(_calendar__WEBPACK_IMPORTED_MODULE_11__.default, {\n          handleDate: function handleDate(dateState) {\n            _this2.setState({\n              year: dateState.year,\n              calendar_days: dateState.calendar_days,\n              monthList: dateState.monthList,\n              daysofmonths: dateState.daysofmonths,\n              month: dateState.month,\n              day: dateState.day\n            });\n          },\n          clock: this.state.clock,\n          chart: this.state.chart,\n          map: this.state.map,\n          calendar: this.state.calendar,\n          monthList: this.state.monthList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(\"div\", {\n          className: this.state.chart || this.state.map || this.state.monthList ? \"screen-off\" : \"screen-on\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(_clock__WEBPACK_IMPORTED_MODULE_12__.default, {\n            handleClock: function handleClock(clockState) {\n              _this2.setState({\n                hour: clockState.hour,\n                minute: clockState.minute,\n                clock: clockState.clock\n              });\n            },\n            calendar: this.state.calendar,\n            clock: this.state.clock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(\"div\", {\n          className: this.state.chart || this.state.clock || this.state.monthList ? \"screen-off\" : \"screen-on\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(LocateMap, {\n            handlelocate: function handlelocate(mapState) {\n              _this2.setState({\n                longitude: mapState.longitude,\n                latitude: mapState.latitude,\n                map: mapState.map\n              });\n            },\n            calendar: this.state.calendar,\n            map: this.state.map\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(\"div\", {\n          className: this.state.chart || this.state.map || this.state.clock || this.state.monthList ? \"screen-off\" : \"screen-on\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxDEV)(_calculate__WEBPACK_IMPORTED_MODULE_13__.default, {\n            handleCalc: /*#__PURE__*/function () {\n              var _ref = (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)( /*#__PURE__*/_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_8___default().mark(function _callee(chartState) {\n                return _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_8___default().wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _this2.setState({\n                          chart: chartState\n                        });\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref.apply(this, arguments);\n              };\n            }(),\n            state: this.state,\n            chart: this.state.chart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Main;\n}(react__WEBPACK_IMPORTED_MODULE_9__.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Main);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocateMap$dynamic\");\n$RefreshReg$(_c2, \"LocateMap\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL21haW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUEsSUFBTVcsU0FBUyxHQUFHVCxvREFBTyxNQUFDO0FBQUEsU0FBTSxrSkFBTjtBQUFBLENBQUQsRUFBd0I7QUFBRVUsRUFBQUEsR0FBRyxFQUFDLEtBQU47QUFBQTtBQUFBO0FBQUEsa0NBQVYsa0NBQVU7QUFBQTtBQUFBLDRDQUFWLE9BQVU7QUFBQTtBQUFBLENBQXhCLENBQXpCO01BQU1EOztJQUdBRTs7Ozs7QUFDSixnQkFBWUMsS0FBWixFQUFrQjtBQUFBOztBQUFBOztBQUNoQiw4QkFBTUEsS0FBTjs7QUFEZ0IsNlRBOEJILFlBQU07QUFDbkIsWUFBS0MsUUFBTCxDQUFjO0FBQ1pDLFFBQUFBLE1BQU0sRUFBRSxDQUFDLE1BQUtDLEtBQUwsQ0FBV0Q7QUFEUixPQUFkO0FBR0QsS0FsQ2lCOztBQUFBLDJUQW1DTCxZQUFNO0FBQ2pCLFlBQUtELFFBQUwsQ0FBYztBQUNaRyxRQUFBQSxTQUFTLEVBQUUsSUFEQztBQUVaQyxRQUFBQSxLQUFLLEVBQUU7QUFGSyxPQUFkO0FBSUQsS0F4Q2lCOztBQUdoQixVQUFLRixLQUFMLEdBQWE7QUFDWEcsTUFBQUEsV0FBVyxFQUFFLENBQUMsU0FBRCxFQUFZLFVBQVosRUFBd0IsT0FBeEIsRUFBaUMsT0FBakMsRUFBMEMsS0FBMUMsRUFBaUQsTUFBakQsRUFBeUQsTUFBekQsRUFBaUUsUUFBakUsRUFBMkUsV0FBM0UsRUFBd0YsU0FBeEYsRUFBbUcsVUFBbkcsRUFBK0csVUFBL0csQ0FERjtBQUVYQyxNQUFBQSxhQUFhLEVBQUUsRUFGSjtBQUdYQyxNQUFBQSxZQUFZLEVBQUUsRUFISDtBQUlYQyxNQUFBQSxRQUFRLEVBQUUsS0FKQztBQUtYQyxNQUFBQSxHQUFHLEVBQUUsS0FMTTtBQU1YQyxNQUFBQSxLQUFLLEVBQUUsS0FOSTtBQU9YQyxNQUFBQSxTQUFTLEVBQUUsS0FQQTtBQVFYQyxNQUFBQSxLQUFLLEVBQUUsS0FSSTtBQVNYUixNQUFBQSxLQUFLLEVBQUUsS0FUSTtBQVVYSCxNQUFBQSxNQUFNLEVBQUUsS0FWRztBQVdYWSxNQUFBQSxJQUFJLEVBQUUsQ0FYSztBQVlYQyxNQUFBQSxLQUFLLEVBQUUsQ0FaSTtBQWFYQyxNQUFBQSxHQUFHLEVBQUUsQ0FiTTtBQWNYQyxNQUFBQSxJQUFJLEVBQUUsQ0FkSztBQWVYQyxNQUFBQSxNQUFNLEVBQUUsQ0FmRztBQWdCWEMsTUFBQUEsU0FBUyxFQUFFLENBaEJBO0FBaUJYQyxNQUFBQSxRQUFRLEVBQUUsQ0FqQkM7QUFrQlhDLE1BQUFBLFdBQVcsRUFBRTtBQWxCRixLQUFiO0FBSGdCO0FBdUJqQjs7OztXQUNELDZCQUFvQjtBQUNsQixXQUFLcEIsUUFBTCxDQUFjO0FBQ1pVLFFBQUFBLEtBQUssRUFBRSxJQURLO0FBRVpGLFFBQUFBLFFBQVEsRUFBRTtBQUZFLE9BQWQ7QUFJRDs7O1dBYUQsa0JBQVE7QUFBQTs7QUFDTiwwQkFDRTtBQUFLLGlCQUFTLEVBQUUsQ0FBQyxDQUFDLEtBQUtOLEtBQUwsQ0FBV1EsS0FBWixHQUFvQixPQUFwQixHQUE4QixhQUEvQixLQUFpRCxLQUFLUixLQUFMLENBQVdFLEtBQVgsR0FBbUIsYUFBbkIsR0FBbUMsRUFBcEYsQ0FBaEI7QUFBQSxnQ0FDRTtBQUFNLGVBQUssRUFBRSxLQUFLRixLQUFMLENBQVdFLEtBQVgsR0FBbUI7QUFBRWlCLFlBQUFBLE9BQU8sRUFBRTtBQUFYLFdBQW5CLEdBQW9DO0FBQUVBLFlBQUFBLE9BQU8sRUFBRTtBQUFYLFdBQWpEO0FBQUEsaUNBQ0UsK0RBQUMsNEVBQUQ7QUFDSSxxQkFBUyxFQUFFLGFBRGY7QUFFSSxnQkFBSSxFQUFFN0IsMkVBRlY7QUFHSSxtQkFBTyxFQUFFLEtBQUs4QjtBQUhsQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxnQkFERixlQVNFO0FBQUssWUFBRSxFQUFDLE9BQVI7QUFBZ0IsZUFBSyxFQUFFLEtBQUtwQixLQUFMLENBQVdFLEtBQVgsR0FBbUIsRUFBbkIsR0FBd0I7QUFBQ21CLFlBQUFBLE9BQU8sRUFBRTtBQUFWO0FBQS9DO0FBQUE7QUFBQTtBQUFBO0FBQUEsZ0JBVEYsRUFXRyxLQUFLckIsS0FBTCxDQUFXRSxLQUFYLGdCQUVDLCtEQUFDLGlEQUFEO0FBQ0UsYUFBRyxFQUFFLEtBQUtGLEtBQUwsQ0FBV2dCLFNBRGxCO0FBRUUsYUFBRyxFQUFFLEtBQUtoQixLQUFMLENBQVdpQixRQUZsQjtBQUdFLGNBQUksRUFBRSxLQUFLakIsS0FBTCxDQUFXVyxJQUhuQjtBQUlFLGVBQUssRUFBRSxLQUFLWCxLQUFMLENBQVdZLEtBSnBCO0FBS0UsYUFBRyxFQUFFLEtBQUtaLEtBQUwsQ0FBV2EsR0FMbEI7QUFNRSxjQUFJLEVBQUUsS0FBS2IsS0FBTCxDQUFXYyxJQU5uQjtBQU9FLGdCQUFNLEVBQUUsS0FBS2QsS0FBTCxDQUFXZTtBQVByQjtBQUFBO0FBQUE7QUFBQTtBQUFBLGdCQUZELGdCQVlBLCtJQXZCSCxlQTBCRSwrREFBQywrQ0FBRDtBQUNFLG9CQUFVLEVBQUUsb0JBQUNPLFNBQUQsRUFBZTtBQUN6QixrQkFBSSxDQUFDeEIsUUFBTCxDQUFjO0FBQ1phLGNBQUFBLElBQUksRUFBRVcsU0FBUyxDQUFDWCxJQURKO0FBRVpQLGNBQUFBLGFBQWEsRUFBRWtCLFNBQVMsQ0FBQ2xCLGFBRmI7QUFHWkssY0FBQUEsU0FBUyxFQUFFYSxTQUFTLENBQUNiLFNBSFQ7QUFJWkosY0FBQUEsWUFBWSxFQUFFaUIsU0FBUyxDQUFDakIsWUFKWjtBQUtaTyxjQUFBQSxLQUFLLEVBQUVVLFNBQVMsQ0FBQ1YsS0FMTDtBQU1aQyxjQUFBQSxHQUFHLEVBQUVTLFNBQVMsQ0FBQ1Q7QUFOSCxhQUFkO0FBUUQsV0FWSDtBQVdFLGVBQUssRUFBRSxLQUFLYixLQUFMLENBQVdVLEtBWHBCO0FBWUUsZUFBSyxFQUFFLEtBQUtWLEtBQUwsQ0FBV0UsS0FacEI7QUFhRSxhQUFHLEVBQUUsS0FBS0YsS0FBTCxDQUFXTyxHQWJsQjtBQWNFLGtCQUFRLEVBQUUsS0FBS1AsS0FBTCxDQUFXTSxRQWR2QjtBQWVFLG1CQUFTLEVBQUUsS0FBS04sS0FBTCxDQUFXUztBQWZ4QjtBQUFBO0FBQUE7QUFBQTtBQUFBLGdCQTFCRixlQTJDRTtBQUFLLG1CQUFTLEVBQUUsS0FBS1QsS0FBTCxDQUFXRSxLQUFYLElBQW9CLEtBQUtGLEtBQUwsQ0FBV08sR0FBL0IsSUFBc0MsS0FBS1AsS0FBTCxDQUFXUyxTQUFqRCxHQUE2RCxZQUE3RCxHQUE0RSxXQUE1RjtBQUFBLGlDQUNFLCtEQUFDLDRDQUFEO0FBQ0UsdUJBQVcsRUFBRSxxQkFBQ2MsVUFBRCxFQUFnQjtBQUMzQixvQkFBSSxDQUFDekIsUUFBTCxDQUFjO0FBQ1pnQixnQkFBQUEsSUFBSSxFQUFFUyxVQUFVLENBQUNULElBREw7QUFFWkMsZ0JBQUFBLE1BQU0sRUFBRVEsVUFBVSxDQUFDUixNQUZQO0FBR1pMLGdCQUFBQSxLQUFLLEVBQUVhLFVBQVUsQ0FBQ2I7QUFITixlQUFkO0FBS0QsYUFQSDtBQVFFLG9CQUFRLEVBQUUsS0FBS1YsS0FBTCxDQUFXTSxRQVJ2QjtBQVNFLGlCQUFLLEVBQUUsS0FBS04sS0FBTCxDQUFXVTtBQVRwQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxnQkEzQ0YsZUF3REU7QUFBSyxtQkFBUyxFQUFFLEtBQUtWLEtBQUwsQ0FBV0UsS0FBWCxJQUFvQixLQUFLRixLQUFMLENBQVdVLEtBQS9CLElBQXdDLEtBQUtWLEtBQUwsQ0FBV1MsU0FBbkQsR0FBK0QsWUFBL0QsR0FBOEUsV0FBOUY7QUFBQSxpQ0FDRSwrREFBQyxTQUFEO0FBQ0Usd0JBQVksRUFBRSxzQkFBQ2UsUUFBRCxFQUFjO0FBQzFCLG9CQUFJLENBQUMxQixRQUFMLENBQWM7QUFDWmtCLGdCQUFBQSxTQUFTLEVBQUVRLFFBQVEsQ0FBQ1IsU0FEUjtBQUVaQyxnQkFBQUEsUUFBUSxFQUFFTyxRQUFRLENBQUNQLFFBRlA7QUFHWlYsZ0JBQUFBLEdBQUcsRUFBRWlCLFFBQVEsQ0FBQ2pCO0FBSEYsZUFBZDtBQUtELGFBUEg7QUFRRSxvQkFBUSxFQUFFLEtBQUtQLEtBQUwsQ0FBV00sUUFSdkI7QUFTRSxlQUFHLEVBQUUsS0FBS04sS0FBTCxDQUFXTztBQVRsQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxnQkF4REYsZUFzRUU7QUFBSyxtQkFBUyxFQUFFLEtBQUtQLEtBQUwsQ0FBV0UsS0FBWCxJQUFvQixLQUFLRixLQUFMLENBQVdPLEdBQS9CLElBQXNDLEtBQUtQLEtBQUwsQ0FBV1UsS0FBakQsSUFBMEQsS0FBS1YsS0FBTCxDQUFXUyxTQUFyRSxHQUFpRixZQUFqRixHQUFnRyxXQUFoSDtBQUFBLGlDQUNFLCtEQUFDLGdEQUFEO0FBQ0Usc0JBQVU7QUFBQSx1VEFBRSxpQkFBTWdCLFVBQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNWLDhCQUFJLENBQUMzQixRQUFMLENBQWM7QUFDWkksMEJBQUFBLEtBQUssRUFBRXVCO0FBREsseUJBQWQ7O0FBRFU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFBRjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQURaO0FBTUUsaUJBQUssRUFBRSxLQUFLekIsS0FOZDtBQU9FLGlCQUFLLEVBQUUsS0FBS0EsS0FBTCxDQUFXRTtBQVBwQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxnQkF0RUY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGNBREY7QUFxRkQ7Ozs7RUFqSWdCbEI7O0FBc0luQiwrREFBZVksSUFBZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL21haW4uanM/ZWZmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGR5bmFtaWMgZnJvbSAnbmV4dC9keW5hbWljJztcbmltcG9ydCBDYWxlbmRhciBmcm9tICcuL2NhbGVuZGFyJztcbmltcG9ydCBDbG9jayBmcm9tICcuL2Nsb2NrJztcbmltcG9ydCBDYWxjdWxhdGUgZnJvbSAnLi9jYWxjdWxhdGUnO1xuaW1wb3J0IHsgRm9udEF3ZXNvbWVJY29uIH0gZnJvbSBcIkBmb3J0YXdlc29tZS9yZWFjdC1mb250YXdlc29tZVwiO1xuaW1wb3J0IHsgZmFBbmdsZUxlZnQsIGZhQ29tcHJlc3NBbHQsIGZhRXhwYW5kQWx0IH0gZnJvbSBcIkBmb3J0YXdlc29tZS9mcmVlLXNvbGlkLXN2Zy1pY29uc1wiO1xuaW1wb3J0IFNlbWEgZnJvbSAnLi9za3ltYXAvc2t5JztcblxuY29uc3QgTG9jYXRlTWFwID0gZHluYW1pYygoKSA9PiBpbXBvcnQoXCIuL21hcFwiKSwgeyBzc3I6ZmFsc2UgfSlcblxuXG5jbGFzcyBNYWluIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpe1xuICAgIHN1cGVyKHByb3BzKTtcbiAgXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1vbnRoX25hbWVzOiBbJ0phbnVhcnknLCAnRmVicnVhcnknLCAnTWFyY2gnLCAnQXByaWwnLCAnTWF5JywgJ0p1bmUnLCAnSnVseScsICdBdWd1c3QnLCAnU2VwdGVtYmVyJywgJ09jdG9iZXInLCAnTm92ZW1iZXInLCAnRGVjZW1iZXInXSxcbiAgICAgIGNhbGVuZGFyX2RheXM6IFtdLFxuICAgICAgZGF5c29mbW9udGhzOiBbXSxcbiAgICAgIGNhbGVuZGFyOiBmYWxzZSxcbiAgICAgIG1hcDogZmFsc2UsXG4gICAgICByZWFkeTogZmFsc2UsXG4gICAgICBtb250aExpc3Q6IGZhbHNlLFxuICAgICAgY2xvY2s6IGZhbHNlLFxuICAgICAgY2hhcnQ6IGZhbHNlLFxuICAgICAgZnVsbHNjOiBmYWxzZSxcbiAgICAgIHllYXI6IDAsXG4gICAgICBtb250aDogMCxcbiAgICAgIGRheTogMCxcbiAgICAgIGhvdXI6IDAsXG4gICAgICBtaW51dGU6IDAsXG4gICAgICBsb25naXR1ZGU6IDAsXG4gICAgICBsYXRpdHVkZTogMCxcbiAgICAgIHNjcmVlbldpZHRoOiAwXG4gICAgfVxuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgcmVhZHk6IHRydWUsXG4gICAgICBjYWxlbmRhcjogdHJ1ZSxcbiAgICB9KVxuICB9XG4gIGhhbmRsZUZ1bGxzYyA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGZ1bGxzYzogIXRoaXMuc3RhdGUuZnVsbHNjXG4gICAgfSlcbiAgfVxuICBoYW5kbGVCYWNrID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgY2FsbGVuZGFyOiB0cnVlLFxuICAgICAgY2hhcnQ6IGZhbHNlXG4gICAgfSlcbiAgfVxuXG4gIHJlbmRlcigpe1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17KCF0aGlzLnN0YXRlLnJlYWR5ID8gJ2dsYXNzJyA6ICdnbGFzcy1hZnRlcicpICsgKHRoaXMuc3RhdGUuY2hhcnQgPyAnIGZ1bGxzY3JlZW4nIDogJycgKX0+XG4gICAgICAgIDxzcGFuIHN0eWxlPXt0aGlzLnN0YXRlLmNoYXJ0ID8geyBvcGFjaXR5OiAxIH0gOiB7IG9wYWNpdHk6IDAgfX0+XG4gICAgICAgICAgPEZvbnRBd2Vzb21lSWNvbiBcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImJhY2stYnV0dG9uXCJ9XG4gICAgICAgICAgICAgIGljb249e2ZhQW5nbGVMZWZ0fVxuICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmhhbmRsZUJhY2t9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICBcbiAgICAgICAgPGRpdiBpZD1cInBhcGVyXCIgc3R5bGU9e3RoaXMuc3RhdGUuY2hhcnQgPyB7fSA6IHtkaXNwbGF5OiAnbm9uZSd9fT48L2Rpdj5cblxuICAgICAgICB7dGhpcy5zdGF0ZS5jaGFydCBcbiAgICAgICAgP1xuICAgICAgICAgIDxTZW1hXG4gICAgICAgICAgICBsb249e3RoaXMuc3RhdGUubG9uZ2l0dWRlfVxuICAgICAgICAgICAgbGF0PXt0aGlzLnN0YXRlLmxhdGl0dWRlfVxuICAgICAgICAgICAgeWVhcj17dGhpcy5zdGF0ZS55ZWFyfVxuICAgICAgICAgICAgbW9udGg9e3RoaXMuc3RhdGUubW9udGh9XG4gICAgICAgICAgICBkYXk9e3RoaXMuc3RhdGUuZGF5fVxuICAgICAgICAgICAgaG91cj17dGhpcy5zdGF0ZS5ob3VyfVxuICAgICAgICAgICAgbWludXRlPXt0aGlzLnN0YXRlLm1pbnV0ZX1cbiAgICAgICAgICAvPlxuICAgICAgICA6XG4gICAgICAgICA8PjwvPlxuICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgIDxDYWxlbmRhclxuICAgICAgICAgIGhhbmRsZURhdGU9eyhkYXRlU3RhdGUpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICB5ZWFyOiBkYXRlU3RhdGUueWVhciwgXG4gICAgICAgICAgICAgIGNhbGVuZGFyX2RheXM6IGRhdGVTdGF0ZS5jYWxlbmRhcl9kYXlzLFxuICAgICAgICAgICAgICBtb250aExpc3Q6IGRhdGVTdGF0ZS5tb250aExpc3QsXG4gICAgICAgICAgICAgIGRheXNvZm1vbnRoczogZGF0ZVN0YXRlLmRheXNvZm1vbnRocyxcbiAgICAgICAgICAgICAgbW9udGg6IGRhdGVTdGF0ZS5tb250aCxcbiAgICAgICAgICAgICAgZGF5OiBkYXRlU3RhdGUuZGF5LFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9fVxuICAgICAgICAgIGNsb2NrPXt0aGlzLnN0YXRlLmNsb2NrfVxuICAgICAgICAgIGNoYXJ0PXt0aGlzLnN0YXRlLmNoYXJ0fVxuICAgICAgICAgIG1hcD17dGhpcy5zdGF0ZS5tYXB9XG4gICAgICAgICAgY2FsZW5kYXI9e3RoaXMuc3RhdGUuY2FsZW5kYXJ9XG4gICAgICAgICAgbW9udGhMaXN0PXt0aGlzLnN0YXRlLm1vbnRoTGlzdH1cbiAgICAgICAgLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3RoaXMuc3RhdGUuY2hhcnQgfHwgdGhpcy5zdGF0ZS5tYXAgfHwgdGhpcy5zdGF0ZS5tb250aExpc3QgPyBcInNjcmVlbi1vZmZcIiA6IFwic2NyZWVuLW9uXCJ9PlxuICAgICAgICAgIDxDbG9ja1xuICAgICAgICAgICAgaGFuZGxlQ2xvY2s9eyhjbG9ja1N0YXRlKSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGhvdXI6IGNsb2NrU3RhdGUuaG91ciwgXG4gICAgICAgICAgICAgICAgbWludXRlOiBjbG9ja1N0YXRlLm1pbnV0ZSxcbiAgICAgICAgICAgICAgICBjbG9jazogY2xvY2tTdGF0ZS5jbG9ja1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGNhbGVuZGFyPXt0aGlzLnN0YXRlLmNhbGVuZGFyfVxuICAgICAgICAgICAgY2xvY2s9e3RoaXMuc3RhdGUuY2xvY2t9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXt0aGlzLnN0YXRlLmNoYXJ0IHx8IHRoaXMuc3RhdGUuY2xvY2sgfHwgdGhpcy5zdGF0ZS5tb250aExpc3QgPyBcInNjcmVlbi1vZmZcIiA6IFwic2NyZWVuLW9uXCJ9PlxuICAgICAgICAgIDxMb2NhdGVNYXAgXG4gICAgICAgICAgICBoYW5kbGVsb2NhdGU9eyhtYXBTdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBsb25naXR1ZGU6IG1hcFN0YXRlLmxvbmdpdHVkZSwgXG4gICAgICAgICAgICAgICAgbGF0aXR1ZGU6IG1hcFN0YXRlLmxhdGl0dWRlLFxuICAgICAgICAgICAgICAgIG1hcDogbWFwU3RhdGUubWFwXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgY2FsZW5kYXI9e3RoaXMuc3RhdGUuY2FsZW5kYXJ9XG4gICAgICAgICAgICBtYXA9e3RoaXMuc3RhdGUubWFwfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICAgIFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17dGhpcy5zdGF0ZS5jaGFydCB8fCB0aGlzLnN0YXRlLm1hcCB8fCB0aGlzLnN0YXRlLmNsb2NrIHx8IHRoaXMuc3RhdGUubW9udGhMaXN0ID8gXCJzY3JlZW4tb2ZmXCIgOiBcInNjcmVlbi1vblwifT5cbiAgICAgICAgICA8Q2FsY3VsYXRlIFxuICAgICAgICAgICAgaGFuZGxlQ2FsYz17YXN5bmMoY2hhcnRTdGF0ZSk9PntcbiAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgY2hhcnQ6IGNoYXJ0U3RhdGVcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBzdGF0ZT17dGhpcy5zdGF0ZX1cbiAgICAgICAgICAgIGNoYXJ0PXt0aGlzLnN0YXRlLmNoYXJ0fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICBcbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXHRcdFxuXHRcbn1cblxuZXhwb3J0IGRlZmF1bHQgTWFpbjsiXSwibmFtZXMiOlsiUmVhY3QiLCJDb21wb25lbnQiLCJkeW5hbWljIiwiQ2FsZW5kYXIiLCJDbG9jayIsIkNhbGN1bGF0ZSIsIkZvbnRBd2Vzb21lSWNvbiIsImZhQW5nbGVMZWZ0IiwiZmFDb21wcmVzc0FsdCIsImZhRXhwYW5kQWx0IiwiU2VtYSIsIkxvY2F0ZU1hcCIsInNzciIsIk1haW4iLCJwcm9wcyIsInNldFN0YXRlIiwiZnVsbHNjIiwic3RhdGUiLCJjYWxsZW5kYXIiLCJjaGFydCIsIm1vbnRoX25hbWVzIiwiY2FsZW5kYXJfZGF5cyIsImRheXNvZm1vbnRocyIsImNhbGVuZGFyIiwibWFwIiwicmVhZHkiLCJtb250aExpc3QiLCJjbG9jayIsInllYXIiLCJtb250aCIsImRheSIsImhvdXIiLCJtaW51dGUiLCJsb25naXR1ZGUiLCJsYXRpdHVkZSIsInNjcmVlbldpZHRoIiwib3BhY2l0eSIsImhhbmRsZUJhY2siLCJkaXNwbGF5IiwiZGF0ZVN0YXRlIiwiY2xvY2tTdGF0ZSIsIm1hcFN0YXRlIiwiY2hhcnRTdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/main.js\n");

/***/ }),

/***/ "./components/skymap/sky.js":
/*!**********************************!*\
  !*** ./components/skymap/sky.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/regenerator */ \"./node_modules/next/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var d3_celestial__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! d3-celestial */ \"./node_modules/d3-celestial/celestial.js\");\n/* harmony import */ var d3_celestial__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(d3_celestial__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\n\n\n\n\nvar _jsxFileName = \"/home/dnc/tellmyfuture_next/components/skymap/sky.js\";\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar Celestial = d3_celestial__WEBPACK_IMPORTED_MODULE_10___default().Celestial();\n\nvar Sema = /*#__PURE__*/function (_Component) {\n  (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__.default)(Sema, _Component);\n\n  var _super = _createSuper(Sema);\n\n  function Sema(props) {\n    var _this;\n\n    (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__.default)(this, Sema);\n\n    _this = _super.call(this, props);\n\n    (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__.default)((0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__.default)(_this), \"componentDidMount\", /*#__PURE__*/(0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)( /*#__PURE__*/_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_8___default().mark(function _callee() {\n      var config;\n      return _home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_8___default().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.setState({\n                lon: _this.props.lon,\n                lat: _this.props.lat,\n                year: _this.props.year,\n                month: _this.props.month,\n                day: _this.props.day,\n                hour: _this.props.hour,\n                minute: _this.props.minute\n              });\n\n            case 2:\n              config = {\n                width: 0,\n                // Default width, 0 = full parent width; height is determined by projection\n                projection: \"aitoff\",\n                // Map projection used: airy, aitoff, armadillo, august, azimuthalEqualArea, azimuthalEquidistant, baker, berghaus, boggs, bonne, bromley, collignon, craig, craster, cylindricalEqualArea, cylindricalStereographic, eckert1, eckert2, eckert3, eckert4, eckert5, eckert6, eisenlohr, equirectangular, fahey, foucaut, ginzburg4, ginzburg5, ginzburg6, ginzburg8, ginzburg9, gringorten, hammer, hatano, healpix, hill, homolosine, kavrayskiy7, lagrange, larrivee, laskowski, loximuthal, mercator, miller, mollweide, mtFlatPolarParabolic, mtFlatPolarQuartic, mtFlatPolarSinusoidal, naturalEarth, nellHammer, orthographic, patterson, polyconic, rectangularPolyconic, robinson, sinusoidal, stereographic, times, twoPointEquidistant, vanDerGrinten, vanDerGrinten2, vanDerGrinten3, vanDerGrinten4, wagner4, wagner6, wagner7, wiechel, winkel3\n                projectionRatio: null,\n                // Optional override for default projection ratio\n                transform: \"equatorial\",\n                // Coordinate transformation: equatorial (default), ecliptic, galactic, supergalactic\n                center: null,\n                // Initial center coordinates in equatorial transformation [hours, degrees, degrees],\n                // otherwise [degrees, degrees, degrees], 3rd parameter is orientation, null = default center\n                orientationfixed: true,\n                // Keep orientation angle the same as center[2]\n                background: {\n                  fill: \"#000000\",\n                  stroke: \"#000000\",\n                  opacity: 1\n                },\n                // Background style\n                adaptable: true,\n                // Sizes are increased with higher zoom-levels\n                interactive: true,\n                // Enable zooming and rotation with mousewheel and dragging\n                disableAnimations: false,\n                // Disable all animations\n                form: false,\n                // Display settings form\n                location: false,\n                // Display location settings\n                controls: false,\n                // Display zoom controls\n                lang: \"\",\n                // Language for names, so far only for constellations: de: german, es: spanish\n                // Default:en or empty string for english\n                container: \"celestial-map\",\n                // ID of parent element, e.g. div\n                datapath: \"../data/\",\n                // Path/URL to data files, empty = subfolder 'data'\n                stars: {\n                  show: true,\n                  // Show stars\n                  limit: 6,\n                  // Show only stars brighter than limit magnitude\n                  colors: true,\n                  // Show stars in spectral colors, if not use \"color\"\n                  style: {\n                    fill: \"#ffffff\",\n                    opacity: 1\n                  },\n                  // Default style for stars\n                  names: false,\n                  // Show star names (Bayer, Flamsteed, Variable star, Gliese, whichever applies first)\n                  proper: true,\n                  // Show proper name (if present)\n                  desig: false,\n                  // Show all names, including Draper and Hipparcos\n                  namelimit: 2.5,\n                  // Show only names for stars brighter than namelimit\n                  namestyle: {\n                    fill: \"#ddddbb\",\n                    font: \"11px Georgia, Times, 'Times Roman', serif\",\n                    align: \"left\",\n                    baseline: \"top\"\n                  },\n                  propernamestyle: {\n                    fill: \"#ddddbb\",\n                    font: \"11px Georgia, Times, 'Times Roman', serif\",\n                    align: \"right\",\n                    baseline: \"bottom\"\n                  },\n                  propernamelimit: 1.5,\n                  // Show proper names for stars brighter than propernamelimit\n                  size: 7,\n                  // Maximum size (radius) of star circle in pixels\n                  exponent: -0.28,\n                  // Scale exponent for star size, larger = more linear\n                  data: 'stars.6.json' // Data source for stellar data\n                  //data: 'stars.8.json' // Alternative deeper data source for stellar data\n\n                },\n                dsos: {\n                  show: false,\n                  // Show Deep Space Objects\n                  limit: 6,\n                  // Show only DSOs brighter than limit magnitude\n                  names: false,\n                  // Show DSO names\n                  desig: false,\n                  // Show short DSO names\n                  namelimit: 4,\n                  // Show only names for DSOs brighter than namelimit\n                  namestyle: {\n                    fill: \"#cccccc\",\n                    font: \"11px Helvetica, Arial, serif\",\n                    align: \"left\",\n                    baseline: \"top\"\n                  },\n                  size: null,\n                  // Optional seperate scale size for DSOs, null = stars.size\n                  exponent: 1.4,\n                  // Scale exponent for DSO size, larger = more non-linear\n                  data: 'dsos.bright.json',\n                  // Data source for DSOs\n                  //data: 'dsos.6.json'  // Alternative broader data source for DSOs\n                  //data: 'dsos.14.json' // Alternative deeper data source for DSOs\n                  symbols: {\n                    //DSO symbol styles\n                    gg: {\n                      shape: \"circle\",\n                      fill: \"#ff0000\"\n                    },\n                    // Galaxy cluster\n                    g: {\n                      shape: \"ellipse\",\n                      fill: \"#ff0000\"\n                    },\n                    // Generic galaxy\n                    s: {\n                      shape: \"ellipse\",\n                      fill: \"#ff0000\"\n                    },\n                    // Spiral galaxy\n                    s0: {\n                      shape: \"ellipse\",\n                      fill: \"#ff0000\"\n                    },\n                    // Lenticular galaxy\n                    sd: {\n                      shape: \"ellipse\",\n                      fill: \"#ff0000\"\n                    },\n                    // Dwarf galaxy\n                    e: {\n                      shape: \"ellipse\",\n                      fill: \"#ff0000\"\n                    },\n                    // Elliptical galaxy\n                    i: {\n                      shape: \"ellipse\",\n                      fill: \"#ff0000\"\n                    },\n                    // Irregular galaxy\n                    oc: {\n                      shape: \"circle\",\n                      fill: \"#ffcc00\",\n                      stroke: \"#ffcc00\",\n                      width: 1.5\n                    },\n                    // Open cluster\n                    gc: {\n                      shape: \"circle\",\n                      fill: \"#ff9900\"\n                    },\n                    // Globular cluster\n                    en: {\n                      shape: \"square\",\n                      fill: \"#ff00cc\"\n                    },\n                    // Emission nebula\n                    bn: {\n                      shape: \"square\",\n                      fill: \"#ff00cc\",\n                      stroke: \"#ff00cc\",\n                      width: 2\n                    },\n                    // Generic bright nebula\n                    sfr: {\n                      shape: \"square\",\n                      fill: \"#cc00ff\",\n                      stroke: \"#cc00ff\",\n                      width: 2\n                    },\n                    // Star forming region\n                    rn: {\n                      shape: \"square\",\n                      fill: \"#00ooff\"\n                    },\n                    // Reflection nebula\n                    pn: {\n                      shape: \"diamond\",\n                      fill: \"#00cccc\"\n                    },\n                    // Planetary nebula\n                    snr: {\n                      shape: \"diamond\",\n                      fill: \"#ff00cc\"\n                    },\n                    // Supernova remnant\n                    dn: {\n                      shape: \"square\",\n                      fill: \"#999999\",\n                      stroke: \"#999999\",\n                      width: 2\n                    },\n                    // Dark nebula grey\n                    pos: {\n                      shape: \"marker\",\n                      fill: \"#cccccc\",\n                      stroke: \"#cccccc\",\n                      width: 1.5\n                    } // Generic marker\n\n                  }\n                },\n                mw: {\n                  show: false,\n                  // Show Milky Way as filled polygons\n                  style: {\n                    fill: \"#ffffff\",\n                    opacity: \"0.15\"\n                  }\n                },\n                constellations: {\n                  show: false,\n                  // Show constellations\n                  names: true,\n                  // Show constellation names\n                  desig: true,\n                  // Show short constellation names (3 letter designations)\n                  namestyle: {\n                    fill: \"#cccc99\",\n                    align: \"center\",\n                    baseline: \"middle\",\n                    opacity: 0.8,\n                    font: [\"10px\", // Different fonts for brighter &\n                    \"8px\", // sdarker constellations\n                    \"6px\"]\n                  },\n                  lines: true,\n                  // Show constellation lines\n                  linestyle: {\n                    stroke: \"#cccccc\",\n                    width: 1,\n                    opacity: 0.6\n                  },\n                  bounds: false,\n                  // Show constellation boundaries\n                  boundstyle: {\n                    stroke: \"#cccc00\",\n                    width: 0.5,\n                    opacity: 0.8,\n                    dash: [2, 4]\n                  }\n                },\n                lines: {\n                  graticule: {\n                    show: true,\n                    stroke: \"#cccccc\",\n                    width: 0.3,\n                    opacity: 0.5,\n                    // Show graticule lines\n                    // grid values: \"outline\", \"center\", or [lat,...] specific position\n                    lon: {\n                      pos: [\"center\"],\n                      fill: \"#eee\",\n                      font: \"6px\"\n                    },\n                    // grid values: \"outline\", \"center\", or [lon,...] specific position\n                    lat: {\n                      pos: [\"center\"],\n                      fill: \"#eee\",\n                      font: \"6px\"\n                    }\n                  },\n                  equatorial: {\n                    show: true,\n                    stroke: \"#aaaaaa\",\n                    width: 1.3,\n                    opacity: 0.7\n                  },\n                  // Show equatorial plane\n                  ecliptic: {\n                    show: false,\n                    stroke: \"#66cc66\",\n                    width: 1.3,\n                    opacity: 0.7\n                  },\n                  // Show ecliptic plane\n                  galactic: {\n                    show: false,\n                    stroke: \"#cc6666\",\n                    width: 1.3,\n                    opacity: 0.7\n                  },\n                  // Show galactic plane\n                  supergalactic: {\n                    show: false,\n                    stroke: \"#cc66cc\",\n                    width: 1.3,\n                    opacity: 0.7\n                  } // Show supergalactic plane\n\n                }\n              };\n              Celestial.display(config);\n              Celestial.skyview({\n                \"location\": [_this.state.lon, _this.state.lat],\n                \"date\": new Date(Date.UTC(_this.state.year, _this.state.month, _this.state.day, _this.state.hour, _this.state.minute))\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _this.state = {\n      lon: 0,\n      lat: 0,\n      year: 0,\n      month: 0,\n      day: 0,\n      hour: 0,\n      minute: 0\n    };\n    return _this;\n  }\n\n  (0,_home_dnc_tellmyfuture_next_node_modules_next_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__.default)(Sema, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxDEV)(\"div\", {\n          id: \"celestial-map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return Sema;\n}(react__WEBPACK_IMPORTED_MODULE_9__.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sema);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/skymap/sky.js\n");

/***/ }),

/***/ "./node_modules/d3-celestial/celestial.js":
/*!************************************************!*\
  !*** ./node_modules/d3-celestial/celestial.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("// Copyright 2015-2020 Olaf Frohn https://github.com/ofrohn, see LICENSE\n!(function() {\r\nvar Celestial = {\r\n  version: '0.7.35',\r\n  container: null,\r\n  data: []\r\n};\r\n\r\nvar ANIMDISTANCE = 0.035,  // Rotation animation threshold, ~2deg in radians\r\n    ANIMSCALE = 1.4,       // Zoom animation threshold, scale factor\r\n    ANIMINTERVAL_R = 2000, // Rotation duration scale in ms\r\n    ANIMINTERVAL_P = 2500, // Projection duration in ms\r\n    ANIMINTERVAL_Z = 1500, // Zoom duration scale in ms\r\n    zoomextent = 10,       // Default maximum extent of zoom (max/min)\r\n    zoomlevel = 1;         // Default zoom level, 1 = 100%\r\n\r\nvar cfg, mapProjection, parentElement, zoom, map, circle, daylight, starnames = {}, dsonames = {};\r\n\r\n// Show it all, with the given config, otherwise with default settings\r\nCelestial.display = function(config) {\r\n  var animationID,\r\n      container = Celestial.container,\r\n      animations = [], \r\n      current = 0, \r\n      repeat = false;\r\n  \r\n  //Mash config with default settings, todo: if globalConfig exists, make another one\r\n  cfg = settings.set(config).applyDefaults(config);\r\n  if (isNumber(cfg.zoomextend)) zoomextent = cfg.zoomextend;\r\n  if (isNumber(cfg.zoomlevel)) zoomlevel = cfg.zoomlevel;\r\n  //if (cfg.disableAnimations) ANIMDISTANCE = Infinity;\r\n\r\n  var parent = document.getElementById(cfg.container);\r\n  if (parent) { \r\n    parentElement = \"#\" + cfg.container;\r\n    var st = window.getComputedStyle(parent, null);\r\n    if (!parseInt(st.width) && !cfg.width) parent.style.width = px(parent.parentNode.clientWidth); \r\n  } else { \r\n    parentElement = \"body\"; \r\n    parent = null; \r\n  }\r\n   \r\n  var margin = [16, 16],\r\n      width = getWidth(),\r\n      canvaswidth = isNumber(cfg.background.width) ? width + cfg.background.width : width,\r\n      pixelRatio = window.devicePixelRatio || 1,\r\n      projectionSetting = getProjection(cfg.projection, cfg.projectionRatio);\r\n\r\n  if (!projectionSetting) return;\r\n\r\n  if (cfg.lines.graticule.lat && cfg.lines.graticule.lat.pos[0] === \"outline\") projectionSetting.scale -= 2;\r\n        \r\n  var ratio = projectionSetting.ratio,\r\n      height = Math.round(width / ratio),\r\n      canvasheight = Math.round(canvaswidth / ratio),\r\n      scale = projectionSetting.scale * width/1024,\r\n      starbase = cfg.stars.size, \r\n      dsobase = cfg.dsos.size || starbase,\r\n      starexp = cfg.stars.exponent,\r\n      dsoexp = cfg.dsos.exponent || starexp, //Object size base & exponent\r\n      adapt = 1,\r\n      rotation = getAngles(cfg.center),\r\n      path = cfg.datapath;\r\n     \r\n  if (parentElement !== \"body\") parent.style.height = px(canvasheight);\r\n  \r\n  mapProjection = Celestial.projection(cfg.projection).rotate(rotation).translate([canvaswidth/2, canvasheight/2]).scale(scale * zoomlevel);\r\n    \r\n  zoom = d3.geo.zoom().projection(mapProjection).center([canvaswidth/2, canvasheight/2]).scaleExtent([scale, scale * zoomextent]).on(\"zoom.redraw\", redraw);\r\n  // Set initial zoom level\r\n  scale *= zoomlevel;\r\n\r\n  var canvas = d3.select(parentElement).selectAll(\"canvas\"),\r\n      culture = (cfg.culture !== \"\" && cfg.culture !== \"iau\") ? cfg.culture : \"\";\r\n  \r\n  if (canvas[0].length === 0) canvas = d3.select(parentElement).append(\"canvas\");\r\n  //canvas.attr(\"width\", width).attr(\"height\", height);\r\n  canvas.style(\"width\", px(canvaswidth)).style(\"height\", px(canvasheight)).attr(\"width\", canvaswidth * pixelRatio).attr(\"height\", canvasheight * pixelRatio);\r\n  var context = canvas.node().getContext(\"2d\");  \r\n  context.setTransform(pixelRatio,0,0,pixelRatio,0,0);\r\n\r\n  var graticule = d3.geo.graticule().minorStep([15,10]);\r\n  \r\n  map = d3.geo.path().projection(mapProjection).context(context);\r\n   \r\n  //parent div with id #celestial-map or body\r\n  if (container) container.selectAll(parentElement + \" *\").remove();\r\n  else container = d3.select(parentElement).append(\"container\");\r\n\r\n  if (cfg.interactive) {\r\n    canvas.call(zoom);\r\n    d3.select(parentElement).on('dblclick', function () { zoomBy(1.5625); return false; });\r\n  } else {\r\n    canvas.attr(\"style\", \"cursor: default!important\");\r\n  }\r\n\r\n  setClip(projectionSetting.clip);\r\n\r\n  d3.select(window).on('resize', resize);\r\n\r\n  if (cfg.interactive === true && cfg.controls === true && $(\"celestial-zoomin\") === null) {\r\n    d3.select(parentElement).append(\"input\").attr(\"type\", \"button\").attr(\"id\", \"celestial-zoomin\").attr(\"value\", \"\\u002b\").on(\"click\", function () { zoomBy(1.25); return false; });\r\n    d3.select(parentElement).append(\"input\").attr(\"type\", \"button\").attr(\"id\", \"celestial-zoomout\").attr(\"value\", \"\\u2212\").on(\"click\", function () { zoomBy(0.8); return false; });\r\n  }\r\n  \r\n  circle = d3.geo.circle().angle([90]);  \r\n  daylight = d3.geo.circle().angle([179.9]);\r\n\r\n  form(cfg);\r\n  \r\n  if ($(\"error\") === null) d3.select(\"body\").append(\"div\").attr(\"id\", \"error\");\r\n\r\n  if ($(\"loc\") === null) geo(cfg);\r\n  else if (cfg.location === true && cfg.follow === \"zenith\") rotate({center: Celestial.zenith()});\r\n\r\n  if (cfg.location === true || cfg.formFields.location === true) {\r\n    d3.select(parentElement + \" #location\").style(\"display\", \"inline-block\");\r\n    fldEnable(\"horizon-show\", projectionSetting.clip);\r\n    fldEnable(\"daylight-show\", !projectionSetting.clip);\r\n  }\r\n\r\n  function load() {\r\n    //Background\r\n    setClip(projectionSetting.clip);\r\n    container.append(\"path\").datum(graticule.outline).attr(\"class\", \"outline\"); \r\n    container.append(\"path\").datum(circle).attr(\"class\", \"horizon\");\r\n    container.append(\"path\").datum(daylight).attr(\"class\", \"daylight\");\r\n    //Celestial planes\r\n    if (cfg.transform === \"equatorial\") graticule.minorStep([15,10]);\r\n    else  graticule.minorStep([10,10]);\r\n    for (var key in cfg.lines) {\r\n      if (!has(cfg.lines, key)) continue;\r\n      if (key === \"graticule\") {\r\n        container.append(\"path\").datum(graticule).attr(\"class\", \"graticule\"); \r\n        if (has(cfg.lines.graticule, \"lon\") && cfg.lines.graticule.lon.pos.length > 0) \r\n          container.selectAll(parentElement + \" .gridvalues_lon\")\r\n            .data(getGridValues(\"lon\", cfg.lines.graticule.lon.pos))\r\n            .enter().append(\"path\")\r\n            .attr(\"class\", \"graticule_lon\"); \r\n        if (has(cfg.lines.graticule, \"lat\") && cfg.lines.graticule.lat.pos.length > 0) \r\n          container.selectAll(parentElement + \" .gridvalues_lat\")\r\n            .data(getGridValues(\"lat\", cfg.lines.graticule.lat.pos))\r\n            .enter().append(\"path\")\r\n            .attr(\"class\", \"graticule_lat\"); \r\n      } else {\r\n        container.append(\"path\")\r\n          .datum(d3.geo.circle().angle([90]).origin(transformDeg(poles[key], euler[cfg.transform])) )\r\n          .attr(\"class\", key);\r\n      }\r\n    }\r\n\r\n    //Milky way outline\r\n    d3.json(path + \"mw.json\", function(error, json) {\r\n      if (error) { \r\n        window.alert(\"Data file could not be loaded or doesn't exist. See readme.md\");\r\n        return console.warn(error);  \r\n      }\r\n\r\n      var mw = getData(json, cfg.transform);\r\n      var mw_back = getMwbackground(mw);\r\n\r\n      container.selectAll(parentElement + \" .mway\")\r\n         .data(mw.features)\r\n         .enter().append(\"path\")\r\n         .attr(\"class\", \"mw\");\r\n      container.selectAll(parentElement + \" .mwaybg\")\r\n         .data(mw_back.features)\r\n         .enter().append(\"path\")\r\n         .attr(\"class\", \"mwbg\");\r\n      redraw();\r\n    }); \r\n\r\n    //Constellation names or designation\r\n    d3.json(path + filename(\"constellations\"), function(error, json) {\r\n      if (error) return console.warn(error);\r\n      \r\n      var con = getData(json, cfg.transform);\r\n      container.selectAll(parentElement + \" .constnames\")\r\n         .data(con.features)\r\n         .enter().append(\"text\")\r\n         .attr(\"class\", \"constname\");\r\n         \r\n      Celestial.constellations = getConstellationList(con);\r\n      redraw();\r\n    });\r\n\r\n    //Constellation boundaries\r\n    d3.json(path + filename(\"constellations\", \"borders\"), function(error, json) {\r\n      if (error) return console.warn(error);\r\n      \r\n      //var cb = getData(topojson.feature(json, json.objects.constellations_bounds), cfg.transform);\r\n      var cb = getData(json, cfg.transform);\r\n      \r\n      container.selectAll(parentElement + \" .bounds\")\r\n         .data(cb.features)\r\n         .enter().append(\"path\")\r\n         .attr(\"class\", \"boundaryline\");\r\n      redraw();\r\n    });\r\n\r\n    //Constellation lines\r\n    d3.json(path + filename(\"constellations\", \"lines\"), function(error, json) {\r\n      if (error) return console.warn(error);\r\n\r\n      var conl = getData(json, cfg.transform);\r\n\r\n      container.selectAll(parentElement + \" .lines\")\r\n         .data(conl.features)\r\n         .enter().append(\"path\")\r\n         .attr(\"class\", \"constline\");\r\n\r\n      listConstellations();\r\n      redraw();\r\n    });\r\n    \r\n    //Stars\r\n    d3.json(path + cfg.stars.data, function(error, json) {\r\n      if (error) return console.warn(error);\r\n\r\n      var st = getData(json, cfg.transform);\r\n\r\n      container.selectAll(parentElement + \" .stars\")\r\n         .data(st.features)\r\n         .enter().append(\"path\")\r\n         .attr(\"class\", \"star\");\r\n      redraw();\r\n\r\n    });\r\n\r\n    //Star names\r\n    d3.json(path + filename(\"starnames\"), function(error, json) {\r\n      if (error) return console.warn(error);\r\n      Object.assign(starnames, json);\r\n      redraw();\r\n    });\r\n\r\n    //Deep space objects\r\n    d3.json(path + cfg.dsos.data, function(error, json) {\r\n      if (error) return console.warn(error);\r\n      \r\n      var ds = getData(json, cfg.transform);\r\n\r\n      container.selectAll(parentElement + \" .dsos\")\r\n         .data(ds.features)\r\n         .enter().append(\"path\")\r\n         .attr(\"class\", \"dso\" );\r\n      redraw();\r\n    });\r\n\r\n    //DSO names\r\n    d3.json(path + filename(\"dsonames\"), function(error, json) {\r\n      if (error) return console.warn(error);\r\n      Object.assign(dsonames, json);\r\n      redraw();\r\n    });\r\n\r\n    //Planets, Sun & Moon\r\n    d3.json(path + filename(\"planets\"), function(error, json) {\r\n      if (error) return console.warn(error);\r\n      \r\n      var pl = getPlanets(json, cfg.transform);\r\n\r\n      container.selectAll(parentElement + \" .planets\")\r\n         .data(pl)\r\n         .enter().append(\"path\")\r\n         .attr(\"class\", \"planet\");\r\n      redraw();\r\n    });\r\n\r\n    if (Celestial.data.length > 0) { \r\n      Celestial.data.forEach( function(d) {\r\n        if (has(d, \"file\")) d3.json(d.file, d.callback);\r\n        else setTimeout(d.callback, 0);\r\n      }, this);\r\n    }\r\n  \r\n    if (cfg.lang && cfg.lang != \"\") apply(Celestial.setLanguage(cfg.lang));\r\n    //redraw();\r\n  }\r\n  \r\n  // Zoom by factor; >1 larger <1 smaller \r\n  function zoomBy(factor) {\r\n    if (!factor || factor === 1) return;\r\n    var sc0 = mapProjection.scale(),\r\n        sc1 = sc0 * factor,\r\n        ext = zoom.scaleExtent(),\r\n        interval = ANIMINTERVAL_Z * Math.sqrt(Math.abs(1-factor));\r\n        \r\n    if (sc1 < ext[0]) sc1 = ext[0];\r\n    if (sc1 > ext[1]) sc1 = ext[1];\r\n    if (cfg.disableAnimations === true) { \r\n      mapProjection.scale(sc1); \r\n      zoom.scale(sc1); \r\n      redraw(); \r\n      return 0; \r\n    }\r\n    var zTween = d3.interpolateNumber(sc0, sc1);\r\n    d3.select({}).transition().duration(interval).tween(\"scale\", function () {\r\n        return function(t) {\r\n          var z = zTween(t);\r\n          mapProjection.scale(z); \r\n          redraw(); \r\n        };\r\n    }).transition().duration(0).tween(\"scale\", function () {\r\n      zoom.scale(sc1); \r\n      redraw(); \r\n    });\r\n    return interval;\r\n  }  \r\n  \r\n  function apply(config) {\r\n    cfg = settings.set(config); \r\n    redraw();\r\n  }\r\n\r\n\r\n  function rotate(config) {\r\n    var cFrom = cfg.center, \r\n        rot = mapProjection.rotate(),\r\n        sc = mapProjection.scale(),\r\n        interval = ANIMINTERVAL_R,\r\n        keep = false, \r\n        cTween, zTween, oTween,\r\n        oof = cfg.orientationfixed;\r\n    \r\n    if (Round(rot[1], 1) === -Round(config.center[1], 1)) keep = true; //keep lat fixed if equal\r\n    cfg = cfg.set(config);\r\n    var d = Round(d3.geo.distance(cFrom, cfg.center), 2);\r\n    var o = d3.geo.distance([cFrom[2],0], [cfg.center[2],0]);\r\n    if ((d < ANIMDISTANCE && o < ANIMDISTANCE) || cfg.disableAnimations === true) { \r\n      rotation = getAngles(cfg.center);\r\n      mapProjection.rotate(rotation);\r\n      redraw();\r\n      return 0; \r\n    } \r\n    // Zoom interpolator\r\n    if (sc > scale * ANIMSCALE) zTween = d3.interpolateNumber(sc, scale);\r\n    else zTween = function () { return sc; };\r\n    // Orientation interpolator\r\n    if (o === 0) oTween = function () { return rot[2]; };\r\n    else oTween = interpolateAngle(cFrom[2], cfg.center[2]);\r\n    if (d > 3.14) cfg.center[0] -= 0.01; //180deg turn doesn't work well\r\n    cfg.orientationfixed = false;  \r\n    // Rotation interpolator\r\n    if (d === 0) cTween = function () { return cfg.center; };\r\n    else cTween = d3.geo.interpolate(cFrom, cfg.center);\r\n    interval = (d !== 0) ? interval * d : interval * o; // duration scaled by ang. distance\r\n    d3.select({}).transition().duration(interval).tween(\"center\", function () {\r\n      return function(t) {\r\n        var c = getAngles(cTween(t));\r\n        c[2] = oTween(t);\r\n        var z = t < 0.5 ? zTween(t) : zTween(1-t);\r\n        if (keep) c[1] = rot[1]; \r\n        mapProjection.scale(z);\r\n        mapProjection.rotate(c);\r\n        redraw();\r\n      };\r\n    }).transition().duration(0).tween(\"center\", function () {\r\n      cfg.orientationfixed = oof;\r\n      rotation = getAngles(cfg.center);\r\n      mapProjection.rotate(rotation);\r\n      redraw();\r\n    });\r\n    return interval;\r\n  }\r\n  \r\n  function resize(set) {\r\n    width = getWidth();\r\n    if (cfg.width === width && !set) return;\r\n    height = width/ratio;\r\n    canvaswidth = isNumber(cfg.background.width) ? width + cfg.background.width : width;\r\n    canvasheight = Math.round(canvaswidth / ratio);\r\n\r\n    scale = projectionSetting.scale * width/1024;\r\n    //canvas.attr(\"width\", width).attr(\"height\", height);\r\n    canvas.style(\"width\", px(canvaswidth)).style(\"height\", px(canvasheight)).attr(\"width\", canvaswidth * pixelRatio).attr(\"height\", canvasheight * pixelRatio);\r\n    zoom.scaleExtent([scale, scale * zoomextent]).scale(scale * zoomlevel);\r\n    mapProjection.translate([canvaswidth/2, canvasheight/2]).scale(scale * zoomlevel);\r\n    if (parent) parent.style.height = px(height);\r\n    scale *= zoomlevel;\r\n    redraw();\r\n  }\r\n\r\n  function reproject(config) {\r\n    var prj = getProjection(config.projection, config.projectionRatio);\r\n    if (!prj) return;\r\n    \r\n    var rot = mapProjection.rotate(), ctr = mapProjection.center(), sc = mapProjection.scale(), ext = zoom.scaleExtent(), clip = [],\r\n        prjFrom = Celestial.projection(cfg.projection).center(ctr).translate([canvaswidth/2, canvasheight/2]).scale([ext[0]]),\r\n        interval = ANIMINTERVAL_P, \r\n        delay = 0, clipTween = null,\r\n        rTween = d3.interpolateNumber(ratio, prj.ratio);\r\n\r\n    if (projectionSetting.clip != prj.clip || cfg.disableAnimations === true) {\r\n      interval = 0; // Different clip = no transition\r\n    }\r\n    /*if (projectionSetting.clip !== prj.clip) {\r\n      clipTween = d3.interpolateNumber(projectionSetting.clip ? 90 : 180, prj.clip ? 90 : 180); // Clipangle from - to\r\n    } else*/ setClip(prj.clip);\r\n    \r\n    var prjTo = Celestial.projection(config.projection).center(ctr).translate([canvaswidth/2, canvaswidth/prj.ratio/2]).scale([prj.scale * width/1024]);\r\n    var bAdapt = cfg.adaptable;\r\n\r\n    if (sc > ext[0]) {\r\n      delay = zoomBy(0.1);\r\n      setTimeout(reproject, delay, config);\r\n      return delay + interval;\r\n    }\r\n    \r\n    if (cfg.location || cfg.formFields.location) { \r\n      fldEnable(\"horizon-show\", prj.clip);\r\n      fldEnable(\"daylight-show\", !prj.clip);\r\n    }\r\n    \r\n    mapProjection = projectionTween(prjFrom, prjTo);\r\n    cfg.adaptable = false;\r\n\r\n    d3.select({}).transition().duration(interval).tween(\"projection\", function () {\r\n      return function(_) {\r\n        mapProjection.alpha(_).rotate(rot);\r\n        map.projection(mapProjection);\r\n        /*if (clipTween) mapProjection.clipAngle(clipTween(_));\r\n        else*/setClip(prj.clip);\r\n        ratio = rTween(_);\r\n        height = width/ratio;\r\n        //canvas.attr(\"width\", width).attr(\"height\", height);\r\n        canvas.style(\"width\", px(canvaswidth)).style(\"height\", px(canvasheight)).attr(\"width\", canvaswidth * pixelRatio).attr(\"height\",  canvasheight * pixelRatio);\r\n        if (parent) parent.style.height = px(canvasheight);\r\n        redraw();\r\n      };\r\n    }).transition().duration(0).tween(\"projection\", function () {\r\n      projectionSetting = prj;\r\n      ratio = projectionSetting.ratio;\r\n      height = width / projectionSetting.ratio;\r\n      canvasheight = isNumber(cfg.background.width) ? height + cfg.background.width : height;\r\n      scale = projectionSetting.scale * width/1024;\r\n      //canvas.attr(\"width\", width).attr(\"height\", height);\r\n      canvas.style(\"width\", px(canvaswidth)).style(\"height\", px(canvasheight)).attr(\"width\", canvaswidth * pixelRatio).attr(\"height\", canvasheight * pixelRatio);\r\n      if (parent) parent.style.height = px(canvasheight);\r\n      cfg.projection = config.projection;\r\n      mapProjection = Celestial.projection(config.projection).rotate(rot).translate([canvaswidth/2, canvasheight/2]).scale(scale * zoomlevel);\r\n      map.projection(mapProjection);\r\n      setClip(projectionSetting.clip); \r\n      zoom.projection(mapProjection).scaleExtent([scale, scale * zoomextent]).scale(scale * zoomlevel);\r\n      cfg.adaptable = bAdapt;\r\n      scale *= zoomlevel;\r\n      redraw();\r\n    });\r\n    return interval;\r\n  }\r\n\r\n  \r\n  function redraw() {  \r\n    var rot = mapProjection.rotate();\r\n    \r\n    context.setTransform(pixelRatio,0,0,pixelRatio,0,0);\r\n    if (cfg.adaptable) adapt = Math.sqrt(mapProjection.scale()/scale);\r\n    if (!adapt) adapt = 1;\r\n    starbase = cfg.stars.size;\r\n    starexp = cfg.stars.exponent;\r\n    dsobase = cfg.dsos.size || starbase;\r\n    dsoexp = cfg.dsos.exponent;\r\n    \r\n    if (cfg.orientationfixed && cfg.center.length > 2) {\r\n      rot[2] = cfg.center[2]; \r\n      mapProjection.rotate(rot);\r\n    }\r\n    cfg.center = [-rot[0], -rot[1], rot[2]];\r\n    \r\n    setCenter(cfg.center, cfg.transform);\r\n    clear();\r\n    \r\n    drawOutline();\r\n    \r\n    //Draw all types of objects on the canvas\r\n    if (cfg.mw.show) { \r\n      container.selectAll(parentElement + \" .mw\").each(function(d) { setStyle(cfg.mw.style); map(d); context.fill(); });\r\n      // paint mw-outside in background color\r\n      if (cfg.transform !== \"supergalactic\" && cfg.background.opacity > 0.95)\r\n        container.selectAll(parentElement + \" .mwbg\").each(function(d) { setStyle(cfg.background); map(d); context.fill(); });\r\n    }\r\n    \r\n    for (var key in cfg.lines) {\r\n      if (!has(cfg.lines, key)) continue;\r\n      if (cfg.lines[key].show !== true) continue;\r\n      setStyle(cfg.lines[key]);\r\n      container.selectAll(parentElement + \" .\" + key).attr(\"d\", map);  \r\n      context.stroke(); \r\n    }\r\n\r\n    if (has(cfg.lines.graticule, \"lon\")) {\r\n      setTextStyle(cfg.lines.graticule.lon);\r\n      container.selectAll(parentElement + \" .graticule_lon\").each(function(d, i) { \r\n        if (clip(d.geometry.coordinates)) {\r\n          var pt = mapProjection(d.geometry.coordinates);\r\n          gridOrientation(pt, d.properties.orientation);\r\n          context.fillText(d.properties.value, pt[0], pt[1]); \r\n        }\r\n      });\r\n    }\r\n    \r\n    if (has(cfg.lines.graticule, \"lat\")) {\r\n      setTextStyle(cfg.lines.graticule.lat);\r\n      container.selectAll(parentElement + \" .graticule_lat\").each(function(d, i) { \r\n        if (clip(d.geometry.coordinates)) {\r\n          var pt = mapProjection(d.geometry.coordinates);\r\n          gridOrientation(pt, d.properties.orientation);\r\n          context.fillText(d.properties.value, pt[0], pt[1]); \r\n        }\r\n      });\r\n    }\r\n    \r\n    if (cfg.constellations.bounds) { \r\n      container.selectAll(parentElement + \" .boundaryline\").each(function(d) { \r\n        setStyle(cfg.constellations.boundStyle); \r\n        if (Celestial.constellation) {\r\n          var re = new RegExp(\"\\\\b\" + Celestial.constellation + \"\\\\b\");\r\n          if (d.ids.search(re) !== -1) {\r\n            context.lineWidth *= 1.5;\r\n            context.globalAlpha = 1;\r\n            context.setLineDash([]);\r\n          }\r\n        }\r\n        map(d); \r\n        context.stroke(); \r\n      });\r\n      context.setLineDash([]);\r\n    }\r\n\r\n    if (cfg.constellations.lines) { \r\n      container.selectAll(parentElement + \" .constline\").each(function(d) { \r\n        setStyleA(d.properties.rank, cfg.constellations.lineStyle); \r\n        map(d); \r\n        context.stroke(); \r\n      });\r\n    }\r\n    \r\n    drawOutline(true);    \r\n\r\n    if (cfg.constellations.names) { \r\n      //setTextStyle(cfg.constellations.nameStyle);\r\n      container.selectAll(parentElement + \" .constname\").each( function(d) { \r\n        if (clip(d.geometry.coordinates)) {\r\n          setStyleA(d.properties.rank, cfg.constellations.nameStyle);\r\n          var pt = mapProjection(d.geometry.coordinates);\r\n          context.fillText(constName(d), pt[0], pt[1]); \r\n        }\r\n      });\r\n    }\r\n      \r\n\r\n    if (cfg.stars.show) { \r\n      setStyle(cfg.stars.style);\r\n      container.selectAll(parentElement + \" .star\").each(function(d) {\r\n        if (clip(d.geometry.coordinates) && d.properties.mag <= cfg.stars.limit) {\r\n          var pt = mapProjection(d.geometry.coordinates),\r\n              r = starSize(d);\r\n          context.fillStyle = starColor(d); \r\n          context.beginPath();\r\n          context.arc(pt[0], pt[1], r, 0, 2 * Math.PI);\r\n          context.closePath();\r\n          context.fill();\r\n          if (cfg.stars.designation && d.properties.mag <= cfg.stars.designationLimit*adapt) {\r\n            setTextStyle(cfg.stars.designationStyle);\r\n            context.fillText(starDesignation(d.id), pt[0]+r, pt[1]);\r\n          }\r\n          if (cfg.stars.propername && d.properties.mag <= cfg.stars.propernameLimit*adapt) {\r\n            setTextStyle(cfg.stars.propernameStyle);\r\n            context.fillText(starPropername(d.id), pt[0]-r, pt[1]);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    if (cfg.dsos.show) { \r\n      container.selectAll(parentElement + \" .dso\").each(function(d) {\r\n        if (clip(d.geometry.coordinates) && dsoDisplay(d.properties, cfg.dsos.limit)) {\r\n          var pt = mapProjection(d.geometry.coordinates),\r\n              type = d.properties.type;\r\n          if (cfg.dsos.colors === true) setStyle(cfg.dsos.symbols[type]);\r\n          else setStyle(cfg.dsos.style);\r\n          var r = dsoSymbol(d, pt);\r\n          if (has(cfg.dsos.symbols[type], \"stroke\")) context.stroke();\r\n          else context.fill();\r\n          \r\n          if (cfg.dsos.names && dsoDisplay(d.properties, cfg.dsos.nameLimit*adapt)) {\r\n            setTextStyle(cfg.dsos.nameStyle);\r\n            if (cfg.dsos.colors === true) context.fillStyle = cfg.dsos.symbols[type].fill;\r\n            context.fillText(dsoName(d), pt[0]+r, pt[1]-r);      \r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if ((cfg.location || cfg.formFields.location) && cfg.planets.show && Celestial.origin) { \r\n      var dt = Celestial.date(),\r\n          o = Celestial.origin(dt).spherical();\r\n      container.selectAll(parentElement + \" .planet\").each(function(d) {\r\n        var id = d.id(), r = 12 * adapt,\r\n            p = d(dt).equatorial(o),\r\n            pos = transformDeg(p.ephemeris.pos, euler[cfg.transform]);  //transform; \r\n        if (clip(pos)) {\r\n          var pt = mapProjection(pos),\r\n              sym = cfg.planets.symbols[id];\r\n          if (cfg.planets.symbolType === \"letter\") {\r\n            setTextStyle(cfg.planets.symbolStyle);\r\n            context.fillStyle = sym.fill;\r\n            context.fillText(sym.letter, pt[0], pt[1]);\r\n          } else if (id === \"lun\") {\r\n            if (has(sym, \"size\") && isNumber(sym.size)) r = sym.size * adapt;\r\n            context.fillStyle = sym.fill;\r\n            Canvas.symbol().type(\"crescent\").size(r*r).age(p.ephemeris.age).position(pt)(context);\r\n          } else if (cfg.planets.symbolType === \"disk\") {\r\n            r = has(sym, \"size\") && isNumber(sym.size) ? sym.size * adapt : planetSize(p.ephemeris);\r\n            context.fillStyle = sym.fill;\r\n            Canvas.symbol().type(\"circle\").size(r*r).position(pt)(context);\r\n            context.fill();\r\n          } else if (cfg.planets.symbolType === \"symbol\") {\r\n            setTextStyle(cfg.planets.symbolStyle);\r\n            context.font = planetSymbol(cfg.planets.symbolStyle.font);\r\n            context.fillStyle = sym.fill;\r\n            context.fillText(sym[cfg.planets.symbolType], pt[0], pt[1]);            \r\n          }\r\n          //name\r\n          if (cfg.planets.names) {\r\n            var name = p[cfg.planets.namesType];\r\n            setTextStyle(cfg.planets.nameStyle);\r\n            //context.direction = \"ltr\" || \"rtl\" ar il ir\r\n            context.fillStyle = sym.fill;\r\n            context.fillText(name, pt[0] - r/2, pt[1] + r/2);                        \r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    if (Celestial.data.length > 0) { \r\n      Celestial.data.forEach( function(d) {\r\n        d.redraw();\r\n      });\r\n    }\r\n    \r\n    if ((cfg.location || cfg.formFields.location) && cfg.daylight.show && projectionSetting.clip) {\r\n      var sol = getPlanet(\"sol\");\r\n      if (sol) {\r\n        var up = Celestial.zenith(),\r\n            solpos = sol.ephemeris.pos,\r\n            dist = d3.geo.distance(up, solpos),\r\n            pt = mapProjection(solpos);\r\n\r\n        daylight.origin(solpos);\r\n        setSkyStyle(dist, pt);\r\n        container.selectAll(parentElement + \" .daylight\").datum(daylight).attr(\"d\", map);\r\n        context.fill();    \r\n        context.fillStyle = \"#fff\"; \r\n        if (clip(solpos)) {\r\n          context.beginPath();\r\n          context.arc(pt[0], pt[1], 6, 0, 2 * Math.PI);\r\n          context.closePath();\r\n          context.fill();\r\n        }\r\n      }\r\n    }\r\n\r\n    if ((cfg.location || cfg.formFields.location) && cfg.horizon.show && !projectionSetting.clip) {\r\n      circle.origin(Celestial.nadir());\r\n      setStyle(cfg.horizon);\r\n      container.selectAll(parentElement + \" .horizon\").datum(circle).attr(\"d\", map);  \r\n      context.fill(); \r\n      if (cfg.horizon.stroke) context.stroke(); \r\n    }\r\n\r\n    if (cfg.controls) { \r\n      zoomState(mapProjection.scale());\r\n    }\r\n    \r\n    if (hasCallback) { \r\n      Celestial.runCallback();\r\n    }\r\n    \r\n    //Celestial.updateForm();\r\n\r\n  }\r\n    \r\n\r\n  function drawOutline(stroke) {\r\n    var rot = mapProjection.rotate(),\r\n        prj = getProjection(cfg.projection, config.projectionRatio);\r\n    \r\n    mapProjection.rotate([0,0]);\r\n    setStyle(cfg.background);\r\n    container.selectAll(parentElement + \" .outline\").attr(\"d\", map);\r\n    if (stroke === true) {\r\n      context.globalAlpha = 1;      \r\n      context.stroke(); \r\n    } else {\r\n      context.fill();\r\n    }\r\n    mapProjection.rotate(rot);\r\n  }\r\n\r\n  // Helper functions -------------------------------------------------\r\n  \r\n  function clip(coords) {\r\n    return projectionSetting.clip && d3.geo.distance(cfg.center, coords) > halfπ ? 0 : 1;\r\n  }\r\n\r\n  function setStyle(s) {\r\n    context.fillStyle = s.fill || null;\r\n    context.strokeStyle = s.stroke || null;\r\n    context.lineWidth = s.width || null;\r\n    context.globalAlpha = s.opacity !== null ? s.opacity : 1;  \r\n    context.font = s.font || null;\r\n    if (has(s, \"dash\")) context.setLineDash(s.dash); else context.setLineDash([]);\r\n    context.beginPath();\r\n  }\r\n\r\n  function setTextStyle(s) {\r\n    context.fillStyle = s.fill;\r\n    context.textAlign = s.align || \"left\";\r\n    context.textBaseline = s.baseline || \"bottom\";\r\n    context.globalAlpha = s.opacity !== null ? s.opacity : 1;  \r\n    context.font = s.font;\r\n  }\r\n\r\n  function setStyleA(rank, s) {\r\n    rank = rank || 1;\r\n    context.fillStyle = isArray(s.fill) ? s.fill[rank-1] : null;\r\n    context.strokeStyle = isArray(s.stroke) ? s.stroke[rank-1] : null;\r\n    context.lineWidth = isArray(s.width) ? s.width[rank-1] : null;\r\n    context.globalAlpha = isArray(s.opacity) ? s.opacity[rank-1] : 1;  \r\n    context.font = isArray(s.font) ? s.font[rank-1] : null;\r\n    if (has(s, \"dash\")) context.setLineDash(s.dash); else context.setLineDash([]);\r\n    context.textAlign = s.align || \"left\";\r\n    context.textBaseline = s.baseline || \"bottom\";\r\n    context.beginPath();\r\n  }\r\n\r\n  function setSkyStyle(dist, pt) {\r\n    var factor, color1, color2, color3,\r\n        upper = 1.36, \r\n        lower = 1.885;\r\n    \r\n    if (dist > lower) {\r\n      context.fillStyle = \"transparent\"; \r\n      context.globalAlpha = 0;\r\n      return;\r\n    }\r\n    \r\n    if (dist <= upper) { \r\n      color1 = \"#daf1fa\";\r\n      color2 = \"#93d7f0\"; \r\n      color3 = \"#57c0e8\"; \r\n      factor = -(upper-dist) / 10; \r\n    } else {\r\n      factor = (dist - upper) / (lower - upper);\r\n      color1 = d3.interpolateLab(\"#daf1fa\", \"#e8c866\")(factor);\r\n      color2 = d3.interpolateLab(\"#93c7d0\", \"#ff854a\")(factor);\r\n      color3 = d3.interpolateLab(\"#57b0c8\", \"#6caae2\")(factor);\r\n    }\r\n    var grad = context.createRadialGradient(pt[0],pt[1],0, pt[0],pt[1],300);\r\n    grad.addColorStop(0, color1);\r\n    grad.addColorStop(0.2+0.4*factor, color2);\r\n    grad.addColorStop(1, color3);\r\n    context.fillStyle = grad;\r\n    context.globalAlpha = 0.9 * (1 - skyTransparency(factor, 1.4));\r\n  }\r\n  \r\n  function skyTransparency(t, a) {\r\n    return (Math.pow(Math.E, t*a) - 1) / (Math.pow(Math.E, a) - 1);\r\n  }\r\n  \r\n  function zoomState(sc) {\r\n    var czi = $(\"celestial-zoomin\"),\r\n        czo = $(\"celestial-zoomout\"),\r\n        defscale = projectionSetting.scale * width/1024;\r\n    if (!czi || !czo) return;\r\n    czi.disabled = sc >= defscale * zoomextent * 0.99;\r\n    czo.disabled = sc <= defscale; \r\n  }\r\n  \r\n  function setClip(setit) {\r\n    if (setit) { mapProjection.clipAngle(90); } \r\n    else { mapProjection.clipAngle(null); }        \r\n  }\r\n  \r\n  function filename(what, sub, ext) {\r\n    var cult = (has(formats[what], culture)) ? \".\" + culture : \"\";\r\n    ext = ext ? \".\" + ext : \".json\";\r\n    sub = sub ? \".\" + sub : \"\";\r\n    return what + sub + cult + ext;\r\n  }\r\n  \r\n  function dsoDisplay(prop, limit) {\r\n    return prop.mag === 999 && Math.sqrt(parseInt(prop.dim)) > limit ||\r\n           prop.mag !== 999 && prop.mag <= limit;\r\n  }\r\n  \r\n  function dsoSymbol(d, pt) {\r\n    var prop = d.properties;\r\n    var size = dsoSize(prop) || 9,\r\n        type = dsoShape(prop.type);\r\n    Canvas.symbol().type(type).size(size).position(pt)(context);\r\n    return Math.sqrt(size)/2;\r\n  }\r\n\r\n  function dsoShape(type) {\r\n    if (!type || !has(cfg.dsos.symbols, type)) return \"circle\"; \r\n    else return cfg.dsos.symbols[type].shape; \r\n  }\r\n\r\n  function dsoSize(prop) {\r\n    if (!prop.mag || prop.mag === 999) return Math.pow(parseInt(prop.dim) * dsobase * adapt / 7, 0.5); \r\n    return Math.pow(2 * dsobase * adapt - prop.mag, dsoexp);\r\n  }\r\n \r\n\r\n  function dsoName(d) {\r\n    //return d.properties[cfg.dsos.namesType]; \r\n    var lang = cfg.dsos.namesType, id = d.id;\r\n    if (lang === \"desig\" || !has(dsonames, id)) return d.properties.desig;\r\n    return has(dsonames[id], lang) ? dsonames[id][lang] : d.properties.desig; \r\n  }\r\n  \r\n  /* Star designation  */\r\n  function starDesignation(id) {\r\n    if (!has(starnames, id)) return \"\";\r\n    return starnames[id][cfg.stars.designationType]; \r\n  }\r\n\r\n  function starPropername(id) {\r\n    var lang = cfg.stars.propernameType;\r\n    if (!has(starnames, id)) return \"\";\r\n    return has(starnames[id], lang) ? starnames[id][lang] : starnames[id].name; \r\n  }\r\n  \r\n  function starSize(d) {\r\n    var mag = d.properties.mag;\r\n    if (mag === null) return 0.1; \r\n    var r = starbase * adapt * Math.exp(starexp * (mag+2));\r\n    return Math.max(r, 0.1);\r\n  }\r\n\r\n  \r\n  function starColor(d) {\r\n    var bv = d.properties.bv;\r\n    if (!cfg.stars.colors || isNaN(bv)) {return cfg.stars.style.fill; }\r\n    return bvcolor(bv);\r\n  }\r\n  \r\n  function constName(d) { \r\n    return d.properties[cfg.constellations.namesType]; \r\n  }\r\n\r\n  function planetSize(d) {\r\n    var mag = d.mag;\r\n    if (mag === null) return 2; \r\n    var r = 4 * adapt * Math.exp(-0.05 * (mag+2));\r\n    return Math.max(r, 2);\r\n  }\r\n \r\n  function planetSymbol(s) {\r\n    var size = s.replace(/(^\\D*)(\\d+)(\\D.+$)/i,'$2');\r\n    size = Math.round(adapt * size);\r\n    return s.replace(/(^\\D*)(\\d+)(\\D.+$)/i,'$1' + size + '$3');\r\n  }\r\n \r\n  function gridOrientation(pos, orient) {\r\n    var o = orient.split(\"\"), h = \"center\", v = \"middle\"; \r\n    for (var i = o.length-1; i >= 0; i--) {\r\n      switch(o[i]) {\r\n        case \"N\": v = \"bottom\"; break;\r\n        case \"S\": v = \"top\"; break;\r\n        case \"E\": h = \"left\"; pos[0] += 2; break;\r\n        case \"W\": h = \"right\";  pos[0] -= 2; break;\r\n      }\r\n    }\r\n    context.textAlign = h;\r\n    context.textBaseline = v;\r\n    return pos;\r\n  }\r\n  \r\n  function clear() {\r\n    context.clearRect(0, 0, canvaswidth + margin[0], canvasheight + margin[1]);\r\n  }\r\n  \r\n  function getWidth() {\r\n    var w = 0;\r\n    if (isNumber(cfg.width) && cfg.width > 0) w = cfg.width;\r\n    else if (parent) w = parent.getBoundingClientRect().width - margin[0] *2;\r\n    else w = window.getBoundingClientRect().width - margin[0]*2;\r\n    //if (isNumber(cfg.background.width)) w -= cfg.background.width;\r\n    return w;\r\n  }\r\n  \r\n  function getProjection(p, ratioOverride) {\r\n    if (!has(projections, p)) return;\r\n    var res = projections[p];\r\n    if (!has(res, \"ratio\")) res.ratio = 2;  // Default w/h ratio 2:1    \r\n    res.ratio = ratioOverride ? ratioOverride : res.ratio;\r\n    return res;\r\n  }\r\n \r\n  \r\n  function animate() {\r\n    if (!animations || animations.length < 1) return;\r\n\r\n    var d, a = animations[current];\r\n    \r\n    switch (a.param) {\r\n      case \"projection\": d = reproject({projection:a.value}); break;\r\n      case \"center\": d = rotate({center:a.value}); break;\r\n      case \"zoom\": d = zoomBy(a.value);\r\n    }\r\n    if (a.callback) setTimeout(a.callback, d);\r\n    current++;\r\n    if (repeat === true && current === animations.length) current = 0;\r\n    d = a.duration === 0 || a.duration < d ? d : a.duration;\r\n    if (current < animations.length) animationID = setTimeout(animate, d);\r\n  }\r\n  \r\n  function stop() {\r\n    clearTimeout(animationID);\r\n    //current = 0;\r\n    //repeat = false;\r\n  }\r\n\r\n  \r\n  // Exported objects and functions for adding data\r\n  this.container = container;\r\n  this.clip = clip;\r\n  this.map = map;\r\n  this.mapProjection = mapProjection;\r\n  this.context = context;\r\n  this.metrics = function() {\r\n    return {\"width\": width, \"height\": height, \"margin\": margin, \"scale\": mapProjection.scale()};\r\n  };\r\n  this.setStyle = setStyle;\r\n  this.setTextStyle = setTextStyle;\r\n  this.setStyleA = setStyleA;\r\n  this.setConstStyle = function(rank, font) { \r\n    var f = arrayfy(font);\r\n    context.font = f[rank];    \r\n  };\r\n  this.symbol = Canvas.symbol;\r\n  this.dsoSymbol = dsoSymbol;\r\n  this.redraw = redraw; \r\n  this.resize = function(config) { \r\n    if (config !== undefined) {  \r\n      if (has(config, \"width\")) cfg.width = config.width; \r\n      else if (isNumber(config)) cfg.width = config;\r\n    }\r\n    resize(true); \r\n    return cfg.width;\r\n  }; \r\n  this.reload = function(config) { \r\n    var ctr;\r\n    //if (!config || !has(config, \"transform\")) return;\r\n    //cfg.transform = config.transform; \r\n    if (config) Object.assign(cfg, settings.set(config));\r\n    if (cfg.follow === \"center\" && has(cfg, \"center\")) {\r\n      ctr = getAngles(cfg.center);\r\n    } else if (cfg.follow === \"zenith\") {\r\n      ctr = getAngles(Celestial.zenith());\r\n    } \r\n    if (ctr) mapProjection.rotate(ctr);\r\n    container.selectAll(parentElement + \" *\").remove(); \r\n    load(); \r\n  }; \r\n  this.apply = function(config) { apply(config); }; \r\n  this.reproject = function(config) { return reproject(config); }; \r\n  this.rotate = function(config) { if (!config) return cfg.center; return rotate(config); }; \r\n  this.zoomBy = function(factor) { if (!factor) return mapProjection.scale()/scale; return zoomBy(factor); };\r\n  this.color = function(type) {\r\n    if (!type) return \"#000\";\r\n    if (has(cfg.dsos.symbols, type)) return cfg.dsos.symbols[type].fill;\r\n    return \"#000\";\r\n  };\r\n  this.starColor = starColor;\r\n  this.animate = function(anims, dorepeat) { \r\n    if (!anims) return; \r\n    animations = anims; \r\n    current = 0; \r\n    repeat = dorepeat ? true : false; \r\n    animate(); \r\n  };\r\n  this.stop  = function(wipe) {\r\n    stop();\r\n    if (wipe === true) animations = [];\r\n  };\r\n  this.go = function(index) {\r\n    if (animations.length < 1) return;\r\n    if (index && index < animations.length) current = index;\r\n    animate(); \r\n  };\r\n\r\n  /* obsolete\r\n  if (!has(this, \"date\"))\r\n    this.date = function() { console.log(\"Celestial.date() needs config.location = true to work.\" ); };\r\n  */\r\n  load();\r\n};\r\n \r\n//Export entire object if invoked by require\r\nif ( true && module.exports) {\r\n  var d3js = __webpack_require__(/*! ./lib/d3.js */ \"./node_modules/d3-celestial/lib/d3.js\"),\r\n      d3_geo_projection = __webpack_require__(/*! ./lib/d3.geo.projection.js */ \"./node_modules/d3-celestial/lib/d3.geo.projection.js\");\r\n  module.exports = {\r\n    Celestial: function() { return Celestial; },\r\n    d3: function() { return d3js; },\r\n    \"d3.geo.projection\": function() { return d3_geo_projection; }\r\n  };\r\n}\r\n\r\n//Flipped projection generated on the fly\r\nCelestial.projection = function(projection) {\r\n  var p, raw, forward;\r\n  \r\n  if (!has(projections, projection)) { throw new Error(\"Projection not supported: \" + projection); }\r\n  p = projections[projection];    \r\n\r\n  if (p.arg !== null) {\r\n    raw = d3.geo[projection].raw(p.arg);\r\n  } else {\r\n    raw = d3.geo[projection].raw;  \r\n  }\r\n  \r\n  forward = function(λ, φ) {\r\n    var coords = raw(-λ, φ);\r\n    return coords;\r\n  };\r\n\r\n  forward.invert = function(x, y) {\r\n    try {\r\n      var coords = raw.invert(x, y);\r\n      coords[0] = coords && -coords[0];\r\n      return coords;\r\n    } catch(e) { console.log(e); }\r\n  };\r\n\r\n  return d3.geo.projection(forward);\r\n};\r\n\r\n\r\nfunction projectionTween(a, b) {\r\n  var prj = d3.geo.projection(raw).scale(1),\r\n      center = prj.center,\r\n      translate = prj.translate,\r\n      α;\r\n\r\n  function raw(λ, φ) {\r\n    var pa = a([λ *= 180 / Math.PI, φ *= 180 / Math.PI]), pb = b([λ, φ]);\r\n    return [(1 - α) * pa[0] + α * pb[0], (α - 1) * pa[1] - α * pb[1]];\r\n  }\r\n\r\n  prj.alpha = function(_) {\r\n    if (!arguments.length) return α;\r\n    α = +_;\r\n    var ca = a.center(), cb = b.center(),\r\n        ta = a.translate(), tb = b.translate();\r\n    \r\n    center([(1 - α) * ca[0] + α * cb[0], (1 - α) * ca[1] + α * cb[1]]);\r\n    translate([(1 - α) * ta[0] + α * tb[0], (1 - α) * ta[1] + α * tb[1]]);\r\n    return prj;\r\n  };\r\n\r\n  delete prj.translate;\r\n  delete prj.center;\r\n  return prj.alpha(0);\r\n}\r\n\r\nvar eulerAngles = {\r\n  \"equatorial\": [0.0, 0.0, 0.0],\r\n  \"ecliptic\": [0.0, 0.0, 23.4393],\r\n  \"galactic\": [93.5949, 28.9362, -58.5988],\r\n  \"supergalactic\": [137.3100, 59.5283, 57.7303]\r\n//  \"mars\": [97.5,23.5,29]\r\n};\r\n\r\nvar poles = {\r\n  \"equatorial\": [0.0, 90.0],\r\n  \"ecliptic\": [-90.0, 66.5607],\r\n  \"galactic\": [-167.1405, 27.1283],\r\n  \"supergalactic\": [-76.2458, 15.7089]\r\n//  \"mars\": [-42.3186, 52.8865]\r\n};\r\n\r\nCelestial.eulerAngles = function () { return eulerAngles; };\r\nCelestial.poles = function () { return poles; };\r\n\r\nvar τ = Math.PI*2,\r\n    halfπ = Math.PI/2,\r\n    deg2rad = Math.PI/180;\r\n\r\n\r\n//Transform equatorial into any coordinates, degrees\r\nfunction transformDeg(c, euler) {\r\n  var res = transform( c.map( function(d) { return d * deg2rad; } ), euler);\r\n  return res.map( function(d) { return d / deg2rad; } );\r\n}\r\n\r\n//Transform equatorial into any coordinates, radians\r\nfunction transform(c, euler) {\r\n  var x, y, z, β, γ, λ, φ, dψ, ψ, θ,\r\n      ε = 1.0e-5;\r\n\r\n  if (!euler) return c; \r\n\r\n  λ = c[0];  // celestial longitude 0..2pi\r\n  if (λ < 0) λ += τ; \r\n  φ = c[1];  // celestial latitude  -pi/2..pi/2\r\n  \r\n  λ -= euler[0];  // celestial longitude - celestial coordinates of the native pole\r\n  β = euler[1];  // inclination between the poles (colatitude)\r\n  γ = euler[2];  // native coordinates of the celestial pole\r\n  \r\n  x = Math.sin(φ) * Math.sin(β) - Math.cos(φ) * Math.cos(β) * Math.cos(λ);\r\n  if (Math.abs(x) < ε) {\r\n    x = -Math.cos(φ + β) + Math.cos(φ) * Math.cos(β) * (1 - Math.cos(λ));\r\n  }\r\n  y = -Math.cos(φ) * Math.sin(λ);\r\n  \r\n  if (x !== 0 || y !== 0) {\r\n    dψ = Math.atan2(y, x);\r\n  } else {\r\n    dψ = λ - Math.PI;\r\n  }\r\n  ψ = (γ + dψ); \r\n  if (ψ > Math.PI) ψ -= τ; \r\n  \r\n  if (λ % Math.PI === 0) {\r\n    θ = φ + Math.cos(λ) * β;\r\n    if (θ > halfπ) θ = Math.PI - θ; \r\n    if (θ < -halfπ) θ = -Math.PI - θ; \r\n  } else {\r\n    z = Math.sin(φ) * Math.cos(β) + Math.cos(φ) * Math.sin(β) * Math.cos(λ);\r\n    if (Math.abs(z) > 0.99) {\r\n      θ = Math.abs(Math.acos(Math.sqrt(x*x+y*y)));\r\n      if (z < 0) θ *= -1; \r\n    } else {\r\n      θ = Math.asin(z);\r\n    }\r\n  }\r\n  \r\n  return [ψ, θ];\r\n}\r\n\r\n  \r\nfunction getAngles(coords) {\r\n  if (coords === null || coords.length <= 0) return [0,0,0];\r\n  var rot = eulerAngles.equatorial; \r\n  if (!coords[2]) coords[2] = 0;\r\n  return [rot[0] - coords[0], rot[1] - coords[1], rot[2] + coords[2]];\r\n}\r\n\r\n\r\nvar euler = {\r\n  \"ecliptic\": [-90.0, 23.4393, 90.0],\r\n  \"inverse ecliptic\": [90.0, 23.4393, -90.0],\r\n  \"galactic\": [-167.1405, 62.8717, 122.9319], \r\n  \"inverse galactic\": [122.9319, 62.8717, -167.1405],\r\n  \"supergalactic\": [283.7542, 74.2911, 26.4504],\r\n  \"inverse supergalactic\": [26.4504, 74.2911, 283.7542],\r\n  \"init\": function () {\r\n    for (var key in this) {\r\n      if (this[key].constructor == Array) { \r\n        this[key] = this[key].map( function(val) { return val * deg2rad; } );\r\n      }\r\n    }\r\n  },\r\n  \"add\": function(name, ang) {\r\n    if (!ang || !name || ang.length !== 3 || this.hasOwnProperty(name)) return; \r\n    this[name] = ang.map( function(val) { return val * deg2rad; } );\r\n    return this[name];\r\n  }\r\n};\r\n\r\neuler.init();\r\nCelestial.euler = function () { return euler; };\r\n\r\nvar horizontal = function(dt, pos, loc) {\r\n  //dt: datetime, pos: celestial coordinates [lat,lng], loc: location [lat,lng]  \r\n  var ha = getMST(dt, loc[1]) - pos[0];\r\n  if (ha < 0) ha = ha + 360;\r\n  \r\n  ha  = ha * deg2rad;\r\n  var dec = pos[1] * deg2rad;\r\n  var lat = loc[0] * deg2rad;\r\n\r\n  var alt = Math.asin(Math.sin(dec) * Math.sin(lat) + Math.cos(dec) * Math.cos(lat) * Math.cos(ha));\r\n  var az = Math.acos((Math.sin(dec) - Math.sin(alt) * Math.sin(lat)) / (Math.cos(alt) * Math.cos(lat)));\r\n\r\n  if (Math.sin(ha) > 0) az = Math.PI * 2 - az;\r\n  \r\n  return [alt / deg2rad, az / deg2rad, 0];\r\n};\r\n\r\nhorizontal.inverse = function(dt, hor, loc) {\r\n  \r\n  var alt = hor[0] * deg2rad;\r\n  var az = hor[1] * deg2rad;\r\n  var lat = loc[0] * deg2rad;\r\n   \r\n  var dec = Math.asin((Math.sin(alt) * Math.sin(lat)) + (Math.cos(alt) * Math.cos(lat) * Math.cos(az)));\r\n  var ha = ((Math.sin(alt) - (Math.sin(dec) * Math.sin(lat))) / (Math.cos(dec) * Math.cos(lat))).toFixed(6);\r\n  \r\n  ha = Math.acos(ha);\r\n  ha  = ha / deg2rad;\r\n  \r\n  var ra = getMST(dt, loc[1]) - ha;\r\n  //if (ra < 0) ra = ra + 360;\r\n    \r\n  return [ra, dec / deg2rad, 0];\r\n};\r\n\r\nfunction getMST(dt, lng)\r\n{\r\n    var yr = dt.getUTCFullYear();\r\n    var mo = dt.getUTCMonth() + 1;\r\n    var dy = dt.getUTCDate();\r\n    var h = dt.getUTCHours();\r\n    var m = dt.getUTCMinutes();\r\n    var s = dt.getUTCSeconds();\r\n\r\n    if ((mo == 1)||(mo == 2)) {\r\n        yr  = yr - 1;\r\n        mo = mo + 12;\r\n    }\r\n\r\n    var a = Math.floor(yr / 100);\r\n    var b = 2 - a + Math.floor(a / 4);\r\n    var c = Math.floor(365.25 * yr);\r\n    var d = Math.floor(30.6001 * (mo + 1));\r\n\r\n    // days since J2000.0\r\n    var jd = b + c + d - 730550.5 + dy + (h + m/60.0 + s/3600.0)/24.0;\r\n    \r\n    // julian centuries since J2000.0\r\n    var jt = jd/36525.0;\r\n\r\n    // the mean sidereal time in degrees\r\n    var mst = 280.46061837 + 360.98564736629*jd + 0.000387933*jt*jt - jt*jt*jt/38710000 + lng;\r\n\r\n    // in degrees modulo 360.0\r\n    if (mst > 0.0) \r\n        while (mst > 360.0) mst = mst - 360.0;\r\n    else\r\n        while (mst < 0.0)   mst = mst + 360.0;\r\n        \r\n    return mst;\r\n}\r\n\r\nCelestial.horizontal = horizontal;\r\nCelestial.ha = function(dt, lng, ra) {\r\n  var ha = getMST(dt, lng) - ra;\r\n  if (ha < 180) ha = ha + 360;\r\n  return ha;\r\n};\r\n//Add more JSON data to the map\r\nvar hasCallback = false;\r\n\r\nCelestial.add = function(dat) {\r\n  var res = {};\r\n  //dat: {file: path, type:'json|raw', callback: func(), redraw: func()} \r\n  //or {file:file, size:null, shape:null, color:null}  TBI\r\n  //  with size,shape,color: \"prop=val:result;..\" || function(prop) { .. return res; } \r\n  if (!has(dat, \"type\")) return console.log(\"Missing type\");\r\n  \r\n  if ((dat.type === \"dso\" || dat.type === \"json\") && (!has(dat, \"file\") || !has(dat, \"callback\"))) return console.log(\"Can't add data file\");\r\n  if ((dat.type === \"line\" || dat.type === \"raw\") && !has(dat, \"callback\")) return console.log(\"Can't add data\");\r\n  \r\n  if (has(dat, \"file\")) res.file = dat.file;\r\n  res.type = dat.type;\r\n  if (has(dat, \"callback\")) res.callback = dat.callback;\r\n  if (has(dat, \"redraw\")) res.redraw = dat.redraw;\r\n  if (has(dat, \"save\")) res.save = dat.save;\r\n  Celestial.data.push(res);\r\n};\r\n\r\nCelestial.remove = function(i) {\r\n  if (i !== null && i < Celestial.data.length) {\r\n    return Celestial.data.splice(i,1);\r\n  }\r\n};\r\n\r\nCelestial.clear = function() {\r\n  Celestial.data = [];\r\n};\r\n\r\nCelestial.addCallback = function(dat) {\r\n  Celestial.callback = dat;\r\n  hasCallback = (dat !== null);\r\n};\r\n\r\nCelestial.runCallback = function(dat) {\r\n  hasCallback = false; // avoid recursion\r\n  Celestial.callback();\r\n  hasCallback = true;\r\n};\r\n//load data and transform coordinates\r\n\r\n\r\nfunction getPoint(coords, trans) {\r\n  return transformDeg(coords, euler[trans]);\r\n}\r\n \r\nfunction getData(d, trans) {\r\n  if (trans === \"equatorial\") return d;\r\n\r\n  var leo = euler[trans],\r\n      f = d.features;\r\n\r\n  for (var i=0; i<f.length; i++)\r\n    f[i].geometry.coordinates = translate(f[i], leo);\r\n  \r\n  return d;\r\n}\r\n\r\nfunction getPlanets(d) {\r\n  var res = [];\r\n  \r\n  for (var key in d) {\r\n    if (!has(d, key)) continue;\r\n    if (cfg.planets.which.indexOf(key) === -1) continue;\r\n    var dat = Kepler().id(key);\r\n    if (has(d[key], \"parent\")) dat.parentBody(d[key].parent);\r\n    dat.elements(d[key].elements[0]).params(d[key]);\r\n    if (key === \"ter\") \r\n      Celestial.origin = dat;\r\n    else res.push(dat);\r\n  }\r\n  //res.push(Kepler().id(\"sol\"));\r\n  //res.push(Kepler().id(\"lun\"));\r\n  return res;\r\n}\r\n\r\n\r\nfunction getPlanet(id, dt) {\r\n  dt = dt || Celestial.date();\r\n  if (!Celestial.origin) return;\r\n\r\n  var o = Celestial.origin(dt).spherical(), res;\r\n     \r\n  Celestial.container.selectAll(\".planet\").each(function(d) {\r\n    if (id === d.id()) {\r\n      res = d(dt).equatorial(o);\r\n    }\r\n  });\r\n  return res;\r\n}\r\n\r\nfunction getConstellationList(d) {\r\n  var res = {},\r\n      f = d.features;\r\n      \r\n  for (var i=0; i<f.length; i++) {\r\n    res[f[i].id] = {\r\n      center: f[i].properties.display.slice(0,2),\r\n      scale: f[i].properties.display[2]\r\n    };\r\n  }\r\n  return res;\r\n}\r\n\r\nfunction getMwbackground(d) {\r\n  // geoJson object to darken the mw-outside, prevent greying of whole map in some orientations \r\n  var res = {'type': 'FeatureCollection', 'features': [ {'type': 'Feature', \r\n              'geometry': { 'type': 'MultiPolygon', 'coordinates' : [] }\r\n            }]};\r\n\r\n  // reverse the polygons, inside -> outside\r\n  var l1 = d.features[0].geometry.coordinates[0];\r\n  res.features[0].geometry.coordinates[0] = [];\r\n  for (var i=0; i<l1.length; i++) {\r\n    res.features[0].geometry.coordinates[0][i] = l1[i].slice().reverse();\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction getTimezones() {\r\n  \r\n}\r\n\r\nfunction translate(d, leo) {\r\n  var res = [];\r\n  switch (d.geometry.type) {\r\n    case \"Point\": res = transformDeg(d.geometry.coordinates, leo); break;\r\n    case \"LineString\": res.push(transLine(d.geometry.coordinates, leo)); break;\r\n    case \"MultiLineString\": res = transMultiLine(d.geometry.coordinates, leo); break;\r\n    case \"Polygon\": res.push(transLine(d.geometry.coordinates[0], leo)); break;\r\n    case \"MultiPolygon\": res.push(transMultiLine(d.geometry.coordinates[0], leo)); break;\r\n  }\r\n  \r\n  return res;\r\n}\r\n\r\nfunction getGridValues(type, loc) {\r\n  var lines = [];\r\n  if (!loc) return [];\r\n  if (!isArray(loc)) loc = [loc];\r\n  //center, outline, values\r\n  for (var i=0; i < loc.length; i++) {\r\n    switch (loc[i]) {\r\n      case \"center\": \r\n        if (type === \"lat\")\r\n          lines = lines.concat(getLine(type, cfg.center[0], \"N\"));\r\n        else\r\n          lines = lines.concat(getLine(type, cfg.center[1], \"S\")); \r\n        break;\r\n      case \"outline\": \r\n        if (type === \"lon\") { \r\n          lines = lines.concat(getLine(type, cfg.center[1]-89.99, \"S\"));\r\n          lines = lines.concat(getLine(type, cfg.center[1]+89.99, \"N\"));\r\n        } else {\r\n\t\t\t\t\t// TODO: hemi\r\n          lines = lines.concat(getLine(type, cfg.center[0]-179.99, \"E\"));\r\n          lines = lines.concat(getLine(type, cfg.center[0]+179.99, \"W\"));\r\n        }\r\n        break;\r\n      default: if (isNumber(loc[i])) {\r\n        if (type === \"lat\")\r\n          lines = lines.concat(getLine(type, loc[i], \"N\"));\r\n        else\r\n          lines = lines.concat(getLine(type, loc[i], \"S\")); \r\n        break;        \r\n      }\r\n    }\r\n  }\r\n  //return [{coordinates, value, orientation}, ...]\r\n  return jsonGridValues(lines);\r\n}\r\n\r\nfunction jsonGridValues(lines) {\r\n  var res = [];\r\n  for (var i=0; i < lines.length; i++) {\r\n    var f = {type: \"Feature\", \"id\":i, properties: {}, geometry:{type:\"Point\"}};\r\n    f.properties.value = lines[i].value;\r\n    f.properties.orientation = lines[i].orientation;\r\n    f.geometry.coordinates = lines[i].coordinates;\r\n    res.push(f);\r\n  }\r\n  return res;\r\n}\r\n\r\nfunction getLine(type, loc, orient) {\r\n  var min, max, step, val, coord,\r\n      tp = type,\r\n      res = [],\r\n      lr = loc;\r\n  if (cfg.transform === \"equatorial\" && tp === \"lon\") tp = \"ra\";\r\n  \r\n  if (tp === \"ra\") {\r\n    min = 0; max = 23; step = 1;\r\n  } else if (tp === \"lon\") {\r\n    min = 0; max = 350; step = 10;    \r\n  } else {\r\n    min = -80; max = 80; step = 10;    \r\n  }\r\n  for (var i=min; i<=max; i+=step) {\r\n    var o = orient;\r\n    if (tp === \"lat\") {\r\n      coord = [lr, i];\r\n      val = i.toString() + \"\\u00b0\";\r\n      if (i < 0) o += \"S\"; else o += \"N\";\r\n    } else if (tp === \"ra\") {\r\n      coord = [i * 15, lr];\r\n      val = i.toString() + \"\\u02b0\";\r\n    } else {\r\n      coord = [i, lr];\r\n      val = i.toString() + \"\\u00b0\";\r\n    }\r\n  \r\n    res.push({coordinates: coord, value: val, orientation: o});\r\n  }\r\n  return res;\r\n}\r\n\r\nfunction transLine(c, leo) {\r\n  var line = [];\r\n  \r\n  for (var i=0; i<c.length; i++)\r\n    line.push(transformDeg(c[i], leo));\r\n  \r\n  return line;\r\n}\r\n\r\nfunction transMultiLine(c, leo) {\r\n  var lines = [];\r\n  \r\n  for (var i=0; i<c.length; i++)\r\n    lines.push(transLine(c[i], leo));\r\n  \r\n  return lines;\r\n}\r\n\r\nCelestial.getData = getData;\r\nCelestial.getPoint = getPoint;\r\nCelestial.getPlanet = getPlanet;\r\n\r\n// Central configuration object\r\nvar globalConfig = {};\r\n\r\n//Defaults\r\nvar settings = { \r\n  width: 0,     // Default width; height is determined by projection\r\n  projection: \"aitoff\",  // Map projection used: airy, aitoff, armadillo, august, azimuthalEqualArea, azimuthalEquidistant, baker, berghaus, boggs, bonne, bromley, collignon, craig, craster, cylindricalEqualArea, cylindricalStereographic, eckert1, eckert2, eckert3, eckert4, eckert5, eckert6, eisenlohr, equirectangular, fahey, foucaut, ginzburg4, ginzburg5, ginzburg6, ginzburg8, ginzburg9, gringorten, hammer, hatano, healpix, hill, homolosine, kavrayskiy7, lagrange, larrivee, laskowski, loximuthal, mercator, miller, mollweide, mtFlatPolarParabolic, mtFlatPolarQuartic, mtFlatPolarSinusoidal, naturalEarth, nellHammer, orthographic, patterson, polyconic, rectangularPolyconic, robinson, sinusoidal, stereographic, times, twoPointEquidistant, vanDerGrinten, vanDerGrinten2, vanDerGrinten3, vanDerGrinten4, wagner4, wagner6, wagner7, wiechel, winkel3\r\n  projectionRatio: null, // Optional override for default projection ratio\r\n  transform: \"equatorial\", // Coordinate transformation: equatorial (default), ecliptic, galactic, supergalactic\r\n  center: null,       // Initial center coordinates in equatorial transformation [hours, degrees, degrees], \r\n                      // otherwise [degrees, degrees, degrees], 3rd parameter is orientation, null = default center\r\n  geopos: null,       // optional initial geographic position [lat,lon] in degrees, overrides center\r\n  follow: \"zenith\",   // on which coordinates to center the map, default: zenith, if location enabled, otherwise center\r\n  orientationfixed: true,  // Keep orientation angle the same as center[2]\r\n  zoomlevel: null,    // initial zoom level 0...zoomextend; 0|null = default, 1 = 100%, 0 < x <= zoomextend\r\n  zoomextend: 10,     // maximum zoom level\r\n  adaptable: true,    // Sizes are increased with higher zoom-levels\r\n  interactive: true,  // Enable zooming and rotation with mousewheel and dragging\r\n  disableAnimations: false, // Disable all animations\r\n  form: false,        // Display settings form\r\n  location: false,    // Display location settings, deprecated, use formFields\r\n  // Set visiblity for each group of fields of the form\r\n  formFields: {\"location\": true, \"general\": true, \"stars\": true, \"dsos\": true, \"constellations\": true, \"lines\": true, \"other\": true, download: false},\r\n  advanced: true,     // Display fewer form fields if false\r\n  daterange: [],      // Calender date range; null: displaydate-+10; [n<100]: displaydate-+n; [yr]: yr-+10; \r\n                      // [yr, n<100]: [yr-n, yr+n]; [yr0, yr1]\r\n  settimezone: true,  // Automatcally set time zone when geolocation changes\r\n  timezoneid: \"AEFXZPQ3FDPF\", // Account ID for TimeZoneDB service, please get your own\r\n  controls: true,     // Display zoom controls\r\n  lang: \"\",           // Global language override for names, any name setting that has the chosen language available\r\n                      // Default: desig or empty string for designations, other languages as used anywhere else\r\n  culture: \"\",        // Constellation lines, default \"iau\"\r\n  container: \"celestial-map\",   // ID of parent element, e.g. div\r\n  datapath: \"data/\",  // Path/URL to data files, empty = subfolder 'data'\r\n  stars: {\r\n    show: true,    // Show stars\r\n    limit: 6,      // Show only stars brighter than limit magnitude\r\n    colors: true,  // Show stars in spectral colors, if not use fill-style\r\n    style: { fill: \"#ffffff\", opacity: 1 }, // Default style for stars\r\n    designation: true, // Show star names (Bayer, Flamsteed, Variable star, Gliese or designation, \r\n                       // i.e. whichever of the previous applies first); may vary with culture setting\r\n    designationType: \"desig\",  // Which kind of name is displayed as designation (fieldname in starnames.json)\r\n    designationStyle: { fill: \"#ddddbb\", font: \"11px 'Palatino Linotype', Georgia, Times, 'Times Roman', serif\", align: \"left\", baseline: \"top\" },\r\n    designationLimit: 2.5,  // Show only names for stars brighter than nameLimit\r\n    propername: false,   // Show proper name (if present)\r\n    propernameType: \"name\", // Field in starnames.json that contains proper name; may vary with culture setting\r\n    propernameStyle: { fill: \"#ddddbb\", font: \"13px 'Palatino Linotype', Georgia, Times, 'Times Roman', serif\", align: \"right\", baseline: \"bottom\" },\r\n    propernameLimit: 1.5,  // Show proper names for stars brighter than propernameLimit\r\n    size: 7,       // Scale size (radius) of star circle in pixels\r\n    exponent: -0.28, // Scale exponent for star size, larger = more linear\r\n    data: \"stars.6.json\" // Data source for stellar data\r\n  },\r\n  dsos: {\r\n    show: true,    // Show Deep Space Objects \r\n    limit: 6,      // Show only DSOs brighter than limit magnitude\r\n    colors: true,  // Show DSOs in symbol colors if true, use style setting below if false\r\n    style: { fill: \"#cccccc\", stroke: \"#cccccc\", width: 2, opacity: 1 }, // Default style for dsos\r\n    names: true,   // Show DSO names\r\n    namesType: \"desig\",  // Type of displayed name: desig, name, or 15 different language codes from dsonames.json\r\n    nameStyle: { fill: \"#cccccc\", font: \"11px 'Lucida Sans Unicode', 'DejaVu Sans', Helvetica, Arial, serif\", align: \"left\", baseline: \"bottom\" },\r\n    nameLimit: 4,  // Show only names for DSOs brighter than nameLimit\r\n    size: null,    // Optional seperate scale size for DSOs, null = stars.size\r\n    exponent: 1.4, // Scale exponent for DSO size, larger = more non-linear\r\n    data: \"dsos.bright.json\",  // Data source for DSOs\r\n    symbols: {  // DSO symbol styles\r\n      gg: {shape: \"circle\", fill: \"#ff0000\"},                                 // Galaxy cluster\r\n      g:  {shape: \"ellipse\", fill: \"#ff0000\"},                                // Generic galaxy\r\n      s:  {shape: \"ellipse\", fill: \"#ff0000\"},                                // Spiral galaxy\r\n      s0: {shape: \"ellipse\", fill: \"#ff0000\"},                                // Lenticular galaxy\r\n      sd: {shape: \"ellipse\", fill: \"#ff0000\"},                                // Dwarf galaxy\r\n      e:  {shape: \"ellipse\", fill: \"#ff0000\"},                                // Elliptical galaxy\r\n      i:  {shape: \"ellipse\", fill: \"#ff0000\"},                                // Irregular galaxy\r\n      oc: {shape: \"circle\", fill: \"#ff9900\", stroke: \"#ff9900\", width: 2},    // Open cluster\r\n      gc: {shape: \"circle\", fill: \"#ff9900\"},                                 // Globular cluster\r\n      en: {shape: \"square\", fill: \"#ff00cc\"},                                 // Emission nebula\r\n      bn: {shape: \"square\", fill: \"#ff00cc\"},                                 // Generic bright nebula\r\n      sfr:{shape: \"square\", fill: \"#cc00ff\"},                                 // Star forming region\r\n      rn: {shape: \"square\", fill: \"#0000ff\"},                                 // Reflection nebula\r\n      pn: {shape: \"diamond\", fill: \"#00cccc\"},                                // Planetary nebula \r\n      snr:{shape: \"diamond\", fill: \"#ff00cc\"},                                // Supernova remnant\r\n      dn: {shape: \"square\", fill: \"#999999\", stroke: \"#999999\", width: 2},    // Dark nebula \r\n      pos:{shape: \"marker\", fill: \"#cccccc\", stroke: \"#cccccc\", width: 1.5}   // Generic marker\r\n    }\r\n  },\r\n  constellations: {\r\n    show: true,    // Show constellations \r\n    names: true,   // Show constellation names \r\n    namesType: \"desig\",   // What kind of name to show (default 3 letter designations) all options: name, desig, \r\n                         // lat, en, ar, cn, cz, ee, fi, fr, de, gr, il, it, jp, kr, in, ir, ru, es, tr \r\n    nameStyle: { fill:\"#cccc99\", align: \"center\", baseline: \"middle\", opacity:0.8, \r\n                 font: [\"14px 'Lucida Sans Unicode', 'DejaVu Sans', Helvetica, Arial, sans-serif\",  // Different fonts for brighter &\r\n                        \"12px 'Lucida Sans Unicode', 'DejaVu Sans', Helvetica, Arial, sans-serif\",  // darker constellations\r\n                        \"11px 'Lucida Sans Unicode', 'DejaVu Sans', Helvetica, Arial, sans-serif\"]},\r\n    lines: true,   // Show constellation lines \r\n    lineStyle: { stroke: \"#cccccc\", width: 1.5, opacity: 0.6 },\r\n    bounds: false,  // Show constellation boundaries \r\n    boundStyle: { stroke: \"#ccff00\", width: 1.0, opacity: 0.8, dash: [4,4] }\r\n  },\r\n  mw: {\r\n    show: true,    // Show Milky Way as filled polygons \r\n    style: { fill: \"#ffffff\", opacity: \"0.15\" } // style for each MW-layer (5 on top of each other)\r\n  },\r\n  lines: {\r\n    graticule: { show: true, stroke: \"#cccccc\", width: 0.6, opacity: 0.8,      // Show graticule lines \r\n\t\t\t// grid values: \"outline\", \"center\", or [lat,...] specific position\r\n      lon: {pos: [], fill: \"#eee\", font: \"10px 'Lucida Sans Unicode', Helvetica, Arial, sans-serif\"}, \r\n\t\t\t// grid values: \"outline\", \"center\", or [lon,...] specific position\r\n\t\t  lat: {pos: [], fill: \"#eee\", font: \"10px 'Lucida Sans Unicode', Helvetica, Arial, sans-serif\"}},\r\n    equatorial: { show: true, stroke: \"#aaaaaa\", width: 1.3, opacity: 0.7 },    // Show equatorial plane \r\n    ecliptic: { show: true, stroke: \"#66cc66\", width: 1.3, opacity: 0.7 },      // Show ecliptic plane \r\n    galactic: { show: false, stroke: \"#cc6666\", width: 1.3, opacity: 0.7 },     // Show galactic plane \r\n    supergalactic: { show: false, stroke: \"#cc66cc\", width: 1.3, opacity: 0.7 } // Show supergalactic plane \r\n   //mars: { show: false, stroke:\"#cc0000\", width:1.3, opacity:.7 }\r\n  }, // Background style\r\n  background: { \r\n    fill: \"#000000\", \r\n    opacity: 1, \r\n    stroke: \"#000000\", // Outline\r\n    width: 1.5 \r\n  }, \r\n  horizon: {  //Show horizon marker, if geo-position and date-time is set\r\n    show: false, \r\n    stroke: \"#cccccc\", // Line\r\n    width: 1.0, \r\n    fill: \"#000000\", // Area below horizon\r\n    opacity: 0.4\r\n  },  \r\n  daylight: {  //Show approximate state of sky at selected time\r\n    show: false\r\n  },\r\n  planets: {  //Show planet locations, if date-time is set\r\n    show: false, \r\n    // 3-letter designations of all solar system objects that should be displayed\r\n    which: [\"sol\", \"mer\", \"ven\", \"ter\", \"lun\", \"mar\", \"jup\", \"sat\", \"ura\", \"nep\", \"cer\", \"plu\"],\r\n    // Symbols as unicode codepoints, letter abbreviations and colors to be displayed\r\n    symbols: {\r\n      \"sol\": {symbol: \"\\u2609\", letter:\"Su\", fill: \"#ffff00\", size: 12},\r\n      \"mer\": {symbol: \"\\u263f\", letter:\"Me\", fill: \"#cccccc\"},\r\n      \"ven\": {symbol: \"\\u2640\", letter:\"V\", fill: \"#eeeecc\"},\r\n      \"ter\": {symbol: \"\\u2295\", letter:\"T\", fill: \"#00ccff\"},\r\n      \"lun\": {symbol: \"\\u25cf\", letter:\"L\", fill: \"#ffffff\", size: 12},\r\n      \"mar\": {symbol: \"\\u2642\", letter:\"Ma\", fill: \"#ff6600\"},\r\n      \"cer\": {symbol: \"\\u26b3\", letter:\"C\", fill: \"#cccccc\"},\r\n      \"ves\": {symbol: \"\\u26b6\", letter:\"Ma\", fill: \"#cccccc\"},\r\n      \"jup\": {symbol: \"\\u2643\", letter:\"J\", fill: \"#ffaa33\"},\r\n      \"sat\": {symbol: \"\\u2644\", letter:\"Sa\", fill: \"#ffdd66\"},\r\n      \"ura\": {symbol: \"\\u2645\", letter:\"U\", fill: \"#66ccff\"},\r\n      \"nep\": {symbol: \"\\u2646\", letter:\"N\", fill: \"#6666ff\"},\r\n      \"plu\": {symbol: \"\\u2647\", letter:\"P\", fill: \"#aaaaaa\"},\r\n      \"eri\": {symbol: \"\\u26aa\", letter:\"E\", fill: \"#eeeeee\"}\r\n    },\r\n    // Style options for planetary symbols\r\n    symbolStyle: { fill: \"#cccccc\", opacity:1, font: \"bold 20px 'DejaVu Sans Mono', 'Arial Unicode MS', sans-serif\", align: \"center\", baseline: \"middle\" },\r\n    symbolType: \"symbol\",  // Type of planetary symbol to be displayed: 'symbol', 'letter' or 'disk'\r\n    names: false,  // Show name next to symbol\r\n    // Style options for planetary names\r\n    nameStyle: { fill: \"#cccccc\", font: \"14px 'Lucida Sans Unicode', 'DejaVu Sans', sans-serif\", align: \"right\", baseline: \"top\" },\r\n    namesType: \"en\"  // Language in which the name is displayed, options desig, ar, cn, en, fr, de, gr, il, in, it, jp, lat, ru, es\r\n  },\r\n  set: function(cfg) {  // Override defaults with values of cfg\r\n    var prop, key, config = {}, res = {};\r\n    if (Object.entries(globalConfig).length === 0) Object.assign(config, this);\r\n    else Object.assign(config, globalConfig);\r\n    if (!cfg) return config; \r\n    for (prop in config) {\r\n      if (!has(config, prop)) continue; \r\n      //if (typeof(config[prop]) === 'function'); \r\n      if (!has(cfg, prop) || cfg[prop] === null) { \r\n        res[prop] = config[prop]; \r\n      } else if (config[prop] === null || config[prop].constructor != Object ) {\r\n        res[prop] = cfg[prop];\r\n      } else {\r\n        res[prop] = {};\r\n        for (key in config[prop]) {\r\n          if (has(cfg[prop], key)) {\r\n            res[prop][key] = cfg[prop][key];\r\n          } else {\r\n            res[prop][key] = config[prop][key];\r\n          }            \r\n        }\r\n      }\r\n    }\r\n    res.constellations.nameStyle.font = arrayfy(res.constellations.nameStyle.font);\r\n    res.constellations.nameStyle.opacity = arrayfy(res.constellations.nameStyle.opacity);\r\n    res.constellations.nameStyle.fill = arrayfy(res.constellations.nameStyle.fill);\r\n    res.constellations.lineStyle.width = arrayfy(res.constellations.lineStyle.width);\r\n    res.constellations.lineStyle.opacity = arrayfy(res.constellations.lineStyle.opacity);\r\n    res.constellations.lineStyle.stroke = arrayfy(res.constellations.lineStyle.stroke);\r\n    \r\n    Object.assign(globalConfig, res);\r\n    return res;\r\n  },\r\n  applyDefaults: function(cfg) {\r\n    var res = {};\r\n    Object.assign(res, globalConfig);\r\n    // Nothing works without these\r\n    res.stars.size = res.stars.size || 7;  \r\n    res.stars.exponent = res.stars.exponent || -0.28;\r\n    if (!res.center || res.center.length <= 0) res.center = [0,0,0];\r\n    res.datapath = res.datapath || \"\";\r\n    res.datapath = res.datapath.replace(/([^\\/]$)/, \"$1\\/\");\r\n    if (!res.transform || res.transform === \"\") res.transform = \"equatorial\";\r\n    // If no recognized language/culture settings, assume defaults\r\n    //if (!res.lang || res.lang.search(/^de|es$/) === -1) res.lang = \"name\";\r\n    //Set all poss. names to cfg.lang if not english\r\n    if (!res.culture || res.culture.search(/^cn$/) === -1) res.culture = \"iau\";\r\n\r\n    if (cfg) {\r\n      // Adapt legacy name parameters\r\n      if (has(cfg, \"stars\")) {\r\n        // names -> designation\r\n        if (has(cfg.stars, \"names\")) res.stars.designation = cfg.stars.names;\r\n        if (has(cfg.stars, \"namelimit\")) res.stars.designationLimit = cfg.stars.namelimit;\r\n        if (has(cfg.stars, \"namestyle\")) Object.assign(res.stars.designationStyle, cfg.stars.namestyle);    \r\n        // proper -> propername\r\n        if (has(cfg.stars, \"proper\")) res.stars.propername = cfg.stars.proper;\r\n        if (has(cfg.stars, \"propernamelimit\")) res.stars.propernameLimit = cfg.stars.propernamelimit;\r\n        if (has(cfg.stars, \"propernamestyle\")) Object.assign(res.stars.propernameStyle, cfg.stars.propernamestyle);\r\n      }\r\n\r\n      if (has(cfg, \"dsos\")) {\r\n        // names, desig -> namesType\r\n        //if (has(cfg.dsos, \"names\") && cfg.dsos.names === true) res.dsos.namesType = \"name\";\r\n        if (has(cfg.dsos, \"desig\") && cfg.dsos.desig === true) res.dsos.namesType = \"desig\";\r\n        if (has(cfg.dsos, \"namelimit\")) res.dsos.nameLimit = cfg.dsos.namelimit;\r\n        if (has(cfg.dsos, \"namestyle\")) Object.assign(res.dsos.nameStyle, cfg.dsos.namestyle);    \r\n      }\r\n      \r\n      if (has(cfg, \"constellations\")) {\r\n        // names, desig -> namesType\r\n        if (has(cfg.constellations, \"show\") && cfg.constellations.show === true) res.constellations.names = true;\r\n        //if (has(cfg.constellations, \"names\") && cfg.constellations.names === true) res.constellations.namesType = \"name\";\r\n        if (has(cfg.constellations, \"desig\") && cfg.constellations.desig === true) res.constellations.namesType = \"desig\";\r\n        if (res.constellations.namesType === \"latin\") res.constellations.namesType = \"la\";\r\n        if (res.constellations.namesType === \"iau\") res.constellations.namesType = \"name\";\r\n        if (has(cfg.constellations, \"namestyle\")) Object.assign(res.constellations.nameStyle, cfg.constellations.namestyle);\r\n        if (has(cfg.constellations, \"linestyle\")) Object.assign(res.constellations.lineStyle, cfg.constellations.linestyle);\r\n        if (has(cfg.constellations, \"boundstyle\")) Object.assign(res.constellations.boundStyle, cfg.constellations.boundstyle);\r\n      }\r\n\r\n      if (has(cfg, \"planets\")) {\r\n        if (has(cfg.planets, \"style\")) Object.assign(res.planets.style, cfg.planets.symbolStyle);      \r\n      }\r\n    }\r\n    //Assign default name types if none given\r\n    if (!res.stars.designationType || res.stars.designationType === \"\") res.stars.designationType = \"desig\";\r\n    if (!has(formats.starnames[res.culture].designation, res.stars.designationType)) res.designationType = \"desig\";\r\n    if (!res.stars.propernameType || res.stars.propernameType === \"\") res.stars.propernameType = \"name\";\r\n    if (!has(formats.starnames[res.culture].propername, res.stars.propernameType)) res.propernameType = \"name\";\r\n    if (!res.dsos.namesType || res.dsos.namesType === \"\") res.dsos.namesType = \"desig\";\r\n    if (!res.constellations.namesType || res.constellations.namesType === \"\") res.constellations.namesType = \"desig\";\r\n    if (!has(formats.constellations[res.culture].names, res.constellations.namesType)) res.constellations.namesType = \"name\";\r\n    if (!res.planets.symbolType || res.planets.symbolType === \"\") res.planets.symbolType = \"symbol\";\r\n    if (!res.planets.namesType || res.planets.namesType === \"\") res.planets.namesType = \"desig\";\r\n    if (!has(formats.planets[res.culture].names, res.planets.namesType)) res.planets.namesType = \"desig\";\r\n    //Expand all parameters that can be arrays into arrays, no need to test it later\r\n    res.constellations.nameStyle.font = arrayfy(res.constellations.nameStyle.font);\r\n    res.constellations.nameStyle.opacity = arrayfy(res.constellations.nameStyle.opacity);\r\n    res.constellations.nameStyle.fill = arrayfy(res.constellations.nameStyle.fill);\r\n    res.constellations.lineStyle.width = arrayfy(res.constellations.lineStyle.width);\r\n    res.constellations.lineStyle.opacity = arrayfy(res.constellations.lineStyle.opacity);\r\n    res.constellations.lineStyle.stroke = arrayfy(res.constellations.lineStyle.stroke);\r\n\r\n    Object.assign(globalConfig, res);\r\n    return res; \r\n  }\r\n};\r\n\r\nfunction arrayfy(o) {\r\n  var res;\r\n  if (!isArray(o)) return [o, o, o];  //It saves some work later, OK?\r\n  if (o.length >= 3) return o;\r\n  if (o.length === 1) return [o[0], o[0], o[0]];\r\n  if (o.length === 2) return [o[0], o[1], o[1]];\r\n}\r\n\r\nCelestial.settings = function () { return settings; };\r\n\r\n//b-v color index to rgb color value scale\r\nvar bvcolor = \r\n  d3.scale.quantize().domain([3.347, -0.335]) //main sequence <= 1.7\r\n    .range([ '#ff4700', '#ff4b00', '#ff4f00', '#ff5300', '#ff5600', '#ff5900', '#ff5b00', '#ff5d00', '#ff6000', '#ff6300', '#ff6500', '#ff6700', '#ff6900', '#ff6b00', '#ff6d00', '#ff7000', '#ff7300', '#ff7500', '#ff7800', '#ff7a00', '#ff7c00', '#ff7e00', '#ff8100', '#ff8300', '#ff8506', '#ff870a', '#ff8912', '#ff8b1a', '#ff8e21', '#ff9127', '#ff932c', '#ff9631', '#ff9836', '#ff9a3c', '#ff9d3f', '#ffa148', '#ffa34b', '#ffa54f', '#ffa753', '#ffa957', '#ffab5a', '#ffad5e', '#ffb165', '#ffb269', '#ffb46b', '#ffb872', '#ffb975', '#ffbb78', '#ffbe7e', '#ffc184', '#ffc489', '#ffc78f', '#ffc892', '#ffc994', '#ffcc99', '#ffce9f', '#ffd1a3', '#ffd3a8', '#ffd5ad', '#ffd7b1', '#ffd9b6', '#ffdbba', '#ffddbe', '#ffdfc2', '#ffe1c6', '#ffe3ca', '#ffe4ce', '#ffe8d5', '#ffe9d9', '#ffebdc', '#ffece0', '#ffefe6', '#fff0e9', '#fff2ec', '#fff4f2', '#fff5f5', '#fff6f8', '#fff9fd', '#fef9ff', '#f9f6ff', '#f6f4ff', '#f3f2ff', '#eff0ff', '#ebeeff', '#e9edff', '#e6ebff', '#e3e9ff', '#e0e7ff', '#dee6ff', '#dce5ff', '#d9e3ff', '#d7e2ff', '#d3e0ff', '#c9d9ff', '#bfd3ff', '#b7ceff', '#afc9ff', '#a9c5ff', '#a4c2ff', '#9fbfff', '#9bbcff']);\r\n \r\n/* Default parameters for each supported projection\r\n     arg: constructor argument, if any \r\n     scale: scale parameter so that they all have ~equal width, normalized to 1024 pixels\r\n     ratio: width/height ratio, 2.0 if none\r\n     clip: projection clipped to 90 degrees from center, otherwise to antimeridian\r\n*/\r\nvar projections = {\r\n  \"airy\": {n:\"Airy’s Minimum Error\", arg:Math.PI/2, scale:360, ratio:1.0, clip:true},\r\n  \"aitoff\": {n:\"Aitoff\", arg:null, scale:162},\r\n  \"armadillo\": {n:\"Armadillo\", arg:0, scale:250}, \r\n  \"august\": {n:\"August\", arg:null, scale:94, ratio:1.4},\r\n  \"azimuthalEqualArea\": {n:\"Azimuthal Equal Area\", arg:null, scale:340, ratio:1.0, clip:true},\r\n  \"azimuthalEquidistant\": {n:\"Azimuthal Equidistant\", arg:null, scale:320, ratio:1.0, clip:true},\r\n  \"baker\": {n:\"Baker Dinomic\", arg:null, scale:160, ratio:1.4},\r\n  \"berghaus\": {n:\"Berghaus Star\", arg:0, scale:320, ratio:1.0, clip:true},\r\n  \"boggs\": {n:\"Boggs Eumorphic\", arg:null, scale:170},\r\n  \"bonne\": {n:\"Bonne\", arg:Math.PI/2.5, scale:225, ratio:0.88},\r\n  \"bromley\": {n:\"Bromley\", arg:null, scale:162},\r\n//  \"butterfly\": {n:\"Butterfly\", arg:null, scale:31, ratio:1.1, clip:true},\r\n  \"cassini\": {n:\"Cassini\", arg:null, scale:325, ratio:1.0, clip:true},\r\n  \"collignon\": {n:\"Collignon\", arg:null, scale:100, ratio:2.6},\r\n  \"craig\": {n:\"Craig Retroazimuthal\", arg:0, scale:310, ratio:1.5, clip:true},\r\n  \"craster\": {n:\"Craster Parabolic\", arg:null, scale:160},\r\n  \"cylindricalEqualArea\": {n:\"Cylindrical Equal Area\", arg:Math.PI/6, scale:190, ratio:2.3},\r\n  \"cylindricalStereographic\": {n:\"Cylindrical Stereographic\", arg:Math.PI/4, scale:230, ratio:1.3},\r\n  \"eckert1\": {n:\"Eckert I\", arg:null, scale:175},\r\n  \"eckert2\": {n:\"Eckert II\", arg:null, scale:175},\r\n  \"eckert3\": {n:\"Eckert III\", arg:null, scale:190},\r\n  \"eckert4\": {n:\"Eckert IV\", arg:null, scale:190},\r\n  \"eckert5\": {n:\"Eckert V\", arg:null, scale:182},\r\n  \"eckert6\": {n:\"Eckert VI\", arg:null, scale:182},\r\n  \"eisenlohr\": {n:\"Eisenlohr\", arg:null, scale:102},\r\n  \"equirectangular\": {n:\"Equirectangular\", arg:null, scale:165},\r\n  \"fahey\": {n:\"Fahey\", arg:null, scale:196, ratio:1.4},\r\n  \"mtFlatPolarParabolic\": {n:\"Flat Polar Parabolic\", arg:null, scale:175},\r\n  \"mtFlatPolarQuartic\": {n:\"Flat Polar Quartic\", arg:null, scale:230, ratio:1.65},\r\n  \"mtFlatPolarSinusoidal\": {n:\"Flat Polar Sinusoidal\", arg:null, scale:175, ratio:1.9},\r\n  \"foucaut\": {n:\"Foucaut\", arg:null, scale:142},\r\n  \"ginzburg4\": {n:\"Ginzburg IV\", arg:null, scale:180, ratio:1.7},\r\n  \"ginzburg5\": {n:\"Ginzburg V\", arg:null, scale:196, ratio:1.55},\r\n  \"ginzburg6\": {n:\"Ginzburg VI\", arg:null, scale:190, ratio:1.4},\r\n  \"ginzburg8\": {n:\"Ginzburg VIII\", arg:null, scale:205, ratio:1.3},\r\n  \"ginzburg9\": {n:\"Ginzburg IX\", arg:null, scale:190, ratio:1.4},\r\n  //\"guyou\": {n:\"Guyou\", arg:null, scale:160, ratio:2, clip:true},\r\n  //\"bonne\": {n:\"Heart\", arg:Math.PI/2.5, scale:225, ratio:0.88},\r\n  \"homolosine\": {n:\"Goode Homolosine\", arg:null, scale:160, ratio:2.2},\r\n  \"hammer\": {n:\"Hammer\", arg:2, scale:180},\r\n  \"hatano\": {n:\"Hatano\", arg:null, scale:186},\r\n  \"healpix\": {n:\"HEALPix\", arg:1, scale:320, ratio:1.2},\r\n  \"hill\": {n:\"Hill Eucyclic\", arg:2, scale:190, ratio:1.1},\r\n  \"kavrayskiy7\": {n:\"Kavrayskiy VII\", arg:null, scale:185, ratio:1.75},\r\n  \"lagrange\": {n:\"Lagrange\", arg:Math.PI/4, scale:88, ratio:1.6, clip:false},\r\n  \"larrivee\": {n:\"l'Arrivée\", arg:null, scale:160, ratio:1.25},\r\n  \"laskowski\": {n:\"Laskowski Tri-Optimal\", arg:null, scale:165, ratio:1.7},\r\n  \"loximuthal\": {n:\"Loximuthal\", arg:Math.PI/4, scale:175, ratio:1.8},\r\n  \"mercator\": {n:\"Mercator\", arg:null, scale:160, ratio:1.3},\r\n  \"miller\": {n:\"Miller\", arg:null, scale:160, ratio:1.5},\r\n  \"mollweide\": {n:\"Mollweide\", arg:null, scale:180},\r\n  \"naturalEarth\": {n:\"Natural Earth\", arg:null, scale:185, ratio:1.85},\r\n  \"nellHammer\": {n:\"Nell Hammer\", arg:null, scale:160, ratio:2.6},\r\n  \"orthographic\": {n:\"Orthographic\", arg:null, scale:480, ratio:1.0, clip:true},\r\n  \"patterson\": {n:\"Patterson Cylindrical\", arg:null, scale:160, ratio:1.75},\r\n  \"polyconic\": {n:\"Polyconic\", arg:null, scale:160, ratio:1.3},\r\n  \"quincuncial\": {n:\"Quincuncial\", arg:null, scale:160, ratio:1.3},\r\n  \"rectangularPolyconic\": {n:\"Rectangular Polyconic\", arg:0, scale:160, ratio:1.65},\r\n  \"robinson\": {n:\"Robinson\", arg:null, scale:160},\r\n  \"sinusoidal\": {n:\"Sinusoidal\", arg:null, scale:160, ratio:2},\r\n  \"stereographic\": {n:\"Stereographic\", arg:null, scale:500, ratio:1.0, clip:true},\r\n  \"times\": {n:\"Times\", arg:null, scale:210, ratio:1.4}, \r\n  \"twoPointEquidistant\": {n:\"Two-Point Equidistant\", arg:Math.PI/2, scale:320, ratio:1.15, clip:true},\r\n  \"vanDerGrinten\": {n:\"van Der Grinten\", arg:null, scale:160, ratio:1.0}, \r\n  \"vanDerGrinten2\": {n:\"van Der Grinten II\", arg:null, scale:160, ratio:1.0},\r\n  \"vanDerGrinten3\": {n:\"van Der Grinten III\", arg:null, scale:160, ratio:1.0},\r\n  \"vanDerGrinten4\": {n:\"van Der Grinten IV\", arg:null, scale:160, ratio:1.6},\r\n  \"wagner4\": {n:\"Wagner IV\", arg:null, scale:185},\r\n  \"wagner6\": {n:\"Wagner VI\", arg:null, scale:160},\r\n  \"wagner7\": {n:\"Wagner VII\", arg:null, scale:190, ratio:1.8},\r\n  \"wiechel\": {n:\"Wiechel\", arg:null, scale:360, ratio:1.0, clip:true},\r\n  \"winkel3\": {n:\"Winkel Tripel\", arg:null, scale:196, ratio:1.7}\r\n};\r\n\r\nCelestial.projections = function () { return projections; };\r\n\r\nvar formats = {\r\n  \"starnames\": {\r\n    // \"name\":\"\",\"bayer\":\"\",\"flam\":\"\",\"var\":\"\",\"gl\":\"\",\"hd\":\"\",\"c\":\"\",\"desig\":\"\"\r\n    \"iau\": {\r\n      \"designation\": {\r\n        \"desig\": \"Designation\",     \r\n        \"bayer\": \"Bayer\",\r\n        \"flam\": \"Flamsteed\",\r\n        \"var\": \"Variable\",\r\n        \"gl\": \"Gliese\",\r\n        \"hd\": \"Draper\",\r\n        \"hip\": \"Hipparcos\"},\r\n      \"propername\": {\r\n        \"name\": \"IAU Name\",\r\n        \"ar\": \"Arabic\", \r\n        \"zh\": \"Chinese\",\r\n        \"en\": \"English\",\r\n        \"fi\": \"Finnish\", \r\n        \"fr\": \"French\", \r\n        \"de\": \"German\",\r\n        \"el\": \"Greek\", \r\n        \"he\": \"Hebrew\", \r\n        \"hi\": \"Hindi\", \r\n        \"it\": \"Italian\", \r\n        \"ja\": \"Japanese\", \r\n        \"ko\": \"Korean\", \r\n        \"la\": \"Latin\",\r\n        \"fa\": \"Persian\", \r\n        \"ru\": \"Russian\", \r\n        \"es\": \"Spanish\",\r\n        \"tr\": \"Turkish\"}\r\n    },\r\n    \"cn\": {\r\n      \"propername\": {\r\n        \"name\": \"Proper name\",\r\n        \"en\": \"English\",\r\n        \"pinyin\": \"Pinyin\"},\r\n      \"designation\": { \r\n        \"desig\": \"IAU Designation\"}\r\n    }\r\n  },\r\n  \"constellations\": {\r\n    \"iau\": {\r\n      \"names\": {\r\n        \"desig\": \"Designation\",\r\n        \"name\": \"IAU Name\",\r\n        \"ar\": \"Arabic\", \r\n        \"zh\": \"Chinese\",\r\n        \"cz\": \"Czech\", \r\n        \"en\": \"English\",\r\n        \"ee\": \"Estonian\", \r\n        \"fi\": \"Finnish\", \r\n        \"fr\": \"French\", \r\n        \"de\": \"German\",\r\n        \"el\": \"Greek\", \r\n        \"he\": \"Hebrew\",\r\n        \"hi\": \"Hindi\", \r\n        \"it\": \"Italian\", \r\n        \"ja\": \"Japanese\", \r\n        \"sw\": \"Kiswahili\",\r\n        \"ko\": \"Korean\", \r\n        \"la\": \"Latin\",\r\n        \"fa\": \"Persian\", \r\n        \"ru\": \"Russian\", \r\n        \"es\": \"Spanish\",\r\n        \"tr\": \"Turkish\"}\r\n    },\r\n    \"cn\": {\r\n      \"names\": {\r\n        \"name\": \"Proper name\",\r\n        \"en\": \"English\",\r\n        \"pinyin\": \"Pinyin\"}\r\n    }             \r\n  },\r\n  \"planets\": {\r\n    \"iau\": {\r\n      \"symbol\": {\r\n        \"symbol\": \"\\u263e Symbol\",\r\n        \"letter\": \"\\u216c Letter\",\r\n        \"disk\": \"\\u25cf Disk\"},\r\n      \"names\": {\r\n        \"desig\": \"Designation\",\r\n        \"ar\": \"Arabic\",\r\n        \"zh\": \"Chinese\",\r\n        \"en\": \"English\",\r\n        \"fr\": \"French\",\r\n        \"de\": \"German\",\r\n        \"el\": \"Greek\",\r\n        \"he\": \"Hebrew\",\r\n        \"hi\": \"Hindi\",\r\n        \"it\": \"Italian\",\r\n        \"ja\": \"Japanese\",\r\n        \"ko\": \"Korean\", \r\n        \"la\": \"Latin\",\r\n        \"fa\": \"Persian\", \r\n        \"ru\": \"Russian\",\r\n        \"es\": \"Spanish\"}\r\n    },\r\n    \"cn\": {\r\n      \"symbol\": {\r\n        \"symbol\": \"\\u263e Symbol\",\r\n        \"letter\": \"\\u216c Letter\",\r\n        \"disk\": \"\\u25cf Disk\"},\r\n      \"names\": {\r\n        \"desig\": \"Designation\",\r\n        \"name\": \"Chinese\",\r\n        \"pinyin\": \"Pinyin\",\r\n        \"en\": \"English\"}\r\n    }\r\n  },\r\n  \"dsonames\": {\r\n    \"iau\": {\r\n      \"names\": {\r\n        \"desig\": \"Designation\",\r\n        \"name\": \"English\",\r\n        \"ar\": \"Arabic\", \r\n        \"zh\": \"Chinese\",\r\n        \"fi\": \"Finnish\", \r\n        \"fr\": \"French\", \r\n        \"de\": \"German\",\r\n        \"el\": \"Greek\", \r\n        //\"he\": \"Hebrew\",\r\n        \"hi\": \"Hindi\", \r\n        \"it\": \"Italian\", \r\n        \"ja\": \"Japanese\", \r\n        \"ko\": \"Korean\", \r\n        \"la\": \"Latin\",\r\n        \"fa\": \"Persian\", \r\n        \"ru\": \"Russian\", \r\n        \"es\": \"Spanish\",\r\n        \"tr\": \"Turkish\"}\r\n    },\r\n    \"cn\": {\r\n      \"names\": {\r\n        \"desig\": \"Designation\",\r\n        \"name\": \"Chinese\",\r\n        \"pinyin\": \"Pinyin\",\r\n        \"en\": \"English\"}\r\n    }\r\n  }\r\n};\r\n\r\nvar formats_all = {\r\n  \"iau\": Object.keys(formats.constellations.iau.names).concat(Object.keys(formats.planets.iau.names)).filter( function(value, index, self) { return self.indexOf(value) === index; } ),\r\n  \"cn\":  Object.keys(formats.constellations.cn.names).concat(Object.keys(formats.starnames.cn.propername)).filter( function(value, index, self) { return self.indexOf(value) === index; } )\r\n};\r\n\r\nvar Canvas = {}; \r\n\r\nCanvas.symbol = function () {\r\n  // parameters and default values\r\n  var type = d3.functor(\"circle\"), \r\n      size = d3.functor(64), \r\n      age = d3.functor(Math.PI), //crescent shape 0..2Pi\r\n      color = d3.functor(\"#fff\"),  \r\n      text = d3.functor(\"\"),  \r\n      padding = d3.functor([2,2]),  \r\n      pos;\r\n  \r\n  function canvas_symbol(context) {\r\n    draw_symbol[type()](context);\r\n  }\r\n  \r\n  var draw_symbol = {\r\n    \"circle\": function(ctx) {\r\n      var s = Math.sqrt(size()), \r\n          r = s/2;\r\n      ctx.arc(pos[0], pos[1], r, 0, 2 * Math.PI);\r\n      ctx.closePath();\r\n      return r;\r\n    },\r\n    \"square\": function(ctx) {\r\n      var s = Math.sqrt(size()), \r\n          r = s/1.7;\r\n      ctx.moveTo(pos[0]-r, pos[1]-r);\r\n      ctx.lineTo(pos[0]+r, pos[1]-r);\r\n      ctx.lineTo(pos[0]+r, pos[1]+r);\r\n      ctx.lineTo(pos[0]-r, pos[1]+r);\r\n      ctx.closePath();\r\n      return r;\r\n    },\r\n    \"diamond\": function(ctx) {\r\n      var s = Math.sqrt(size()), \r\n          r = s/1.5;\r\n      ctx.moveTo(pos[0], pos[1]-r);\r\n      ctx.lineTo(pos[0]+r, pos[1]);\r\n      ctx.lineTo(pos[0], pos[1]+r);\r\n      ctx.lineTo(pos[0]-r, pos[1]);\r\n      ctx.closePath();\r\n      return r;\r\n    },\r\n    \"triangle\": function(ctx) {\r\n      var s = Math.sqrt(size()), \r\n          r = s/Math.sqrt(3);\r\n      ctx.moveTo(pos[0], pos[1]-r);\r\n      ctx.lineTo(pos[0]+r, pos[1]+r);\r\n      ctx.lineTo(pos[0]-r, pos[1]+r);\r\n      ctx.closePath();\r\n      return r;\r\n    },\r\n    \"ellipse\": function(ctx) {\r\n      var s = Math.sqrt(size()), \r\n          r = s/2;\r\n      ctx.save();\r\n      ctx.translate(pos[0], pos[1]);\r\n      ctx.scale(1.6, 0.8); \r\n      ctx.beginPath();\r\n      ctx.arc(0, 0, r, 0, 2 * Math.PI); \r\n      ctx.closePath();\r\n      ctx.restore();      \r\n      return r;\r\n    },\r\n    \"marker\": function(ctx) {\r\n      var s = Math.sqrt(size()), \r\n          r = s/2;\r\n      ctx.moveTo(pos[0], pos[1]-r);\r\n      ctx.lineTo(pos[0], pos[1]+r);\r\n      ctx.moveTo(pos[0]-r, pos[1]);\r\n      ctx.lineTo(pos[0]+r, pos[1]);\r\n      ctx.closePath();\r\n      return r;\r\n    },\r\n    \"cross-circle\": function(ctx) {\r\n      var s = Math.sqrt(size()), \r\n          r = s/2;\r\n      ctx.moveTo(pos[0], pos[1]-s);\r\n      ctx.lineTo(pos[0], pos[1]+s);\r\n      ctx.moveTo(pos[0]-s, pos[1]);\r\n      ctx.lineTo(pos[0]+s, pos[1]);\r\n      ctx.stroke();\r\n      ctx.beginPath();\r\n      ctx.moveTo(pos[0], pos[1]);\r\n      ctx.arc(pos[0], pos[1], r, 0, 2 * Math.PI);    \r\n      ctx.closePath();\r\n      return r;\r\n    },\r\n    \"stroke-circle\": function(ctx) {\r\n      var s = Math.sqrt(size()), \r\n          r = s/2;\r\n      ctx.moveTo(pos[0], pos[1]-s);\r\n      ctx.lineTo(pos[0], pos[1]+s);\r\n      ctx.stroke();\r\n      ctx.beginPath();\r\n      ctx.moveTo(pos[0], pos[1]);\r\n      ctx.arc(pos[0], pos[1], r, 0, 2 * Math.PI);    \r\n      ctx.closePath();\r\n      return r;\r\n    }, \r\n    \"crescent\": function(ctx) {\r\n      var s = Math.sqrt(size()), \r\n          r = s/2,\r\n          ag = age(),\r\n          ph = 0.5 * (1 - Math.cos(ag)),\r\n          e = 1.6 * Math.abs(ph - 0.5) + 0.01,\r\n          dir = ag > Math.PI,\r\n          termdir = Math.abs(ph) > 0.5 ? dir : !dir,\r\n          moonFill = ctx.fillStyle,\r\n          darkFill = ph < 0.157 ? \"#669\" : \"#557\";\r\n      ctx.save();\r\n      ctx.fillStyle = darkFill;\r\n      ctx.beginPath();\r\n      ctx.moveTo(pos[0], pos[1]);\r\n      ctx.arc(pos[0], pos[1], r, 0, 2 * Math.PI);    \r\n      ctx.closePath();\r\n      ctx.fill();\r\n      ctx.fillStyle = moonFill;\r\n      ctx.beginPath();\r\n      ctx.moveTo(pos[0], pos[1]);\r\n      ctx.arc(pos[0], pos[1], r, -Math.PI/2, Math.PI/2, dir); \r\n      ctx.scale(e, 1);\r\n      ctx.arc(pos[0]/e, pos[1], r, Math.PI/2, -Math.PI/2, termdir); \r\n      ctx.closePath();\r\n      ctx.fill();\r\n      ctx.restore();\r\n      \r\n      return r;\r\n    } \r\n  };\r\n\r\n  \r\n  canvas_symbol.type = function(_) {\r\n    if (!arguments.length) return type; \r\n    type = d3.functor(_);\r\n    return canvas_symbol;\r\n  };\r\n  canvas_symbol.size = function(_) {\r\n    if (!arguments.length) return size; \r\n    size = d3.functor(_);\r\n    return canvas_symbol;\r\n  };\r\n  canvas_symbol.age = function(_) {\r\n    if (!arguments.length) return age; \r\n    age = d3.functor(_);\r\n    return canvas_symbol;\r\n  };\r\n  canvas_symbol.text = function(_) {\r\n    if (!arguments.length) return text; \r\n    text = d3.functor(_);\r\n    return canvas_symbol;\r\n  };\r\n  canvas_symbol.position = function(_) {\r\n    if (!arguments.length) return; \r\n    pos = _;\r\n    return canvas_symbol;\r\n  };\r\n\r\n  return canvas_symbol;\r\n};\r\n\r\nCelestial.Canvas = Canvas;\r\n\r\n\r\n/*var color = \"#fff\", angle = 0, align = \"center\", baseline = \"middle\", font = \"10px sans-serif\", padding = [0,0], aPos, sText;\r\n\r\ncanvas.text = function () {\r\n\r\n  function txt(ctx){\r\n    ctx.fillStyle = color;\r\n    ctx.textAlign = align;\r\n    ctx.textBaseline = baseline;\r\n    \r\n    //var pt = projection(d.geometry.coordinates);\r\n    if (angle) {\r\n      canvas.save();     \r\n      canvas.translate(aPos[0], aPos[1]);\r\n      canvas.rotate(angle); \r\n      canvas.fillText(sText, 0, 0);\r\n      canvas.restore();     \r\n    } else\r\n      canvas.fillText(sText, aPos[0], aPos[1]);\r\n  }\r\n  \r\n  txt.angle = function(x) {\r\n    if (!arguments.length) return angle * 180 / Math.PI;\r\n    color = x  * Math.PI / 180;\r\n    return txt;\r\n  };  \r\n  txt.color = function(s) {\r\n    if (!arguments.length) return color;\r\n    color = s;\r\n    return txt;\r\n  };  \r\n  txt.align = function(s) {\r\n    if (!arguments.length) return align;\r\n    align = s;\r\n    return txt;\r\n  };\r\n  txt.baseline = function(s) {\r\n    if (!arguments.length) return baseline;\r\n    baseline = s;\r\n    return txt;\r\n  };\r\n  txt.padding = function(a) {\r\n    if (!arguments.length) return padding;\r\n    padding = a;\r\n    return txt;\r\n  };\r\n  txt.text = function(s) {\r\n    if (!arguments.length) return sText;\r\n    sText = s;\r\n    return txt;\r\n  };\r\n  txt.font = function(s) {\r\n    if (!arguments.length) return font;\r\n    font = s;\r\n    return txt;\r\n  };\r\n  txt.style = function(o) {\r\n    if (!arguments.length) return;\r\n    if (o.fill) color = o.fill;\r\n    if (o.font) font = o.font;\r\n    return txt;\r\n  }; \r\n  \r\n}\r\n\r\n  function ctxPath(d) {\r\n    var pt;\r\n    //d.map( function(axe, i) {\r\n    context.beginPath();\r\n    for (var i = 0; i < d.length; i++) {\r\n      pt = projection(d[i]);\r\n      if (i === 0)\r\n        context.moveTo(pt[0], pt[1]);\r\n      else\r\n        context.lineTo(pt[0], pt[1]);\r\n    }\r\n    context.fill();\r\n  }\r\n  \r\n\r\n  function ctxText(d, ang) {\r\n    var pt = projection(d.geometry.coordinates);\r\n    if (ang) {\r\n      canvas.save();     \r\n      canvas.translate(pt[0], pt[1]);\r\n      canvas.rotate(Math.PI/2); \r\n      canvas.fillText(txt, 0, 0);\r\n      canvas.restore();     \r\n    } else\r\n      canvas.fillText(d.properties.txt, pt[0], pt[1]);\r\n  }\r\n  \r\n\r\n*/\r\nfunction $(id) { return document.querySelector(parentElement + \" #\" + id); }\r\nfunction px(n) { return n + \"px\"; } \r\nfunction Round(x, dg) { return(Math.round(Math.pow(10,dg)*x)/Math.pow(10,dg)); }\r\nfunction sign(x) { return x ? x < 0 ? -1 : 1 : 0; }\r\nfunction pad(n) { return n < 10 ? '0' + n : n; }\r\n\r\n\r\nfunction has(o, key) { return o !== null && hasOwnProperty.call(o, key); }\r\nfunction when(o, key, val) { return o !== null && hasOwnProperty.call(o, key) ? o[key] : val; }\r\nfunction isNumber(n) { return n !== null && !isNaN(parseFloat(n)) && isFinite(n); }\r\nfunction isArray(o) { return o !== null && Object.prototype.toString.call(o) === \"[object Array]\"; }\r\nfunction isObject(o) { var type = typeof o;  return type === 'function' || type === 'object' && !!o; }\r\nfunction isFunction(o) { return typeof o == 'function' || false; }\r\nfunction isValidDate(d) { return d && d instanceof Date && !isNaN(d); }\r\nfunction fileExists(url) {\r\n  var http = new XMLHttpRequest();\r\n  http.open('HEAD', url, false);\r\n  http.send();\r\n  return http.status != 404;\r\n}\r\n\r\nfunction findPos(o) {\r\n  var l = 0, t = 0;\r\n  if (o.offsetParent) {\r\n    do {\r\n      l += o.offsetLeft;\r\n      t += o.offsetTop;\r\n    } while ((o = o.offsetParent) !== null);\r\n  }\r\n  return [l, t];\r\n}\r\n\r\nfunction hasParent(t, id){\r\n  while(t.parentNode){\r\n    if(t.id === id) return true;\r\n    t = t.parentNode;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction attach(node, event, func) {\r\n  if (node.addEventListener) node.addEventListener(event, func, false);\r\n  else node.attachEvent(\"on\" + event, func); \r\n}\r\n\r\nfunction stopPropagation(e) {\r\n  if (typeof e.stopPropagation != \"undefined\") e.stopPropagation();\r\n  else e.cancelBubble = true;\r\n}\r\n\r\nfunction dateDiff(dt1, dt2, type) {\r\n  var diff = dt2.valueOf() - dt1.valueOf(),\r\n      tp = type || \"d\";\r\n  switch (tp) {\r\n    case 'y': case 'yr': diff /= 31556926080; break;\r\n    case 'm': case 'mo': diff /= 2629800000; break;\r\n    case 'd': case 'dy': diff /= 86400000; break;\r\n    case 'h': case 'hr': diff /= 3600000; break;\r\n    case 'n': case 'mn': diff /= 60000; break;\r\n    case 's': case 'sec': diff /= 1000; break;\r\n    case 'ms': break;    \r\n  }\r\n  return Math.floor(diff);\r\n}\r\n\r\nfunction dateParse(s) {\r\n  if (!s) return; \r\n  var t = s.split(\".\");\r\n  if (t.length < 1) return; \r\n  t = t[0].split(\"-\");\r\n  t[0] = t[0].replace(/\\D/g, \"\");\r\n  if (!t[0]) return; \r\n  t[1] = t[1] ? t[1].replace(/\\D/g, \"\") : \"1\";\r\n  t[2] = t[2] ? t[2].replace(/\\D/g, \"\") : \"1\";\r\n  //Fraction -> h:m:s\r\n  return new Date(Date.UTC(t[0], t[1]-1, t[2]));\r\n}\r\n\r\n\r\nfunction interpolateAngle(a1, a2, t) {\r\n  a1 = (a1*deg2rad +τ) % τ;\r\n  a2 = (a2*deg2rad + τ) % τ;\r\n  if (Math.abs(a1 - a2) > Math.PI) {\r\n    if (a1 > a2) a1 = a1 - τ;\r\n    else if (a2 > a1) a2 = a2 - τ;\r\n  }\r\n  return d3.interpolateNumber(a1/deg2rad, a2/deg2rad);\r\n}\r\n\r\nvar Trig = {\r\n  sinh: function (val) { return (Math.pow(Math.E, val)-Math.pow(Math.E, -val))/2; },\r\n  cosh: function (val) { return (Math.pow(Math.E, val)+Math.pow(Math.E, -val))/2; },\r\n  tanh: function (val) { return 2.0 / (1.0 + Math.exp(-2.0 * val)) - 1.0; },\r\n  asinh: function (val) { return Math.log(val + Math.sqrt(val * val + 1)); },\r\n  acosh: function (val) { return Math.log(val + Math.sqrt(val * val - 1)); },\r\n  normalize0: function(val) {  return ((val + Math.PI*3) % (Math.PI*2)) - Math.PI; },\r\n  normalize: function(val) {  return ((val + Math.PI*2) % (Math.PI*2)); },  \r\n  cartesian: function(p) {\r\n    var ϕ = p[0], θ = halfπ - p[1], r = p[2];\r\n    return {\"x\": r * Math.sin(θ) * Math.cos(ϕ), \"y\": r * Math.sin(θ) * Math.sin(ϕ), \"z\": r * Math.cos(θ)};\r\n  },\r\n  spherical: function(p) {\r\n    var r = Math.sqrt(p.x * p.x + p.y * p.y + p.z * p.z),\r\n        θ = Math.atan(p.y / p.x),\r\n        ϕ = Math.acos(p.z / r);\r\n    return  [θ / deg2rad, ϕ / deg2rad, r];\r\n  },\r\n  distance: function(p1, p2) {\r\n    return Math.acos(Math.sin(p1[1])*Math.sin(p2[1]) + Math.cos(p1[1])*Math.cos(p2[1])*Math.cos(p1[0]-p2[0]));\r\n  }\r\n};\r\n\r\nvar epsilon = 1e-6, \r\n    halfPi =  Math.PI / 2, \r\n    quarterPi =  Math.PI / 4, \r\n    tau =  Math.PI * 2;\r\n    \r\nfunction cartesian(spherical) {\r\n  var lambda = spherical[0], phi = spherical[1], cosPhi = Math.cos(phi);\r\n  return [cosPhi * Math.cos(lambda), cosPhi * Math.sin(lambda), Math.sin(phi)];\r\n}\r\n\r\nfunction cartesianCross(a, b) {\r\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\r\n}\r\n\r\nfunction cartesianNormalizeInPlace(d) {\r\n  var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\r\n  d[0] /= l; d[1] /= l; d[2] /= l;\r\n}\r\n\r\nfunction longitude(point) {\r\n  if (Math.abs(point[0]) <= Math.PI)\r\n    return point[0];\r\n  else\r\n    return sign(point[0]) * ((Math.abs(point[0]) +  Math.PI) % tau -  Math.PI);\r\n}\r\n\r\nfunction poligonContains(polygon, point) {\r\n  var lambda = longitude(point),\r\n      phi = point[1],\r\n      sinPhi = Math.sin(phi),\r\n      normal = [Math.sin(lambda), -Math.cos(lambda), 0],\r\n      angle = 0,\r\n      winding = 0,\r\n      sum = 0;\r\n\r\n  if (sinPhi === 1) phi = halfPi + epsilon;\r\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\r\n\r\n  for (var i = 0, n = polygon.length; i < n; ++i) {\r\n    if (!(m = (ring = polygon[i]).length)) continue;\r\n    var ring,\r\n        m,\r\n        point0 = ring[m - 1],\r\n        lambda0 = longitude(point0),\r\n        phi0 = point0[1] / 2 + quarterPi,\r\n        sinPhi0 = Math.sin(phi0),\r\n        cosPhi0 = Math.cos(phi0),\r\n        point1, cosPhi1, sinPhi1, lambda1;\r\n\r\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\r\n      point1 = ring[j];\r\n      lambda1 = longitude(point1);\r\n      var phi1 = point1[1] / 2 + quarterPi;\r\n      sinPhi1 = Math.sin(phi1);\r\n      cosPhi1 = Math.cos(phi1);\r\n      var delta = lambda1 - lambda0,\r\n          sign = delta >= 0 ? 1 : -1,\r\n          absDelta = sign * delta,\r\n          antimeridian = absDelta > Math.PI,\r\n          k = sinPhi0 * sinPhi1;\r\n\r\n      sum += Math.atan2(k * sign * Math.sin(absDelta), cosPhi0 * cosPhi1 + k * Math.cos(absDelta));\r\n      angle += antimeridian ? delta + sign * tau : delta;\r\n\r\n      if ((antimeridian ^ lambda0) >= (lambda ^ lambda1) >= lambda) {\r\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\r\n        cartesianNormalizeInPlace(arc);\r\n        var intersection = cartesianCross(normal, arc);\r\n        cartesianNormalizeInPlace(intersection);\r\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * Math.asin(intersection[2]);\r\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\r\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\r\n}\r\n\r\n//display settings form in div with id \"celestial-form\"\r\nfunction form(cfg) {\r\n  var config = settings.set(cfg); \r\n\r\n  var prj = Celestial.projections(), leo = Celestial.eulerAngles();\r\n  var div = d3.select(parentElement + \" ~ #celestial-form\");\r\n  //if div doesn't exist, create it\r\n  if (div.size() < 1) {\r\n    //var container = (config.container || \"celestial-map\");\r\n    div = d3.select(parentElement).select(function() { return this.parentNode; }).append(\"div\").attr(\"id\", \"celestial-form\");\r\n  }\r\n  var ctrl = div.append(\"div\").attr(\"class\", \"ctrl\");\r\n  var frm = ctrl.append(\"form\").attr(\"id\", \"params\").attr(\"name\", \"params\").attr(\"method\", \"get\").attr(\"action\" ,\"#\");\r\n  \r\n  //Map parameters    \r\n  var col = frm.append(\"div\").attr(\"class\", \"col\").attr(\"id\", \"general\");\r\n  \r\n  col.append(\"label\").attr(\"title\", \"Map width in pixel, 0 indicates full width\").attr(\"for\", \"width\").html(\"Width \");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"maxlength\", \"4\").attr(\"max\", \"20000\").attr(\"min\", \"0\").attr(\"title\", \"Map width\").attr(\"id\", \"width\").attr(\"value\", config.width).on(\"change\", resize);\r\n  col.append(\"span\").html(\"px\");\r\n\r\n  col.append(\"label\").attr(\"title\", \"Map projection, (hemi) indicates hemispherical projection\").attr(\"for\", \"projection\").html(\"Projection\");\r\n  var sel = col.append(\"select\").attr(\"id\", \"projection\").on(\"change\", reproject);\r\n  var selected = 0;\r\n  var list = Object.keys(prj).map( function (key, i) { \r\n    var n = prj[key].clip && prj[key].clip === true ? prj[key].n + \" (hemi)\" : prj[key].n; \r\n    if (key === config.projection) selected = i;\r\n    return {o:key, n:n};\r\n  });\r\n  sel.selectAll('option').data(list).enter().append('option')\r\n     .attr(\"value\", function (d) { return d.o; })\r\n     .text(function (d) { return d.n; });\r\n  sel.property(\"selectedIndex\", selected);\r\n  \r\n  selected = 0;\r\n  col.append(\"label\").attr(\"title\", \"Coordinate space in which the map is displayed\").attr(\"for\", \"transform\").html(\"Coordinates\");\r\n  sel = col.append(\"select\").attr(\"id\", \"transform\").on(\"change\", reload);\r\n  list = Object.keys(leo).map(function (key, i) {\r\n    if (key === config.transform) selected = i;    \r\n    return {o:key, n:key.replace(/^([a-z])/, function(s, m) { return m.toUpperCase(); } )}; \r\n  });\r\n  sel.selectAll(\"option\").data(list).enter().append('option')\r\n     .attr(\"value\", function (d) { return d.o; })\r\n     .text(function (d) { return d.n; });\r\n  sel.property(\"selectedIndex\", selected);\r\n\r\n  col.append(\"br\");\r\n  col.append(\"label\").attr(\"title\", \"Center coordinates long/lat in selected coordinate space\").attr(\"for\", \"centerx\").html(\"Center\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"centerx\").attr(\"title\", \"Center right ascension/longitude\").attr(\"max\", \"24\").attr(\"min\", \"0\").attr(\"step\", \"0.1\").on(\"change\", turn);\r\n  col.append(\"span\").attr(\"id\", \"cxunit\").html(\"h\");\r\n  //addList(\"centerx\", \"ra\");\r\n  \r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"centery\").attr(\"title\", \"Center declination/latitude\").attr(\"max\", \"90\").attr(\"min\", \"-90\").attr(\"step\", \"0.1\").on(\"change\", turn);\r\n  col.append(\"span\").html(\"\\u00b0\");\r\n\r\n  col.append(\"label\").attr(\"title\", \"Orientation\").attr(\"for\", \"centerz\").html(\"Orientation\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"centerz\").attr(\"title\", \"Center orientation\").attr(\"max\", \"180\").attr(\"min\", \"-180\").attr(\"step\", \"0.1\").on(\"change\", turn);\r\n  col.append(\"span\").html(\"\\u00b0\");\r\n\r\n  col.append(\"label\").attr(\"for\", \"orientationfixed\").attr(\"class\", \"advanced\").html(\"Fixed\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"orientationfixed\").attr(\"class\", \"advanced\").property(\"checked\", config.orientationfixed).on(\"change\", apply);    \r\n\r\n  col.append(\"label\").attr(\"title\", \"Center and zoom in on this constellation\").attr(\"for\", \"constellation\").html(\"Show\");\r\n  col.append(\"select\").attr(\"id\", \"constellation\").on(\"change\", showConstellation);\r\n  \r\n  setCenter(config.center, config.transform);\r\n\r\n  // Stars \r\n  col = frm.append(\"div\").attr(\"class\", \"col\").attr(\"id\", \"stars\");\r\n  \r\n  col.append(\"label\").attr(\"class\", \"header\").attr(\"for\", \"stars-show\").html(\"Stars\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"stars-show\").property(\"checked\", config.stars.show).on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"stars-limit\").html(\"down to magnitude\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"stars-limit\").attr(\"title\", \"Star display limit (magnitude)\").attr(\"value\", config.stars.limit).attr(\"max\", \"6\").attr(\"min\", \"-1\").attr(\"step\", \"0.1\").on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"stars-colors\").html(\"with spectral colors\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"stars-colors\").property(\"checked\", config.stars.colors).on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"stars-color\").html(\"or default color \");\r\n  col.append(\"input\").attr(\"type\", \"color\").attr(\"autocomplete\", \"off\").attr(\"id\", \"stars-style-fill\").attr(\"title\", \"Star color\").property(\"value\", config.stars.style.fill).on(\"change\", apply);\r\n\r\n  col.append(\"br\");\r\n  \r\n  var names = formats.starnames[config.culture] || formats.starnames.iau;\r\n  \r\n  for (var fld in names) {\r\n    if (!has(names, fld)) continue;\r\n    var keys = Object.keys(names[fld]);\r\n    if (keys.length > 1) {\r\n      //Select List\r\n      col.append(\"label\").attr(\"for\", \"stars-\" + fld).html(\"Show\");\r\n      \r\n      selected = 0;\r\n      col.append(\"label\").attr(\"title\", \"Type of star name\").attr(\"id\", \"label-propername\").attr(\"for\", \"stars-\" + fld + \"Type\").html(function () { return fld === \"propername\" ? \"proper names\" : \"\"; });\r\n      sel = col.append(\"select\").attr(\"id\", \"stars-\" + fld + \"Type\").attr(\"class\", function () { return fld === \"propername\" ? \"advanced\" : \"\"; }).on(\"change\", apply);\r\n      list = keys.map(function (key, i) {\r\n        if (key === config.stars[fld + \"Type\"]) selected = i;\r\n        return {o:key, n:names[fld][key]}; \r\n      });\r\n      sel.selectAll(\"option\").data(list).enter().append('option')\r\n         .attr(\"value\", function (d) { return d.o; })\r\n         .text(function (d) { return d.n; });\r\n      sel.property(\"selectedIndex\", selected);\r\n\r\n      col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"stars-\" + fld).property(\"checked\", config.stars[fld]).on(\"change\", apply);\r\n    } else if (keys.length === 1) {\r\n      //Simple field\r\n    col.append(\"label\").attr(\"for\", \"stars-\" + fld).html(\" \" + names[fld][keys[0]]);\r\n      col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"stars-\" + fld).property(\"checked\", config.stars[fld]).on(\"change\", apply);\r\n    }    \r\n    col.append(\"label\").attr(\"for\", \"stars-\" + fld + \"Limit\").html(\"down to mag\");\r\n    col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"stars-\" + fld + \"Limit\").attr(\"title\", \"Star name display limit (magnitude)\").attr(\"value\", config.stars[fld + \"Limit\"]).attr(\"max\", \"6\").attr(\"min\", \"-1\").attr(\"step\", \"0.1\").on(\"change\", apply);\r\n  \r\n  }\r\n\r\n  col.append(\"br\");\r\n\r\n  col.append(\"label\").attr(\"for\", \"stars-size\").attr(\"class\", \"advanced\").html(\"Stellar disk size: base\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"stars-size\").attr(\"class\", \"advanced\").attr(\"title\", \"Size of the displayed star disk; base\").attr(\"value\", config.stars.size).attr(\"max\", \"100\").attr(\"min\", \"0\").attr(\"step\", \"0.1\").on(\"change\", apply);\r\n\r\n  col.append(\"label\").attr(\"for\", \"stars-exponent\").attr(\"class\", \"advanced\").html(\" * e ^ (exponent\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"stars-exponent\").attr(\"class\", \"advanced\").attr(\"title\", \"Size of the displayed star disk; exponent\").attr(\"value\", config.stars.exponent).attr(\"max\", \"3\").attr(\"min\", \"-1\").attr(\"step\", \"0.01\").on(\"change\", apply);\r\n  col.append(\"span\").attr(\"class\", \"advanced\").text(\" * (magnitude + 2))  [* adaptation]\");\r\n  \r\n  enable($form(\"stars-show\"));\r\n  \r\n  // DSOs \r\n  col = frm.append(\"div\").attr(\"class\", \"col\").attr(\"id\", \"dsos\");\r\n  \r\n  col.append(\"label\").attr(\"class\", \"header\").attr(\"title\", \"Deep Space Objects\").attr(\"for\", \"dsos-show\").html(\"DSOs\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"dsos-show\").property(\"checked\", config.dsos.show).on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"dsos-limit\").html(\"down to mag\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"dsos-limit\").attr(\"title\", \"DSO display limit (magnitude)\").attr(\"value\", config.dsos.limit).attr(\"max\", \"6\").attr(\"min\", \"0\").attr(\"step\", \"0.1\").on(\"change\", apply);\r\n\r\n\r\n  col.append(\"label\").attr(\"for\", \"dsos-colors\").html(\"with symbol colors\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"dsos-colors\").property(\"checked\", config.dsos.colors).on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"dsos-color\").html(\"or default color \");\r\n  col.append(\"input\").attr(\"type\", \"color\").attr(\"autocomplete\", \"off\").attr(\"id\", \"dsos-style-fill\").attr(\"title\", \"DSO color\").property(\"value\", config.dsos.style.fill).on(\"change\", apply);\r\n\r\n  col.append(\"br\");\r\n  \r\n  names = formats.dsonames[config.culture] || formats.dsonames.iau;\r\n  \r\n  for (fld in names) {\r\n    if (!has(names, fld)) continue;\r\n    var dsoKeys = Object.keys(names[fld]);\r\n    col.append(\"label\").attr(\"for\", \"dsos-\" + fld).html(\"Show\");\r\n      \r\n    selected = 0;\r\n    col.append(\"label\").attr(\"title\", \"Type of DSO name\").attr(\"for\", \"dsos-\" + fld + \"Type\").attr(\"class\", \"advanced\").html(\"\");\r\n    sel = col.append(\"select\").attr(\"id\", \"dsos-\" + fld + \"Type\").attr(\"class\", \"advanced\").on(\"change\", apply);\r\n    list = dsoKeys.map(function (key, i) {\r\n      if (key === config.stars[fld + \"Type\"]) selected = i;    \r\n      return {o:key, n:names[fld][key]}; \r\n    });\r\n    sel.selectAll(\"option\").data(list).enter().append('option')\r\n       .attr(\"value\", function (d) { return d.o; })\r\n       .text(function (d) { return d.n; });\r\n    sel.property(\"selectedIndex\", selected);\r\n\r\n    col.append(\"label\").attr(\"for\", \"dsos-\" + fld).html(\"names\");\r\n    col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"dsos-\" + fld).property(\"checked\", config.dsos[fld]).on(\"change\", apply);\r\n  }    \r\n    \r\n  col.append(\"label\").attr(\"for\", \"dsos-nameLimit\").html(\"down to mag\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"dsos-nameLimit\").attr(\"title\", \"DSO name display limit (magnitude)\").attr(\"value\", config.dsos.nameLimit).attr(\"max\", \"6\").attr(\"min\", \"0\").attr(\"step\", \"0.1\").on(\"change\", apply);\r\n  col.append(\"br\");\r\n\r\n  col.append(\"label\").attr(\"for\", \"dsos-size\").attr(\"class\", \"advanced\").html(\"DSO symbol size: (base\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"dsos-size\").attr(\"class\", \"advanced\").attr(\"title\", \"Size of the displayed symbol: base\").attr(\"value\", config.dsos.size).attr(\"max\", \"100\").attr(\"min\", \"0\").attr(\"step\", \"0.1\").on(\"change\", apply);\r\n\r\n  col.append(\"label\").attr(\"for\", \"dsos-exponent\").attr(\"class\", \"advanced\").html(\" * 2 [* adaptation] - magnitude) ^ exponent\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"dsos-exponent\").attr(\"class\", \"advanced\").attr(\"title\", \"Size of the displayed symbol; exponent\").attr(\"value\", config.dsos.exponent).attr(\"max\", \"3\").attr(\"min\", \"-1\").attr(\"step\", \"0.01\").on(\"change\", apply);\r\n\r\n  enable($form(\"dsos-show\"));\r\n\r\n  // Constellations \r\n  col = frm.append(\"div\").attr(\"class\", \"col\").attr(\"id\", \"constellations\");\r\n  col.append(\"label\").attr(\"class\", \"header\").html(\"Constellations\");\r\n  //col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"constellations-show\").property(\"checked\", config.constellations.show).on(\"change\", apply);\r\n  \r\n  \r\n  names = formats.constellations[config.culture] || formats.constellations.iau;\r\n  \r\n  for (fld in names) {\r\n    if (!has(names, fld)) continue;\r\n    var nameKeys = Object.keys(names[fld]);\r\n    if (nameKeys.length > 1) {\r\n      //Select List\r\n      col.append(\"label\").attr(\"for\", \"constellations-\" + fld).html(\"Show\");\r\n      \r\n      selected = 0;\r\n      col.append(\"label\").attr(\"title\", \"Language of constellation names\").attr(\"for\", \"constellations-\" + fld + \"Type\").attr(\"class\", \"advanced\").html(\"\");\r\n      sel = col.append(\"select\").attr(\"id\", \"constellations-\" + fld + \"Type\").attr(\"class\", \"advanced\").on(\"change\", apply);\r\n      list = nameKeys.map(function (key, i) {\r\n        if (key === config.constellations[fld + \"Type\"]) selected = i;    \r\n        return {o:key, n:names[fld][key]}; \r\n      });\r\n      sel.selectAll(\"option\").data(list).enter().append('option')\r\n         .attr(\"value\", function (d) { return d.o; })\r\n         .text(function (d) { return d.n; });\r\n      sel.property(\"selectedIndex\", selected);\r\n\r\n      col.append(\"label\").attr(\"for\", \"constellations-\" + fld).html(\"names\");\r\n      col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"constellations-\" + fld).property(\"checked\", config.constellations[fld]).on(\"change\", apply);\r\n    } else if (nameKeys.length === 1) {\r\n      //Simple field\r\n      col.append(\"label\").attr(\"for\", \"constellations-\" + fld).attr(\"class\", \"advanced\").html(\" \" + names[fld][nameKeys[0]]);\r\n      col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"constellations-\" + fld).attr(\"class\", \"advanced\").property(\"checked\", config.constellations[fld]).on(\"change\", apply);      \r\n    }      \r\n  }\r\n  col.append(\"label\").attr(\"for\", \"constellations-lines\").html(\" lines\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"constellations-lines\").property(\"checked\", config.constellations.lines).on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"constellations-bounds\").html(\" boundaries\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"constellations-bounds\").property(\"checked\", config.constellations.bounds).on(\"change\", apply);\r\n\r\n  enable($form(\"constellations-names\"));\r\n\r\n  // graticules & planes \r\n  col = frm.append(\"div\").attr(\"class\", \"col\").attr(\"id\", \"lines\");\r\n  col.append(\"label\").attr(\"class\", \"header\").html(\"Lines\");\r\n  \r\n  col.append(\"label\").attr(\"title\", \"Latitude/longitude grid lines\").attr(\"for\", \"lines-graticule\").html(\"Graticule\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"lines-graticule-show\").property(\"checked\", config.lines.graticule.show).on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"lines-equatorial\").html(\"Equator\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"lines-equatorial-show\").property(\"checked\", config.lines.equatorial.show).on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"lines-ecliptic\").html(\"Ecliptic\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"lines-ecliptic-show\").property(\"checked\", config.lines.ecliptic.show).on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"lines-galactic\").html(\"Galactic plane\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"lines-galactic-show\").property(\"checked\", config.lines.galactic.show).on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"lines-supergalactic\").html(\"Supergalactic plane\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"lines-supergalactic-show\").property(\"checked\", config.lines.supergalactic.show).on(\"change\", apply);\r\n\r\n  // Other\r\n  col = frm.append(\"div\").attr(\"class\", \"col\").attr(\"id\", \"other\");\r\n  col.append(\"label\").attr(\"class\", \"header\").html(\"Other\");\r\n  \r\n  col.append(\"label\").attr(\"for\", \"mw-show\").html(\"Milky Way\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"mw-show\").property(\"checked\", config.mw.show).on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"mw-style-fill\").attr(\"class\", \"advanced\").html(\" color\");\r\n  col.append(\"input\").attr(\"type\", \"color\").attr(\"id\", \"mw-style-fill\").attr(\"class\", \"advanced\").attr(\"title\", \"Milky Way color\").attr(\"value\", config.mw.style.fill).on(\"change\", apply);\r\n\r\n  col.append(\"label\").attr(\"for\", \"mw-style-opacity\").attr(\"class\", \"advanced\").html(\" opacity\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"mw-style-opacity\").attr(\"class\", \"advanced\").attr(\"title\", \"Transparency of each Milky Way layer\").attr(\"value\", config.mw.style.opacity).attr(\"max\", \"1\").attr(\"min\", \"0\").attr(\"step\", \"0.01\").on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"for\", \"advanced\").html(\"Advanced options\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"advanced\").property(\"checked\", config.advanced).on(\"change\", apply);\r\n  \r\n  col.append(\"br\");\r\n  \r\n  col.append(\"label\").attr(\"for\", \"background-fill\").html(\"Background color\");\r\n  col.append(\"input\").attr(\"type\", \"color\").attr(\"id\", \"background-fill\").attr(\"title\", \"Background color\").attr(\"value\", config.background.fill).on(\"change\", apply);\r\n\r\n  col.append(\"label\").attr(\"for\", \"background-opacity\").attr(\"class\", \"advanced\").html(\"opacity\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"background-opacity\").attr(\"class\", \"advanced\").attr(\"title\", \"Background opacity\").attr(\"value\", config.background.opacity).attr(\"max\", \"1\").attr(\"min\", \"0\").attr(\"step\", \"0.01\").on(\"change\", apply);\r\n  \r\n  col.append(\"label\").attr(\"title\", \"Star/DSO sizes are increased with higher zoom-levels\").attr(\"for\", \"adaptable\").attr(\"class\", \"advanced\").html(\"Adaptable object sizes\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"adaptable\").attr(\"class\", \"advanced\").property(\"checked\", config.adaptable).on(\"change\", apply);\r\n  \r\n  // General language setting\r\n  var langKeys = formats_all[config.culture];\r\n\r\n  selected = 0;\r\n  col.append(\"label\").attr(\"title\", \"General language setting\").attr(\"for\", \"lang\").html(\"Object names \");\r\n  sel = col.append(\"select\").attr(\"id\", \"lang\").on(\"change\", apply);\r\n  list = langKeys.map(function (key, i) {\r\n    if (key === config.lang) selected = i;    \r\n    return {o:key, n:formats.constellations[config.culture].names[key]}; \r\n  });\r\n  list = [{o:\"---\", n:\"(Select language)\"}].concat(list);\r\n  sel.selectAll(\"option\").data(list).enter().append('option')\r\n     .attr(\"value\", function (d) { return d.o; })\r\n     .text(function (d) { return d.n; });\r\n  sel.property(\"selectedIndex\", selected);\r\n   \r\n  col = frm.append(\"div\").attr(\"class\", \"col\").attr(\"id\", \"download\");\r\n  col.append(\"label\").attr(\"class\", \"header\").html(\"Download\");\r\n\r\n  col.append(\"input\").attr(\"type\", \"button\").attr(\"id\", \"download-png\").attr(\"value\", \"PNG Image\").on(\"click\", function() {\r\n    var a = d3.select(\"body\").append(\"a\").node(), \r\n        canvas = document.querySelector(parentElement + ' canvas');\r\n    a.download = getFilename(\".png\");\r\n    a.rel = \"noopener\";\r\n    a.href = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream');\r\n    a.click();\r\n    d3.select(a).remove();\r\n  });\r\n\r\n  col.append(\"input\").attr(\"type\", \"button\").attr(\"id\", \"download-svg\").attr(\"value\", \"SVG File\").on(\"click\", function() {\r\n    exportSVG(getFilename(\".svg\")); \r\n    return false;\r\n  });\r\n\r\n  setLimits();\r\n  setUnit(config.transform);\r\n  setVisibility(cfg);\r\n  showAdvanced(config.advanced);\r\n  \r\n  function resize() {\r\n    var src = this,\r\n        w = src.value;\r\n    if (testNumber(src) === false) return; \r\n    config.width = w;\r\n    Celestial.resize({width:w});\r\n  }\r\n  \r\n  function reload() {\r\n    var src = this,\r\n        trans = src.value,\r\n        cx = setUnit(trans, config.transform); \r\n    if (cx !== null) config.center[0] = cx; \r\n    config.transform = trans;\r\n    settings.set(config);\r\n    Celestial.reload(config);\r\n  }  \r\n  \r\n  function reproject() {\r\n    var src = this;\r\n    if (!src) return;\r\n    config.projection = src.value; \r\n    settings.set(config);\r\n    Celestial.reproject(config);\r\n  }\r\n  \r\n  function turn() {\r\n    if (testNumber(this) === false) return;   \r\n    if (getCenter() === false) return;\r\n    Celestial.rotate(config);\r\n  }\r\n\r\n  function getCenter() {\r\n    var cx = $form(\"centerx\"), cy = $form(\"centery\"), cz = $form(\"centerz\"),\r\n        rot = [];\r\n\r\n    if (!cx || !cy) return;\r\n\r\n    if (config.transform !== \"equatorial\") config.center[0] = parseFloat(cx.value); \r\n    else { \r\n      var vx = parseFloat(cx.value);\r\n      config.center[0] = vx > 12 ? vx * 15 - 360 : vx * 15;\r\n    }\r\n    config.center[1] = parseFloat(cy.value); \r\n    \r\n    var vz = parseFloat(cz.value); \r\n    config.center[2] = isNaN(vz) ? 0 : vz;\r\n    \r\n    return cx.value !== \"\" && cy.value !== \"\";\r\n  }\r\n    \r\n  function getFilename(ext) {\r\n    var dateFormat = d3.time.format(\"%Y%m%dT%H%M%S%Z\"),\r\n        filename = \"d3-celestial\",\r\n        dt = Celestial.date();\r\n    if (dt) filename += dateFormat(dt);\r\n    return filename + ext;\r\n  }\r\n    \r\n  function showConstellation() {\r\n    var id = this.value;\r\n    if (!id) return;\r\n    showCon(id);\r\n  }\r\n\r\n  function showCon(id) {\r\n    var z, anims = [],\r\n        config = globalConfig;\r\n    if (id === \"---\") { \r\n      Celestial.constellation = null;\r\n      z = Celestial.zoomBy();\r\n      if (z !== 1) {\r\n        anims.push({param:\"zoom\", value:1/z, duration:0});\r\n      }\r\n      Celestial.animate(anims, false);    \r\n      //Celestial.redraw();\r\n      return;\r\n    }\r\n    if (!isObject(Celestial.constellations) || !has(Celestial.constellations, id)) return;\r\n    \r\n    var con = Celestial.constellations[id];\r\n    //transform according to settings\r\n    var center = transformDeg(con.center, euler[config.transform]);\r\n    config.center = center;\r\n    setCenter(config.center, config.transform);\r\n    //config.lines.graticule.lat.pos = [Round(con.center[0])];\r\n    //config.lines.graticule.lon.pos = [Round(con.center[1])];\r\n    //Celestial.apply(config);\r\n\r\n    //if zoomed, zoom out\r\n    z = Celestial.zoomBy();\r\n    if (z !== 1) anims.push({param:\"zoom\", value:1/z, duration:0});\r\n    //rotate\r\n    anims.push({param:\"center\", value:center, duration:0});\r\n    //and zoom in\r\n    var sc = 1 + (360/con.scale); // > 10 ? 10 : con.scale;\r\n    anims.push({param:\"zoom\", value:sc, duration:0});\r\n    Celestial.constellation = id;\r\n    //Object.assign(globalConfig, config);   \r\n    Celestial.animate(anims, false);    \r\n  }\r\n  \r\n  function apply() {\r\n    var value, src = this;\r\n    //Get current configuration\r\n    Object.assign(config, settings.set());\r\n\r\n    switch (src.type) {\r\n      case \"checkbox\": value = src.checked; enable(src); break;\r\n      case \"number\": if (testNumber(src) === false) return; \r\n                     value = parseFloat(src.value); break;\r\n      case \"color\": if (testColor(src) === false) return; \r\n                    value = src.value; break;\r\n      case \"text\": if (src.id.search(/fill$/) === -1) return;\r\n                   if (testColor(src) === false) return; \r\n                   value = src.value; break;\r\n      case \"select-one\": value = src.value; break;\r\n    }\r\n    if (value === null) return;\r\n    set(src.id, value);\r\n    if (src.id === \"dsos-style-fill\") {\r\n      set(\"dsos-style-stroke\", value);\r\n      set(\"dsos-nameStyle-fill\", value);\r\n    } else if (src.id === \"constellations-namesType\") {\r\n      listConstellations();\r\n    } else if (src.id === \"lang\") {\r\n      setLanguage(value);\r\n    } else if (src.id === \"advanced\") {\r\n      showAdvanced(value);\r\n    }\r\n\r\n    getCenter();\r\n    Object.assign(globalConfig, config);\r\n    Celestial.apply(config);\r\n  }\r\n\r\n  function set(prop, val) {\r\n    var a = prop.split(\"-\");\r\n    switch (a.length) {\r\n      case 1: config[a[0]] = val; break;\r\n      case 2: config[a[0]][a[1]] = val; break;\r\n      case 3: config[a[0]][a[1]][a[2]] = val; break;\r\n      default: return;\r\n    }   \r\n  }\r\n  \r\n  \r\n  function setLanguage(lang) {\r\n    Object.assign(config, globalConfig);\r\n    config.lang = lang;\r\n    var keys = [\"constellations\", \"planets\"]; \r\n    for (var i=0; i < keys.length; i++) {\r\n      if (has(formats[keys[i]][config.culture].names, lang)) config[keys[i]].namesType = lang;\r\n      else if (has(formats[keys[i]][config.culture].names, \"desig\")) config[keys[i]].namesType = \"desig\";\r\n      else config[keys[i]].namesType = \"name\";\r\n    }\r\n    if (has(formats.dsonames[config.culture].names, lang)) config.dsos.namesType = lang;\r\n    else config.dsos.namesType = \"desig\";\r\n    if (has(formats.starnames[config.culture].propername, lang)) config.stars.propernameType = lang;\r\n    else config.stars.propernameType = \"desig\";\r\n    //update cont. list\r\n    Object.assign(globalConfig, config);\r\n    update();\r\n    listConstellations();\r\n    return config;\r\n  }\r\n  \r\n    \r\n  function update() {\r\n    // Update all form fields\r\n    d3.selectAll(parentElement + \" ~ #celestial-form input, \" + parentElement + \" ~  #celestial-form select\").each( function(d, i) {\r\n      if (this === undefined) return;\r\n      var id = this.id;\r\n\r\n      // geopos -> lat, lon\r\n      if (id === \"lat\" || id === \"lon\") {\r\n        if (isArray(config.geopos)) this.value = id === \"lat\" ? config.geopos[0] : config.geopos[1];\r\n      // center -> centerx, centery     \r\n      } else if (id.search(/center/) !== -1) {\r\n        if (isArray(config.center)) {\r\n          switch (id) { \r\n            case \"centerx\": this.value = config.center[0]; break;\r\n            case \"centery\": this.value = config.center[1]; break;\r\n            case \"centerz\": this.value = config.center[2] || 0; break;\r\n          }\r\n        }\r\n      } else if (id === \"datetime\" || id === \"hr\" || id === \"min\" || id === \"sec\" || id === \"tz\") {\r\n        return;//skip, timezone?\r\n      } else if (this.type !== \"button\") {\r\n        var value = get(id);      \r\n        switch (this.type) {\r\n          case \"checkbox\": this.checked = value; enable(id); break;\r\n          case \"number\": if (testNumber(this) === false) break;\r\n                         this.value = parseFloat(get(id)); break;\r\n          case \"color\": if (testColor(this) === false) break; \r\n                        this.value = value; break;\r\n          case \"text\": if (id.search(/fill$/) === -1) break;\r\n                       if (testColor(this) === false) break; \r\n                       this.value = value; break;\r\n          case \"select-one\": this.value = value; break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function get(id) {\r\n    var a = id.split(\"-\");\r\n    switch (a.length) {\r\n      case 1: return config[a[0]]; \r\n      case 2: return config[a[0]][a[1]];\r\n      case 3: return config[a[0]][a[1]][a[2]];\r\n      default: return;\r\n    }   \r\n  }\r\n    \r\n  Celestial.updateForm  = update;\r\n  Celestial.showConstellation = showCon;\r\n  Celestial.setLanguage = function(lang) {\r\n    var cfg = settings.set();\r\n    if (formats_all[config.culture].indexOf(lang) !== -1) cfg = setLanguage(lang);\r\n    return cfg;    \r\n  };\r\n}\r\n\r\n\r\n// Dependend fields relations\r\nvar depends = {\r\n  \"stars-show\": [\"stars-limit\", \"stars-colors\", \"stars-style-fill\", \"stars-designation\", \"stars-propername\", \"stars-size\", \"stars-exponent\"],\r\n  \"stars-designation\": [\"stars-designationType\", \"stars-designationLimit\"],\r\n  \"stars-propername\": [\"stars-propernameLimit\", \"stars-propernameType\"],\r\n  \"dsos-show\": [\"dsos-limit\", \"dsos-colors\", \"dsos-style-fill\", \"dsos-names\", \"dsos-size\", \"dsos-exponent\"],\r\n  \"dsos-names\": [\"dsos-namesType\", \"dsos-nameLimit\"],\r\n  \"mw-show\": [\"mw-style-opacity\", \"mw-style-fill\"],\r\n  \"constellations-names\": [\"constellations-namesType\"],\r\n  \"planets-show\": [\"planets-symbolType\", \"planets-names\"],\r\n  \"planets-names\": [\"planets-namesType\"]\r\n};\r\n\r\n// De/activate fields depending on selection of dependencies\r\nfunction enable(source) {\r\n  var fld = source.id, off;\r\n  \r\n  switch (fld) {\r\n    case \"stars-show\": \r\n      off = !$form(fld).checked;\r\n      for (var i=0; i< depends[fld].length; i++) { fldEnable(depends[fld][i], off); }\r\n      /* falls through */\r\n    case \"stars-designation\": \r\n      off = !$form(\"stars-designation\").checked || !$form(\"stars-show\").checked;\r\n      for (i=0; i< depends[\"stars-designation\"].length; i++) { fldEnable(depends[\"stars-designation\"][i], off); }\r\n      /* falls through */\r\n    case \"stars-propername\": \r\n      off = !$form(\"stars-propername\").checked || !$form(\"stars-show\").checked;\r\n      for (i=0; i< depends[\"stars-propername\"].length; i++) { fldEnable(depends[\"stars-propername\"][i], off); }\r\n      break;\r\n    case \"dsos-show\": \r\n      off = !$form(fld).checked;\r\n      for (i=0; i< depends[fld].length; i++) { fldEnable(depends[fld][i], off); }\r\n      /* falls through */\r\n    case \"dsos-names\": \r\n      off = !$form(\"dsos-names\").checked || !$form(\"dsos-show\").checked;      \r\n      for (i=0; i< depends[\"dsos-names\"].length; i++) { fldEnable(depends[\"dsos-names\"][i], off); }\r\n      break;\r\n    case \"planets-show\": \r\n      off = !$form(fld).checked;\r\n      for (i=0; i< depends[fld].length; i++) { fldEnable(depends[fld][i], off); }\r\n      /* falls through */\r\n    case \"planets-names\": \r\n      off = !$form(\"planets-names\").checked || !$form(\"planets-show\").checked;      \r\n      for (i=0; i< depends[\"planets-names\"].length; i++) { fldEnable(depends[\"planets-names\"][i], off); }\r\n      break;\r\n    case \"constellations-names\": \r\n    case \"mw-show\": \r\n      off = !$form(fld).checked;\r\n      for (i=0; i< depends[fld].length; i++) { fldEnable(depends[fld][i], off); }\r\n      break;\r\n  }  \r\n}\r\n\r\n// Enable/disable field d to status off\r\nfunction fldEnable(d, off) {\r\n  var node = $form(d);\r\n  if (!node) return;\r\n  node.disabled = off;\r\n  node.style.color = off ? \"#999\" : \"#000\";  \r\n  node.previousSibling.style.color = off ? \"#999\" : \"#000\";  \r\n  //if (node.previousSibling.previousSibling && node.previousSibling.previousSibling.tagName === \"LABEL\")\r\n  //  node.previousSibling.previousSibling.style.color = off ? \"#999\" : \"#000\";  \r\n}\r\n\r\n// Error notification\r\nfunction popError(nd, err) {\r\n  var p = findPos(nd);\r\n  d3.select(\"#error\").html(err).style( {top:px(p[1] + nd.offsetHeight + 1), left:px(p[0]), opacity:1} );\r\n  nd.focus();\r\n}\r\n\r\n//Check numeric field\r\nfunction testNumber(node) {\r\n  var v, adj = node.id === \"hr\" || node.id === \"min\" || node.id === \"sec\" ? 1 : 0;\r\n  if (node.validity) {\r\n    v = node.validity;\r\n    if (v.typeMismatch || v.badInput) { popError(node, node.title + \": check field value\"); return false; }\r\n    if (v.rangeOverflow || v.rangeUnderflow) { popError(node, node.title + \" must be between \" + (parseInt(node.min) + adj) + \" and \" + (parseInt(node.max) - adj)); return false; }\r\n  } else {\r\n    v = node.value;\r\n    if (!isNumber(v)) { popError(node, node.title + \": check field value\"); return false; }\r\n    v = parseFloat(v);\r\n    if (v < node.min || v > node.max ) { popError(node, node.title + \" must be between \" + (node.min + adj) + \" and \" + (+node.max - adj)); return false; }\r\n  }\r\n  d3.select(\"#error\").style( {top:\"-9999px\", left:\"-9999px\", opacity:0} ); \r\n  return true; \r\n}\r\n\r\n//Check color field\r\nfunction testColor(node) {\r\n  var v;\r\n  if (node.validity) {\r\n    v = node.validity;\r\n    if (v.typeMismatch || v.badInput) { popError(node, node.title + \": check field value\"); return false; }\r\n    if (node.value.search(/^#[0-9A-F]{6}$/i) === -1) { popError(node, node.title + \": not a color value\"); return false; }\r\n  } else {\r\n    v = node.value;\r\n    if (v === \"\") return true;\r\n    if (v.search(/^#[0-9A-F]{6}$/i) === -1) { popError(node, node.title + \": not a color value\"); return false; }\r\n  }\r\n  d3.select(\"#error\").style( {top:\"-9999px\", left:\"-9999px\", opacity:0} );\r\n  return true;\r\n}\r\n\r\nfunction setUnit(trans, old) {\r\n  var cx = $form(\"centerx\");\r\n  if (!cx) return null;\r\n  \r\n  if (old) {\r\n    if (trans === \"equatorial\" && old !== \"equatorial\") {\r\n      cx.value = (cx.value/15).toFixed(1);\r\n      if (cx.value < 0) cx.value += 24;\r\n    } else if (trans !== \"equatorial\" && old === \"equatorial\") {\r\n      cx.value = (cx.value * 15).toFixed(1);\r\n      if (cx.value > 180) cx.value -= 360;\r\n    }\r\n  }\r\n  if (trans === 'equatorial') {\r\n    cx.min = \"0\";\r\n    cx.max = \"24\";\r\n    $form(\"cxunit\").innerHTML = \"h\";\r\n  } else {\r\n    cx.min = \"-180\";\r\n    cx.max = \"180\";\r\n    $form(\"cxunit\").innerHTML = \"\\u00b0\";\r\n  }\r\n  return cx.value;\r\n}\r\n\r\nfunction setCenter(ctr, trans) {\r\n  var cx = $form(\"centerx\"), cy = $form(\"centery\"), cz = $form(\"centerz\");\r\n  if (!cx || !cy) return;\r\n  \r\n  if (ctr === null || ctr.length < 1) ctr = [0,0,0]; \r\n  if (ctr.length <= 2 || ctr[2] === undefined) ctr[2] = 0;\r\n  //config.center = ctr; \r\n  if (trans !== \"equatorial\") cx.value = ctr[0].toFixed(1); \r\n  else cx.value = ctr[0] < 0 ? (ctr[0] / 15 + 24).toFixed(1) : (ctr[0] / 15).toFixed(1); \r\n  \r\n  cy.value = ctr[1].toFixed(1);\r\n  cz.value = ctr[2] !== null ? ctr[2].toFixed(1) : 0;\r\n  settings.set({center: ctr});\r\n}\r\n\r\n// Set max input limits depending on data\r\nfunction setLimits() {\r\n  var t, rx = /\\d+(\\.\\d+)?/g,\r\n      s, d, res = {s:6, d:6},\r\n      config =  Celestial.settings();\r\n\r\n  d = config.dsos.data;\r\n  \r\n  //test dso limit\r\n  t = d.match(rx);\r\n  if (t !== null) {\r\n    res.d = parseFloat(t[t.length-1]);\r\n  }\r\n\r\n  if (res.d !== 6) {\r\n    $form(\"dsos-limit\").max = res.d;\r\n    $form(\"dsos-nameLimit\").max = res.d;\r\n  }\r\n   \r\n   s = config.stars.data;\r\n  \r\n  //test star limit\r\n  t = s.match(rx);\r\n  if (t !== null) {\r\n    res.s = parseFloat(t[t.length-1]);\r\n  }\r\n\r\n  if (res.s != 6) {\r\n    $form(\"stars-limit\").max = res.s;\r\n    $form(\"stars-designationLimit\").max = res.s;\r\n    $form(\"stars-propernameLimit\").max = res.s;\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\n// Options only visible in advanced mode\r\n//\"stars-designationType\", \"stars-propernameType\", \"stars-size\", \"stars-exponent\", \"stars-size\", \"stars-exponent\", //\"constellations-namesType\", \"planets-namesType\", \"planets-symbolType\"\r\nfunction showAdvanced(showit) {\r\n  var vis = showit ? \"inline-block\" : \"none\";\r\n  d3.select(parentElement + \" ~ #celestial-form\").selectAll(\".advanced\").style(\"display\", vis);\r\n  d3.select(parentElement + \" ~ #celestial-form\").selectAll(\"#label-propername\").style(\"display\", showit ? \"none\" : \"inline-block\");\r\n}\r\n\r\n\r\nfunction setVisibility(cfg, which) {\r\n   var vis, fld;\r\n   if (!has(cfg, \"formFields\")) return;\r\n   if (which && has(cfg.formFields, which)) {\r\n     d3.select(parentElement + \" ~ #celestial-form\").select(\"#\" + which).style( {\"display\": \"none\"} );\r\n     return;\r\n   }\r\n   // Special case for backward compatibility\r\n   if (cfg.form === false && cfg.location === true) {\r\n     d3.select(parentElement + \" ~ #celestial-form\").style(\"display\", \"inline-block\");\r\n     for (fld in cfg.formFields) {\r\n      if (!has(cfg.formFields, fld)) continue;\r\n       if (fld === \"location\") continue;\r\n       d3.select(parentElement + \" ~ #celestial-form\").select(\"#\" + fld).style( {\"display\": \"none\"} );     \r\n     }\r\n     return;\r\n   }\r\n   // hide if not desired\r\n   if (cfg.form === false) d3.select(parentElement + \" ~ #celestial-form\").style(\"display\", \"none\"); \r\n\r\n   for (fld in cfg.formFields) {\r\n     if (!has(cfg.formFields, fld)) continue;\r\n     if (fld === \"location\") continue;\r\n     vis = cfg.formFields[fld] === false ? \"none\" : \"block\";\r\n     d3.select(parentElement + \" ~ #celestial-form\").select(\"#\" + fld).style( {\"display\": vis} );     \r\n   }\r\n   \r\n}\r\n\r\nfunction listConstellations() {\r\n  var sel = d3.select(parentElement + \" ~ #celestial-form\").select(\"#constellation\"),\r\n      list = [], selected = 0, id, name, config = globalConfig;\r\n    \r\n  Celestial.container.selectAll(\".constname\").each( function(d, i) {\r\n    id = d.id;\r\n    if (id === config.constellation) selected = i;\r\n    name = d.properties[config.constellations.namesType];\r\n    if (name !== id) name += \" (\" + id + \")\";\r\n    list.push({o:id, n:name});\r\n  });\r\n  if (list.length < 1 || sel.length < 1) {\r\n    setTimeout(listConstellations, 1000);\r\n    return;\r\n  }\r\n  list = [{o:\"---\", n:\"(Select constellation)\"}].concat(list);\r\n  \r\n  sel.selectAll('option').remove();\r\n  sel.selectAll('option').data(list).enter().append('option')\r\n     .attr(\"value\", function (d) { return d.o; })\r\n     .text(function (d) { return d.n; });\r\n  sel.property(\"selectedIndex\", selected);\r\n  //$form(\"constellation\").firstChild.disabled = true;\r\n\r\n  //Celestial.constellations = list;\r\n}\r\n\r\nfunction $form(id) { return document.querySelector(parentElement + \" ~ #celestial-form\" + \" #\" + id); }\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar geoInfo = null;\r\n\r\nfunction geo(cfg) {\r\n  var dtFormat = d3.time.format(\"%Y-%m-%d %H:%M:%S\"),\r\n      zenith = [0,0],\r\n      geopos = [0,0], \r\n      date = new Date(),\r\n      localZone = -date.getTimezoneOffset(),\r\n      timeZone = localZone,\r\n      config = settings.set(cfg),\r\n      frm = d3.select(parentElement + \" ~ #celestial-form form\").insert(\"div\", \"div#general\").attr(\"id\", \"loc\");\r\n\r\n  var dtpick = new datetimepicker(config, function(date, tz) { \r\n    $form(\"datetime\").value = dateFormat(date, tz); \r\n    timeZone = tz;\r\n    go(); \r\n  });\r\n  \r\n  if (has(config, \"geopos\") && config.geopos !== null && config.geopos.length === 2) geopos = config.geopos;\r\n  var col = frm.append(\"div\").attr(\"class\", \"col\").attr(\"id\", \"location\").style(\"display\", \"none\");\r\n  //Latitude & longitude fields\r\n  col.append(\"label\").attr(\"title\", \"Location coordinates long/lat\").attr(\"for\", \"lat\").html(\"Location\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"lat\").attr(\"title\", \"Latitude\").attr(\"placeholder\", \"Latitude\").attr(\"max\", \"90\").attr(\"min\", \"-90\").attr(\"step\", \"0.0001\").attr(\"value\", geopos[0]).on(\"change\",  function () {\r\n    if (testNumber(this) === true) go(); \r\n  });\r\n  col.append(\"span\").html(\"\\u00b0\");\r\n  col.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"lon\").attr(\"title\", \"Longitude\").attr(\"placeholder\", \"Longitude\").attr(\"max\", \"180\").attr(\"min\", \"-180\").attr(\"step\", \"0.0001\").attr(\"value\", geopos[1]).on(\"change\",  function () { \r\n    if (testNumber(this) === true) go(); \r\n  });\r\n  col.append(\"span\").html(\"\\u00b0\");\r\n  //Here-button if supported\r\n  if (\"geolocation\" in navigator) {\r\n    col.append(\"input\").attr(\"type\", \"button\").attr(\"value\", \"Here\").attr(\"id\", \"here\").on(\"click\", here);\r\n  }\r\n  //Datetime field with dtpicker-button\r\n  col.append(\"label\").attr(\"title\", \"Local date/time\").attr(\"for\", \"datetime\").html(\" Date/time\");\r\n  col.append(\"input\").attr(\"type\", \"button\").attr(\"id\", \"day-left\").attr(\"title\", \"One day back\").on(\"click\", function () {\r\n    date.setDate(date.getDate() - 1); \r\n    $form(\"datetime\").value = dateFormat(date, timeZone); \r\n    go(); \r\n  });\r\n  col.append(\"input\").attr(\"type\", \"text\").attr(\"id\", \"datetime\").attr(\"title\", \"Date and time\").attr(\"value\", dateFormat(date, timeZone))\r\n  .on(\"click\", showpick, true).on(\"input\", function () { \r\n    this.value = dateFormat(date, timeZone); \r\n    if (!dtpick.isVisible()) showpick(); \r\n  });\r\n  col.append(\"div\").attr(\"id\", \"datepick\").on(\"click\", showpick);\r\n  col.append(\"input\").attr(\"type\", \"button\").attr(\"id\", \"day-right\").attr(\"title\", \"One day forward\").on(\"click\", function () { \r\n    date.setDate(date.getDate() + 1); \r\n    $form(\"datetime\").value = dateFormat(date, timeZone); \r\n    go(); \r\n  });\r\n  //Now -button sets current time & date of device  \r\n  col.append(\"input\").attr(\"type\", \"button\").attr(\"value\", \"Now\").attr(\"id\", \"now\").on(\"click\", now);\r\n  //Horizon marker\r\n  col.append(\"br\");\r\n  col.append(\"label\").attr(\"title\", \"Show horizon marker\").attr(\"for\", \"horizon-show\").html(\" Horizon marker\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"horizon-show\").property(\"checked\", config.horizon.show).on(\"change\", apply);    \r\n  //Daylight\r\n  col.append(\"label\").attr(\"title\", \"Show daylight\").attr(\"for\", \"daylight-show\").html(\"Daylight sky\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"daylight-show\").property(\"checked\", config.daylight.show).on(\"change\", apply);col.append(\"br\");\r\n    \r\n  //Show planets\r\n  col.append(\"label\").attr(\"title\", \"Show solar system objects\").attr(\"for\", \"planets-show\").html(\" Planets, Sun & Moon\");\r\n  col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"planets-show\").property(\"checked\", config.planets.show).on(\"change\", apply);    \r\n  //Planet names\r\n  var names = formats.planets[config.culture] || formats.planets.iau;\r\n  \r\n  for (var fld in names) {\r\n    if (!has(names, fld)) continue;\r\n    var keys = Object.keys(names[fld]);\r\n    if (keys.length > 1) {\r\n      //Select List\r\n      var txt = (fld === \"symbol\") ? \"as\" : \"with\";\r\n      col.append(\"label\").attr(\"for\", \"planets-\" + fld + \"Type\").html(txt);\r\n      \r\n      var selected = 0;\r\n      col.append(\"label\").attr(\"title\", \"Type of planet name\").attr(\"for\", \"planets-\" + fld + \"Type\").attr(\"class\", \"advanced\").html(\"\");\r\n      var sel = col.append(\"select\").attr(\"id\", \"planets-\" + fld + \"Type\").on(\"change\", apply);\r\n      var list = keys.map(function (key, i) {\r\n        if (key === config.planets[fld + \"Type\"]) selected = i;    \r\n        return {o:key, n:names[fld][key]}; \r\n      });\r\n      sel.selectAll(\"option\").data(list).enter().append('option')\r\n         .attr(\"value\", function (d) { return d.o; })\r\n         .text(function (d) { return d.n; });\r\n      sel.property(\"selectedIndex\", selected);\r\n\r\n      if (fld === \"names\") {\r\n        sel.attr(\"class\", \"advanced\");\r\n        col.append(\"label\").attr(\"for\", \"planets-\" + fld).html(\"names\");\r\n        col.append(\"input\").attr(\"type\", \"checkbox\").attr(\"id\", \"planets-\" + fld).property(\"checked\", config.planets[fld]).on(\"change\", apply);\r\n      }\r\n    } \r\n  }    \r\n \r\n  enable($form(\"planets-show\"));\r\n  showAdvanced(config.advanced);\r\n  \r\n\r\n  d3.select(document).on(\"mousedown\", function () { \r\n    if (!hasParent(d3.event.target, \"celestial-date\") && dtpick.isVisible()) dtpick.hide(); \r\n  });\r\n  \r\n  function now() {\r\n    date.setTime(Date.now());\r\n    $form(\"datetime\").value = dateFormat(date, timeZone);\r\n    go();\r\n  }\r\n\r\n  function here() {\r\n    navigator.geolocation.getCurrentPosition( function(pos) {\r\n      geopos = [Round(pos.coords.latitude, 4), Round(pos.coords.longitude, 4)];\r\n      $form(\"lat\").value = geopos[0];\r\n      $form(\"lon\").value = geopos[1];\r\n      go();\r\n    });  \r\n  }\r\n  \r\n  function showpick() {\r\n    dtpick.show(date, timeZone);\r\n  }\r\n  \r\n  function dateFormat(dt, tz) {\r\n    var tzs;\r\n    if (!tz || tz === \"0\") tzs = \" ±0000\";\r\n    else {\r\n      var h = Math.floor(Math.abs(tz) / 60),\r\n          m = Math.abs(tz) - (h * 60),\r\n          s = tz > 0 ? \" +\" : \" −\";\r\n      tzs = s + pad(h) + pad(m);\r\n    }\r\n    return dtFormat(dt) + tzs;\r\n  }  \r\n  \r\n\r\n  function isValidLocation(loc) {\r\n    //[lat, lon] expected\r\n    if (!loc || !isArray(loc) || loc.length < 2) return false;\r\n    if (!isNumber(loc[0]) || loc[0] < -90 || loc[0] > 90)  return false;\r\n    if (!isNumber(loc[1]) || loc[1] < -180 || loc[1] > 180)  return false;\r\n    return true;\r\n  }\r\n\r\n  function isValidTimezone(tz) {\r\n    if (tz === undefined || tz === null) return false;\r\n    if (!isNumber(tz) && Math.abs(tz) > 840) return false;\r\n    return true;    \r\n  }\r\n  \r\n  function apply() {\r\n    Object.assign(config, settings.set());\r\n    config.horizon.show = !!$form(\"horizon-show\").checked;\r\n    config.daylight.show = !!$form(\"daylight-show\").checked;\r\n    config.planets.show = !!$form(\"planets-show\").checked;    \r\n    config.planets.names = !!$form(\"planets-names\").checked;    \r\n    config.planets.namesType = $form(\"planets-namesType\").value;    \r\n    config.planets.symbolType = $form(\"planets-symbolType\").value;    \r\n    enable($form(\"planets-show\"));\r\n\r\n    Celestial.apply(config);\r\n  }\r\n\r\n  function go() {\r\n    var lon = parseFloat($form(\"lon\").value),\r\n        lat = parseFloat($form(\"lat\").value),\r\n        tz;\r\n    //Get current configuration\r\n    Object.assign(config, settings.set());\r\n\r\n    date = dtFormat.parse($form(\"datetime\").value.slice(0,-6));\r\n\r\n    //Celestial.apply(config);\r\n\r\n    if (!isNaN(lon) && !isNaN(lat)) {\r\n      if (lat !== geopos[0] || lon !== geopos[1]) {\r\n        geopos = [lat, lon];\r\n        setPosition([lat, lon], true);\r\n        return;\r\n      }\r\n      //if (!tz) tz = date.getTimezoneOffset();\r\n      $form(\"datetime\").value = dateFormat(date, timeZone); \r\n\r\n      var dtc = new Date(date.valueOf() - (timeZone - localZone) * 60000);\r\n\r\n      zenith = Celestial.getPoint(horizontal.inverse(dtc, [90, 0], geopos), config.transform);\r\n      zenith[2] = 0;\r\n      if (config.follow === \"zenith\") {\r\n        Celestial.rotate({center:zenith});\r\n      } else {\r\n        Celestial.redraw();\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  function setPosition(p, settime) {\r\n    if (!p || !has(config, \"settimezone\") || config.settimezone === false) return;\r\n    var timestamp = Math.floor(date.getTime() / 1000),\r\n        protocol = window && window.location.protocol === \"https:\" ? \"https\" : \"http\",\r\n        url = protocol + \"://api.timezonedb.com/v2.1/get-time-zone?key=\" + config.timezoneid + \"&format=json&by=position\" + \r\n              \"&lat=\" + p[0] + \"&lng=\" + p[1] + \"&time=\" + timestamp;\r\n       // oldZone = timeZone;\r\n\r\n    d3.json(url, function(error, json) { \r\n      if (error) return console.warn(error);\r\n      if (json.status === \"FAILED\") {\r\n        // Location at sea inferred from longitude\r\n        timeZone = Math.round(p[1] / 15) * 60;\r\n        geoInfo = {\r\n          gmtOffset: timeZone * 60,\r\n          message: \"Sea locatation inferred\",\r\n          timestamp: timestamp\r\n        };\r\n      } else {\r\n        timeZone = json.gmtOffset / 60;\r\n        geoInfo = json;\r\n      }\r\n      //if (settime) {\r\n        //date.setTime(timestamp * 1000); // - (timeZone - oldZone) * 60000);\r\n        //console.log(date.toUTCString());\r\n      //}\r\n      $form(\"datetime\").value = dateFormat(date, timeZone);\r\n      go();\r\n    }); \r\n  }\r\n\r\n  Celestial.dateFormat = dateFormat;\r\n  \r\n  Celestial.date = function (dt, tz) { \r\n    if (!dt) return date;  \r\n    if (isValidTimezone(tz)) timeZone = tz;\r\n    Object.assign(config, settings.set());\r\n    if (dtpick.isVisible()) dtpick.hide();\r\n    date.setTime(dt.valueOf());\r\n    $form(\"datetime\").value = dateFormat(dt, timeZone); \r\n    go();\r\n  };\r\n  Celestial.timezone = function (tz) { \r\n    if (!tz) return timeZone;  \r\n    if (isValidTimezone(tz)) timeZone = tz;\r\n    Object.assign(config, settings.set());\r\n    if (dtpick.isVisible()) dtpick.hide();\r\n    $form(\"datetime\").value = dateFormat(date, timeZone); \r\n    go();\r\n  };\r\n  Celestial.position = function () { return geopos; };\r\n  Celestial.location = function (loc, tz) {\r\n    if (!loc || loc.length < 2) return geopos;\r\n    if (isValidLocation(loc)) {\r\n      geopos = loc.slice();\r\n      $form(\"lat\").value = geopos[0];\r\n      $form(\"lon\").value = geopos[1];\r\n      if (isValidTimezone(tz)) timeZone = tz;\r\n      else setPosition(geopos, true);\r\n    }\r\n  };\r\n  //{\"date\":dt, \"location\":loc, \"timezone\":tz}\r\n  Celestial.skyview = function (cfg) {\r\n    if (!cfg) return {\"date\": date, \"location\": geopos, \"timezone\": timeZone};\r\n    var valid = false;\r\n    if (dtpick.isVisible()) dtpick.hide();\r\n    if (has(cfg, \"timezone\") && isValidTimezone(cfg.timezone)) {\r\n      timeZone = cfg.timezone;\r\n      valid = true;\r\n    }\r\n    if (has(cfg, \"date\") && isValidDate(cfg.date)) {\r\n      date.setTime(cfg.date.valueOf());\r\n      $form(\"datetime\").value = dateFormat(cfg.date, timeZone); \r\n      valid = true;\r\n    }\r\n    if (has(cfg, \"location\") && isValidLocation(cfg.location)) {\r\n      geopos = cfg.location.slice();\r\n      $form(\"lat\").value = geopos[0];\r\n      $form(\"lon\").value = geopos[1];\r\n      if (!has(cfg, \"timezone\")) { \r\n        setPosition(geopos, !has(cfg, \"date\"));\r\n        return;\r\n      }\r\n    }\r\n    //Celestial.updateForm();\r\n    if (valid === false) return {\"date\": date, \"location\": geopos, \"timezone\": timeZone};\r\n    if (config.follow === \"zenith\") go();\r\n    else Celestial.redraw();\r\n  };  \r\n  Celestial.dtLoc = Celestial.skyview;\r\n  Celestial.zenith = function () { return zenith; };\r\n  Celestial.nadir = function () {\r\n    var b = -zenith[1],\r\n        l = zenith[0] + 180;\r\n    if (l > 180) l -= 360;    \r\n    return [l, b-0.001]; \r\n  };\r\n\r\n  if (has(config, \"formFields\") && (config.location === true || config.formFields.location === true)) {\r\n    d3.select(parentElement + \" ~ #celestial-form\").select(\"#location\").style( {\"display\": \"inline-block\"} );\r\n  }\r\n  //only if appropriate\r\n  if (isValidLocation(geopos) && (config.location === true || config.formFields.location === true) && config.follow === \"zenith\")\r\n    setTimeout(go, 1000); \r\n \r\n}\r\n﻿\r\nvar gmdat = {\r\n  \"sol\": 0.0002959122082855911025,  // AU^3/d^2\r\n  \"mer\": 164468599544771, //km^3/d^2\r\n  \"ven\": 2425056445892137,\r\n  \"ter\": 2975536307796296,\r\n  \"lun\": 36599199229256,\r\n  \"mar\": 319711652803400,\r\n  \"cer\": 467549107200,\r\n  \"ves\": 129071530155,\r\n  \"jup\": 945905718740635000,\r\n  \"sat\": 283224952705891000,\r\n  \"ura\": 43256077238632300,\r\n  \"nep\": 51034401552155700,\r\n  \"plu\": 7327611364884,\r\n  \"eri\": 8271175680000\r\n},\r\n\r\n\r\nsymbols = {\r\n  \"sol\":\"\\u2609\", \"mer\":\"\\u263f\", \"ven\":\"\\u2640\", \"ter\":\"\\u2295\", \"lun\":\"\\u25cf\", \"mar\":\"\\u2642\", \"cer\":\"\\u26b3\", \r\n  \"ves\":\"\\u26b6\", \"jup\":\"\\u2643\", \"sat\":\"\\u2644\", \"ura\":\"\\u2645\", \"nep\":\"\\u2646\", \"plu\":\"\\u2647\", \"eri\":\"\\u26aa\"\r\n}, \r\n\r\nε = 23.43928 * deg2rad,\r\nsinε = Math.sin(ε),\r\ncosε = Math.cos(ε),\r\nkelements = [\"a\",\"e\",\"i\",\"w\",\"M\",\"L\",\"W\",\"N\",\"n\",\"ep\",\"ref\",\"lecl\",\"becl\",\"Tilt\"];\r\n/*\r\n    ep = epoch (iso-date)\r\n    N = longitude of the ascending node (deg) Ω\r\n    i = inclination to the refrence plane, default:ecliptic (deg) \r\n    w = argument of periapsis (deg)  ω\r\n    a = semi-major axis, or mean distance from parent body (AU,km)\r\n    e = eccentricity (0=circle, 0-1=ellipse, 1=parabola, >1=hyperbola ) (-)\r\n    M = mean anomaly (0 at periapsis; increases uniformly with time) (deg)\r\n    n = mean daily motion = 360/P (deg/day)\r\n    \r\n    W = N + w  = longitude of periapsis ϖ\r\n    L = M + W  = mean longitude\r\n    q = a*(1-e) = periapsis distance\r\n    Q = a*(1+e) = apoapsis distance\r\n    P = 2π * sqrt(a^3/GM) = orbital period (years)\r\n    T = Epoch_of_M - (M(deg)/360_deg) / P  = time of periapsis\r\n    v = true anomaly (angle between position and periapsis) ν\r\n    E = eccentric anomaly\r\n    \r\n    Mandatory: a, e, i, N, w|W, M|L, dM|n\r\n    \r\n*/\r\n\r\nvar Kepler = function () {\r\n  var gm = gmdat.sol, \r\n      parentBody = \"sol\", \r\n      elem = {}, dat = {},\r\n      id, name, symbol;\r\n\r\n\r\n  function kepler(date) {\r\n    dates(date);\r\n    if (id === \"sol\") {\r\n      dat.ephemeris.x = 0;\r\n      dat.ephemeris.y = 0;\r\n      dat.ephemeris.z = 0;\r\n      dat.ephemeris.mag = -6;\r\n      return kepler;\r\n    }\r\n    coordinates();\r\n    return kepler;\r\n  }\r\n\r\n  var dates = function(date) {\r\n    var dt, de = dat.ephemeris = {};\r\n    if (date) {\r\n      if (date instanceof Date) { dt = new Date(date.valueOf()); }\r\n      else { dt = dateParse(date); }\r\n    }\r\n    if (!dt) { dt = new Date(); }\r\n    de.jd = JD(dt);\r\n      \r\n    dt = dateParse(elem.ep);\r\n    if (!dt) dt = dateParse(\"2000-01-01\");\r\n    de.jd0 = JD(dt);\r\n    de.d = de.jd - de.jd0;\r\n    de.cy = de.d / 36525;\r\n  };\r\n\r\n  var coordinates = function() {\r\n    var key, de = dat.ephemeris;\r\n    if (id === \"lun\") {\r\n      de = moon_elements(de);\r\n      if (!de) return;\r\n    } else {\r\n      for (var i=0; i<kelements.length; i++) {\r\n        key = kelements[i];\r\n        if (!has(elem, key)) continue; \r\n        if (has(elem, \"d\"+key)) {\r\n          de[key] = elem[key] + elem[\"d\"+key] * de.cy;\r\n        } else if (has(elem, key)) {\r\n          de[key] = elem[key];\r\n        }\r\n      }\r\n      if (has(de, \"M\") && !has(de, \"dM\") && has(de, \"n\")) {\r\n        de.M += (de.n * de.d);\r\n      }\r\n    }\r\n    derive();\r\n    trueAnomaly();\r\n    cartesian();    \r\n  };\r\n\r\n  kepler.cartesian = function() {\r\n    return dat;    \r\n  };\r\n\r\n  kepler.spherical = function() {\r\n    spherical();\r\n    return dat;    \r\n  };\r\n\r\n  kepler.equatorial = function(pos) {\r\n    equatorial(pos);\r\n    return dat;    \r\n  };\r\n\r\n  kepler.transpose = function() {\r\n    transpose(dat);\r\n    return dat;    \r\n  };\r\n  \r\n  kepler.elements = function(_) {\r\n    var key;\r\n    \r\n    if (!arguments.length || arguments[0] === undefined) return kepler;\r\n    \r\n    for (var i=0; i<kelements.length; i++) {\r\n      key = kelements[i];\r\n      if (!has(_, key)) continue; \r\n      elem[key] = _[key];\r\n      \r\n      if (key === \"a\" || key === \"e\") elem[key] *= 1.0; \r\n      else if (key !== \"ref\" && key !== \"ep\") elem[key] *= deg2rad;\r\n\r\n      if (has(_, \"d\" + key)) {\r\n        key = \"d\" + key;\r\n        elem[key] = _[key];\r\n        if (key === \"da\" || key === \"de\") elem[key] *= 1.0; \r\n        else elem[key] *= deg2rad;\r\n      } \r\n    }\r\n    return kepler;\r\n  };\r\n\r\n  kepler.params = function(_) {\r\n    if (!arguments.length) return kepler; \r\n    for (var par in _) {\r\n      if (!has(_, par)) continue;\r\n      if (_[par] === \"elements\") continue;\r\n      dat[par] = _[par];\r\n    }\r\n    return kepler;\r\n  };\r\n  \r\n\r\n  kepler.parentBody = function(_) {\r\n    if (!arguments.length) return parentBody; \r\n    parentBody = _;\r\n    gm = gmdat[parentBody];\r\n    return kepler;\r\n  };\r\n\r\n  kepler.id = function(_) {\r\n    if (!arguments.length) return id; \r\n    id = _;\r\n    symbol = symbols[_];\r\n    return kepler;\r\n  };\r\n\r\n  kepler.Name = function(_) {\r\n    if (!arguments.length) return name; \r\n    name = _;\r\n    return kepler;\r\n  };\r\n\r\n  kepler.symbol = function(_) {\r\n    if (!arguments.length) return symbol; \r\n    symbol = symbols[_];\r\n    return kepler;\r\n  };\r\n\r\n  \r\n  function near_parabolic(E, e) {\r\n    var anom2 = e > 1.0 ? E*E : -E*E,\r\n        term = e * anom2 * E / 6.0,\r\n        rval = (1.0 - e) * E - term,\r\n        n = 4;\r\n\r\n    while(Math.abs(term) > 1e-15) {\r\n      term *= anom2 / (n * (n + 1));\r\n      rval -= term;\r\n      n += 2;\r\n    }\r\n    return(rval);\r\n  }\r\n\r\n  function anomaly() {\r\n    var de = dat.ephemeris,\r\n        curr, err, trial, tmod,\r\n        e = de.e, M = de.M,\r\n        thresh = 1e-8,\r\n        offset = 0.0, \r\n        delta_curr = 1.9, \r\n        is_negative = false, \r\n        n_iter = 0;\r\n\r\n    if (!M) return(0.0); \r\n\r\n    if (e < 1.0) {\r\n      if (M < -Math.PI || M > Math.PI) {\r\n        tmod = Trig.normalize0(M);\r\n        offset = M - tmod;\r\n        M = tmod;\r\n      }\r\n\r\n      if (e < 0.9) {   \r\n        curr = Math.atan2(Math.sin(M), Math.cos(M) - e);\r\n        do {\r\n          err = (curr - e * Math.sin(curr) - M) / (1.0 - e * Math.cos(curr));\r\n          curr -= err;\r\n        } while (Math.abs(err) > thresh);\r\n        return curr; // + offset;\r\n      }\r\n    }\r\n\r\n    if ( M < 0.0) {\r\n      M = -M;\r\n      is_negative = true;\r\n    }\r\n\r\n    curr = M;\r\n    thresh = thresh * Math.abs(1.0 - e);\r\n               /* Due to roundoff error,  there's no way we can hope to */\r\n               /* get below a certain minimum threshhold anyway:        */\r\n    if ( thresh < 1e-15) { thresh = 1e-15; }\r\n    if ( (e > 0.8 && M < Math.PI / 3.0) || e > 1.0) {   /* up to 60 degrees */\r\n      trial = M / Math.abs( 1.0 - e);\r\n\r\n      if (trial * trial > 6.0 * Math.abs(1.0 - e)) {  /* cubic term is dominant */\r\n        if (M < Math.PI) {\r\n          trial = Math.pow(6.0 * M, 1/3);\r\n        } else {       /* hyperbolic w/ 5th & higher-order terms predominant */\r\n          trial = Trig.asinh( M / e);\r\n        }\r\n      }\r\n      curr = trial;\r\n    }\r\n    if (e > 1.0 && M > 4.0) {   /* hyperbolic, large-mean-anomaly case */\r\n      curr = Math.log(M);\r\n    }\r\n    if (e < 1.0) {\r\n      while(Math.abs(delta_curr) > thresh) {\r\n        if ( n_iter++ > 8) {\r\n          err = near_parabolic(curr, e) - M;\r\n        } else {\r\n          err = curr - e * Math.sin(curr) - M;\r\n        }\r\n        delta_curr = -err / (1.0 - e * Math.cos(curr));\r\n        curr += delta_curr;\r\n      }\r\n    } else {\r\n      while (Math.abs(delta_curr) > thresh) {\r\n        if (n_iter++ > 7) {\r\n          err = -near_parabolic(curr, e) - M;\r\n        } else {\r\n          err = e * Trig.sinh(curr) - curr - M;\r\n        }\r\n        delta_curr = -err / (e * Trig.cosh(curr) - 1.0);\r\n        curr += delta_curr;\r\n      }\r\n    }\r\n    return( is_negative ? offset - curr : offset + curr);\r\n  }\r\n\r\n  function trueAnomaly() {\r\n    var x, y, r0, g, t, de = dat.ephemeris;\r\n\r\n    if (de.e === 1.0) {   /* parabolic */\r\n      t = de.jd0 - de.T;\r\n      g = de.w0 * t * 0.5;\r\n\r\n      y = Math.pow(g + Math.sqrt(g * g + 1.0), 1/3);\r\n      de.v = 2.0 * Math.atan(y - 1.0 / y);\r\n    } else {          /* got the mean anomaly;  compute eccentric,  then true */\r\n      de.E = anomaly();\r\n      if (de.e > 1.0) {    /* hyperbolic case */\r\n        x = (de.e - Trig.cosh(de.E));\r\n        y = Trig.sinh(de.E);\r\n      } else {          /* elliptical case */\r\n        x = (Math.cos(de.E) - de.e);\r\n        y =  Math.sin(de.E);\r\n      }\r\n      y *= Math.sqrt(Math.abs(1.0 - de.e * de.e));\r\n      de.v = Math.atan2(y, x);\r\n    }\r\n\r\n    r0 = de.q * (1.0 + de.e);\r\n    de.r = r0 / (1.0 + de.e * Math.cos(de.v));\r\n  }\r\n\r\n  function derive() {\r\n    var de = dat.ephemeris;\r\n    if (!de.hasOwnProperty(\"w\")) {\r\n      de.w = de.W - de.N;\r\n    }\r\n    if (!de.hasOwnProperty(\"M\")) {\r\n      de.M = de.L - de.W;\r\n    }\r\n    if (de.e < 1.0) { de.M = Trig.normalize0(de.M); }\r\n    //de.P = Math.pow(Math.abs(de.a), 1.5);\r\n    de.P = τ * Math.sqrt(Math.pow(de.a, 3) / gm) / 365.25;\r\n    de.T = de.jd0 - (de.M / halfπ) / de.P;\r\n\r\n    if (de.e !== 1.0) {   /* for non-parabolic orbits: */\r\n     de.q = de.a * (1.0 - de.e);\r\n     de.t0 = de.a * Math.sqrt(Math.abs(de.a) / gm);\r\n    } else {\r\n     de.w0 = (3.0 / Math.sqrt(2)) / (de.q * Math.sqrt(de.q / gm));\r\n     de.a = 0.0;\r\n     de.t0 = 0.0;\r\n    }\r\n    de.am = Math.sqrt(gm * de.q * (1.0 + de.e));\r\n  }\r\n\r\n  function transpose() {\r\n    var de = dat.ephemeris;\r\n    if (!de.ref || de.ref === \"ecl\") {\r\n      de.tx = de.x;\r\n      de.ty = de.y;\r\n      de.tz = de.z;\r\n      return;\r\n    }\r\n    var a0 = de.lecl,// - Math.PI/2,\r\n        a1 = Math.PI/2 - de.becl,\r\n        angles = [0, a1, -a0];\r\n    transform(de, angles);\r\n    var tp =  Trig.cartesian([de.tl, de.tb, de.r]);\r\n    de.tx = tp.x;\r\n    de.ty = tp.y;\r\n    de.tz = tp.z;\r\n  }\r\n\r\n  function equatorial(pos) {\r\n    var de = dat.ephemeris, pe = pos.ephemeris;\r\n    ε = (23.439292 - 0.0130042 * de.cy - 1.667e-7 * de.cy * de.cy + 5.028e-7 * de.cy * de.cy * de.cy) * deg2rad;\r\n    sinε = Math.sin(ε);\r\n    cosε = Math.cos(ε);\r\n    var o = (id === \"lun\") ? {x:0, y:0, z:0} : {x:pe.x, y:pe.y, z:pe.z};\r\n    de.xeq = de.x - o.x;\r\n    de.yeq = (de.y - o.y) * cosε - (de.z - o.z) * sinε;\r\n    de.zeq = (de.y - o.y) * sinε + (de.z - o.z) * cosε;\r\n\r\n    de.ra = Trig.normalize(Math.atan2(de.yeq, de.xeq));\r\n    de.dec = Math.atan2(de.zeq, Math.sqrt(de.xeq*de.xeq + de.yeq*de.yeq));\r\n    if (id === \"lun\") de = moon_corr(de, pe);\r\n    de.pos = [de.ra / deg2rad, de.dec / deg2rad];\r\n    de.rt = Math.sqrt(de.xeq*de.xeq + de.yeq*de.yeq + de.zeq*de.zeq);\r\n    if (id !== \"sol\") de.mag = magnitude();\r\n  }\r\n\r\n  function magnitude() {\r\n    var de = dat.ephemeris,\r\n        rs = de.r, rt = de.rt,\r\n        a = Math.acos((rs*rs + rt*rt - 1) / (2 * rs * rt)),\r\n        q = 0.666 *((1-a/Math.PI) * Math.cos(a) + 1 / Math.PI * Math.sin(a)),\r\n        m = dat.H * 1 + 5 * Math.log(rs*rt) * Math.LOG10E - 2.5 * Math.log(q) * Math.LOG10E;\r\n        \r\n    return m;\r\n  }\r\n\r\n  function cartesian() {\r\n    var de = dat.ephemeris,\r\n        u = de.v + de.w;\r\n    de.x = de.r * (Math.cos(de.N) * Math.cos(u) - Math.sin(de.N) * Math.sin(u) * Math.cos(de.i));\r\n    de.y = de.r * (Math.sin(de.N) * Math.cos(u) + Math.cos(de.N) * Math.sin(u) * Math.cos(de.i));\r\n    de.z = de.r * (Math.sin(u) * Math.sin(de.i));\r\n    return dat;\r\n  }\r\n\r\n  function spherical() {\r\n    var de = dat.ephemeris,\r\n        lon = Math.atan2(de.y, de.x),\r\n        lat = Math.atan2(de.z, Math.sqrt(de.x*de.x + de.y*de.y));\r\n    de.l = Trig.normalize(lon);\r\n    de.b = lat;\r\n    return dat; \r\n  }\r\n\r\n  function transform(angles) {\r\n    \r\n  }\r\n\r\n  function polar2cart(pos) {\r\n    var rclat = Math.cos(pos.lat) * pos.r;\r\n    pos.x = rclat * Math.cos(pos.lon);\r\n    pos.y = rclat * Math.sin(pos.lon);\r\n    pos.z = pos.r * Math.sin(pos.lat);\r\n    return pos;\r\n  }\r\n\r\n  \r\n  function JD(dt) {  \r\n    var yr = dt.getUTCFullYear(),\r\n        mo = dt.getUTCMonth() + 1,\r\n        dy = dt.getUTCDate(),\r\n        frac = (dt.getUTCHours() - 12 + dt.getUTCMinutes()/60.0 + dt.getUTCSeconds()/3600.0) / 24, \r\n        IYMIN = -4799;        /* Earliest year allowed (4800BC) */\r\n\r\n    if (yr < IYMIN) return -1; \r\n    var a = Math.floor((14 - mo) / 12),\r\n        y = yr + 4800 - a,\r\n        m = mo + (12 * a) - 3;\r\n    var jdn = dy + Math.floor((153 * m + 2)/5) + (365 * y) + Math.floor(y / 4) - Math.floor(y / 100) + Math.floor(y / 400) - 32045;\r\n    return jdn + frac;   \r\n  }\r\n\r\n  function mst(lon) {\r\n    var l = lon || 0;  // lon=0 -> gmst\r\n    return (18.697374558 + 24.06570982441908 * dat.ephemeris.d) * 15 + l;\r\n  }\r\n  \r\n    \r\n  function observer(pos) {\r\n    var flat = 298.257223563,    // WGS84 flattening of earth\r\n        re = 6378.137,           // GRS80/WGS84 semi major axis of earth ellipsoid\r\n        h = pos.h || 0,\r\n        cart = {},\r\n        gmst = mst();\r\n    \r\n    var cosl = Math.cos(pos.lat),\r\n        sinl = Math.sin(pos.lat),\r\n        fl = 1.0 - 1.0 / flat;\r\n    var fl2 = fl * fl;\r\n    \r\n    var u = 1.0 / Math.sqrt (cosl * cosl + fl2 * sinl * sinl),\r\n        a = re * u + h,\r\n        b = re * fl2 * u + h,\r\n        r = Math.sqrt (a * a * cosl * cosl + b * b * sinl * sinl); // geocentric distance from earth center\r\n\r\n    cart.lat = Math.acos (a * cosl / r); \r\n    cart.lon = pos.lon; \r\n    cart.r = h;\r\n    \r\n    if (pos.lat < 0.0) cart.lat *= -1; \r\n\r\n    polar2cart(cart); \r\n\r\n    // rotate around earth's polar axis to align coordinate system from Greenwich to vernal equinox\r\n    var angle = gmst * deg2rad; // sideral time gmst given in hours. Convert to radians\r\n\r\n    cart.x = cart.x * Math.cos(angle) - cart.y * Math.sin(angle);\r\n    cart.y = cart.x * Math.sin(angle) + cart.y * Math.cos(angle);\r\n    return(cart);\r\n  }\r\n\r\n  function moon_elements(dat) {\r\n    if ((typeof Moon !== \"undefined\")) return Moon.elements(dat);\r\n  }\r\n  \r\n  function moon_corr(dat, pos) {\r\n    spherical();\r\n    if ((typeof Moon !== \"undefined\")) return Moon.corr(dat, pos);\r\n  }\r\n\r\n  return kepler;  \r\n};﻿\r\nvar Moon = {\r\n  elements: function(dat) {\r\n    var t = (dat.jd - 2451545) / 36525,\r\n        t2 = t * t,\r\n        t3 = t * t2,\r\n        t4 = t * t3,\r\n        t5 = t * t4,\r\n        t2e4 = t2 * 1e-4,\r\n        t3e6 = t3 * 1e-6,\r\n        t4e8 = t4 * 1e-8;\r\n\r\n    // semimajor axis\r\n    var sa = 3400.4 * Math.cos(deg2rad * (235.7004 + 890534.2230 * t - 32.601 * t2e4 \r\n        + 3.664 * t3e6 - 1.769 * t4e8)) \r\n        - 635.6 * Math.cos(deg2rad * (100.7370 + 413335.3554 * t - 122.571 * t2e4 \r\n        - 10.684 * t3e6 + 5.028 * t4e8)) \r\n        - 235.6 * Math.cos(deg2rad * (134.9634 + 477198.8676 * t + 89.970 * t2e4 \r\n        + 14.348 * t3e6 - 6.797 * t4e8)) \r\n        + 218.1 * Math.cos(deg2rad * (238.1713 +  854535.1727 * t - 31.065 * t2e4 \r\n        + 3.623 * t3e6  - 1.769 * t4e8)) \r\n        + 181.0 * Math.cos(deg2rad * (10.6638 + 1367733.0907 * t + 57.370 * t2e4 \r\n        + 18.011 * t3e6 - 8.566 * t4e8)) \r\n        - 39.9 * Math.cos(deg2rad * (103.2079 + 377336.3051 * t - 121.035 * t2e4 \r\n        - 10.724 * t3e6 + 5.028 * t4e8)) \r\n        - 38.4 * Math.cos(deg2rad * (233.2295 + 926533.2733 * t - 34.136 * t2e4 \r\n        + 3.705 * t3e6 - 1.769 * t4e8)) \r\n        + 33.8 * Math.cos(deg2rad * (336.4374 + 1303869.5784 * t - 155.171 * t2e4 \r\n        - 7.020 * t3e6 + 3.259 * t4e8)) \r\n        + 28.8 * Math.cos(deg2rad * (111.4008 + 1781068.4461 * t - 65.201 * t2e4 \r\n        + 7.328 * t3e6 - 3.538 * t4e8)) \r\n        + 12.6 * Math.cos(deg2rad * (13.1347 + 1331734.0404 * t + 58.906 * t2e4 \r\n        + 17.971 * t3e6 - 8.566 * t4e8)) \r\n        + 11.4 * Math.cos(deg2rad * (186.5442 + 966404.0351 * t - 68.058 * t2e4 \r\n        - 0.567 * t3e6 + 0.232 * t4e8)) \r\n        - 11.1 * Math.cos(deg2rad * (222.5657 - 441199.8173 * t - 91.506 * t2e4 \r\n        - 14.307 * t3e6 + 6.797 * t4e8)) \r\n        - 10.2 * Math.cos(deg2rad * (269.9268 + 954397.7353 * t + 179.941 * t2e4 \r\n        + 28.695 * t3e6 - 13.594 * t4e8)) \r\n        + 9.7 * Math.cos(deg2rad * (145.6272 + 1844931.9583 * t + 147.340 * t2e4 \r\n        + 32.359 * t3e6 - 15.363 * t4e8)) \r\n        + 9.6 * Math.cos(deg2rad * (240.6422 + 818536.1225 * t - 29.529 * t2e4 \r\n        + 3.582 * t3e6 - 1.769 * t4e8)) \r\n        + 8.0 * Math.cos(deg2rad * (297.8502 + 445267.1115 * t - 16.300 * t2e4 \r\n        + 1.832 * t3e6 - 0.884 * t4e8)) \r\n        - 6.2 * Math.cos(deg2rad * (132.4925 + 513197.9179 * t + 88.434 * t2e4 \r\n        + 14.388 * t3e6 - 6.797 * t4e8)) \r\n        + 6.0 * Math.cos(deg2rad * (173.5506 + 1335801.3346 * t - 48.901 * t2e4 \r\n        + 5.496 * t3e6 - 2.653 * t4e8)) \r\n        + 3.7 * Math.cos(deg2rad * (113.8717 + 1745069.3958 * t - 63.665 * t2e4 \r\n        + 7.287 * t3e6 - 3.538 * t4e8)) \r\n        + 3.6 * Math.cos(deg2rad * (338.9083 + 1267870.5281 * t - 153.636 * t2e4 \r\n        - 7.061 * t3e6 + 3.259 * t4e8)) \r\n        + 3.2 * Math.cos(deg2rad * (246.3642 + 2258267.3137 * t + 24.769 * t2e4 \r\n        + 21.675 * t3e6 - 10.335 * t4e8)) \r\n        - 3.0 * Math.cos(deg2rad * (8.1929 + 1403732.1410 * t + 55.834 * t2e4 \r\n        + 18.052 * t3e6 - 8.566 * t4e8)) \r\n        + 2.3 * Math.cos(deg2rad * (98.2661 + 449334.4057 * t - 124.107 * t2e4 \r\n        - 10.643 * t3e6 + 5.028 * t4e8)) \r\n        - 2.2 * Math.cos(deg2rad * (357.5291 + 35999.0503 * t - 1.536 * t2e4 \r\n        + 0.041 * t3e6 + 0.000 * t4e8)) \r\n        - 2.0 * Math.cos(deg2rad * (38.5872 + 858602.4669 * t - 138.871 * t2e4 \r\n        - 8.852 * t3e6 + 4.144 * t4e8)) \r\n        - 1.8 * Math.cos(deg2rad * (105.6788 + 341337.2548 * t - 119.499 * t2e4 \r\n        - 10.765 * t3e6 + 5.028 * t4e8)) \r\n        - 1.7 * Math.cos(deg2rad * (201.4740 + 826670.7108 * t - 245.142 * t2e4 \r\n        - 21.367 * t3e6 + 10.057 * t4e8)) \r\n        + 1.6 * Math.cos(deg2rad * (184.1196 + 401329.0556 * t + 125.428 * t2e4 \r\n        + 18.579 * t3e6 - 8.798 * t4e8)) \r\n        - 1.4 * Math.cos(deg2rad * (308.4192 - 489205.1674 * t + 158.029 * t2e4 \r\n        + 14.915 * t3e6 - 7.029 * t4e8)) \r\n        + 1.3 * Math.cos(deg2rad * (325.7736 - 63863.5122 * t - 212.541 * t2e4 \r\n        - 25.031 * t3e6 + 11.826 * t4e8));\r\n\r\n    var sapp = - 0.55 * Math.cos(deg2rad * (238.2 + 854535.2 * t)) \r\n        + 0.10 * Math.cos(deg2rad * (103.2 + 377336.3 * t)) \r\n        + 0.10 * Math.cos(deg2rad * (233.2 + 926533.3 * t));\r\n\r\n    var sma = 383397.6 + sa + sapp * t;\r\n\r\n    // orbital eccentricity\r\n\r\n    var se = 0.014217 * Math.cos(deg2rad * (100.7370 + 413335.3554 * t - 122.571 * t2e4 \r\n        - 10.684 * t3e6 + 5.028 * t4e8)) \r\n        + 0.008551 * Math.cos(deg2rad * (325.7736 - 63863.5122 * t - 212.541 * t2e4 \r\n        - 25.031 * t3e6 + 11.826 * t4e8)) \r\n        - 0.001383 * Math.cos(deg2rad * (134.9634 + 477198.8676 * t + 89.970 * t2e4 \r\n        + 14.348 * t3e6 - 6.797 * t4e8)) \r\n        + 0.001353 * Math.cos(deg2rad * (10.6638 + 1367733.0907 * t + 57.370 * t2e4 \r\n        + 18.011 * t3e6 - 8.566 * t4e8)) \r\n        - 0.001146 * Math.cos(deg2rad * (66.5106 + 349471.8432 * t - 335.112 * t2e4 \r\n        - 35.715 * t3e6 + 16.854 * t4e8)) \r\n        - 0.000915 * Math.cos(deg2rad * (201.4740 + 826670.7108 * t - 245.142 * t2e4 \r\n        - 21.367 * t3e6 + 10.057 * t4e8)) \r\n        + 0.000869 * Math.cos(deg2rad * (103.2079 + 377336.3051 * t - 121.035 * t2e4 \r\n        - 10.724 * t3e6 + 5.028 * t4e8)) \r\n        - 0.000628 * Math.cos(deg2rad * (235.7004 + 890534.2230 * t - 32.601 * t2e4 \r\n        + 3.664 * t3e6  - 1.769 * t4e8)) \r\n        - 0.000393 * Math.cos(deg2rad * (291.5472 - 127727.0245 * t - 425.082 * t2e4 \r\n        - 50.062 * t3e6 + 23.651 * t4e8)) \r\n        + 0.000284 * Math.cos(deg2rad * (328.2445 - 99862.5625 * t - 211.005 * t2e4 \r\n        - 25.072 * t3e6 + 11.826 * t4e8)) \r\n        - 0.000278 * Math.cos(deg2rad * (162.8868 - 31931.7561 * t - 106.271 * t2e4 \r\n        - 12.516 * t3e6 + 5.913 * t4e8)) \r\n        - 0.000240 * Math.cos(deg2rad * (269.9268 + 954397.7353 * t + 179.941 * t2e4 \r\n        + 28.695 * t3e6 - 13.594 * t4e8)) \r\n        + 0.000230 * Math.cos(deg2rad * (111.4008 + 1781068.4461 * t - 65.201 * t2e4 \r\n        + 7.328 * t3e6  - 3.538 * t4e8)) \r\n        + 0.000229 * Math.cos(deg2rad * (167.2476 + 762807.1986 * t - 457.683 * t2e4 \r\n        - 46.398 * t3e6 + 21.882 * t4e8)) \r\n        - 0.000202 * Math.cos(deg2rad * ( 83.3826 - 12006.2998 * t + 247.999 * t2e4 \r\n        + 29.262 * t3e6 - 13.826 * t4e8)) \r\n        + 0.000190 * Math.cos(deg2rad * (190.8102 - 541062.3799 * t - 302.511 * t2e4 \r\n        - 39.379 * t3e6 + 18.623 * t4e8)) \r\n        + 0.000177 * Math.cos(deg2rad * (357.5291 + 35999.0503 * t - 1.536 * t2e4 \r\n        + 0.041 * t3e6 + 0.000 * t4e8)) \r\n        + 0.000153 * Math.cos(deg2rad * (32.2842 + 285608.3309 * t - 547.653 * t2e4 \r\n        - 60.746 * t3e6 + 28.679 * t4e8)) \r\n        - 0.000137 * Math.cos(deg2rad * (44.8902 + 1431596.6029 * t + 269.911 * t2e4 \r\n        + 43.043 * t3e6 - 20.392 * t4e8)) \r\n        + 0.000122 * Math.cos(deg2rad * (145.6272 + 1844931.9583 * t + 147.340 * t2e4 \r\n        + 32.359 * t3e6 - 15.363 * t4e8)) \r\n        + 0.000116 * Math.cos(deg2rad * (302.2110 + 1240006.0662 * t - 367.713 * t2e4 \r\n        - 32.051 * t3e6 + 15.085 * t4e8)) \r\n        - 0.000111 * Math.cos(deg2rad * (203.9449 + 790671.6605 * t - 243.606 * t2e4 \r\n        - 21.408 * t3e6 + 10.057 * t4e8)) \r\n        - 0.000108 * Math.cos(deg2rad * (68.9815 + 313472.7929 * t - 333.576 * t2e4 \r\n        - 35.756 * t3e6 + 16.854 * t4e8)) \r\n        + 0.000096 * Math.cos(deg2rad * (336.4374 + 1303869.5784 * t - 155.171 * t2e4 \r\n        - 7.020 * t3e6 + 3.259 * t4e8)) \r\n        - 0.000090 * Math.cos(deg2rad * (98.2661 + 449334.4057 * t - 124.107 * t2e4 \r\n        - 10.643 * t3e6 + 5.028 * t4e8)) \r\n        + 0.000090 * Math.cos(deg2rad * (13.1347 + 1331734.0404 * t + 58.906 * t2e4 \r\n        + 17.971 * t3e6 - 8.566 * t4e8)) \r\n        + 0.000056 * Math.cos(deg2rad * (55.8468 - 1018261.2475 * t - 392.482 * t2e4 \r\n        - 53.726 * t3e6 + 25.420 * t4e8)) \r\n        - 0.000056 * Math.cos(deg2rad * (238.1713 + 854535.1727 * t - 31.065 * t2e4 \r\n        + 3.623 * t3e6 - 1.769 * t4e8)) \r\n        + 0.000052 * Math.cos(deg2rad * (308.4192 - 489205.1674 * t + 158.029 * t2e4 \r\n        + 14.915 * t3e6 - 7.029 * t4e8)) \r\n        - 0.000050 * Math.cos(deg2rad * (133.0212 + 698943.6863 * t - 670.224 * t2e4 \r\n        - 71.429 * t3e6 + 33.708 * t4e8)) \r\n        - 0.000049 * Math.cos(deg2rad * (267.9846 + 1176142.5540 * t - 580.254 * t2e4 \r\n        - 57.082 * t3e6 + 26.911 * t4e8)) \r\n        - 0.000049 * Math.cos(deg2rad * (184.1196 + 401329.0556 * t + 125.428 * t2e4 \r\n        + 18.579 * t3e6 - 8.798 * t4e8)) \r\n        - 0.000045 * Math.cos(deg2rad * (49.1562 - 75869.8120 * t + 35.458 * t2e4 \r\n        + 4.231 * t3e6 - 2.001 * t4e8)) \r\n        + 0.000044 * Math.cos(deg2rad * (257.3208 - 191590.5367 * t - 637.623 * t2e4 \r\n        - 75.093 * t3e6 + 35.477 * t4e8)) \r\n        + 0.000042 * Math.cos(deg2rad * (105.6788 + 341337.2548 * t - 119.499 * t2e4 \r\n        - 10.765 * t3e6 + 5.028 * t4e8)) \r\n        + 0.000042 * Math.cos(deg2rad * (160.4159 + 4067.2942 * t - 107.806 * t2e4 \r\n        - 12.475 * t3e6 + 5.913 * t4e8)) \r\n        + 0.000040 * Math.cos(deg2rad * (246.3642 + 2258267.3137 * t + 24.769 * t2e4 \r\n        + 21.675 * t3e6 - 10.335 * t4e8)) \r\n        - 0.000040 * Math.cos(deg2rad * (156.5838 - 604925.8921 * t - 515.053 * t2e4 \r\n        - 64.410 * t3e6 + 30.448 * t4e8)) \r\n        + 0.000036 * Math.cos(deg2rad * (169.7185 + 726808.1483 * t - 456.147 * t2e4 \r\n        - 46.439 * t3e6 + 21.882 * t4e8)) \r\n        + 0.000029 * Math.cos(deg2rad * (113.8717 + 1745069.3958 * t - 63.665 * t2e4 \r\n        + 7.287 * t3e6 - 3.538 * t4e8)) \r\n        - 0.000029 * Math.cos(deg2rad * (297.8502 + 445267.1115 * t - 16.300 * t2e4 \r\n        + 1.832 * t3e6 - 0.884 * t4e8)) \r\n        - 0.000028 * Math.cos(deg2rad * (294.0181 - 163726.0747 * t - 423.546 * t2e4 \r\n        - 50.103 * t3e6 + 23.651 * t4e8)) \r\n        + 0.000027 * Math.cos(deg2rad * (263.6238 + 381403.5993 * t - 228.841 * t2e4 \r\n        - 23.199 * t3e6 + 10.941 * t4e8)) \r\n        - 0.000026 * Math.cos(deg2rad * (358.0578 + 221744.8187 * t - 760.194 * t2e4 \r\n        - 85.777 * t3e6 + 40.505 * t4e8)) \r\n        - 0.000026 * Math.cos(deg2rad * (8.1929 + 1403732.1410 * t + 55.834 * t2e4 \r\n        + 18.052 * t3e6 - 8.566 * t4e8));\r\n\r\n    var sedp = -0.0022 * Math.cos(deg2rad * (103.2 + 377336.3 * t));\r\n\r\n    var ecc = 0.055544 + se + 1e-3 * t * sedp;\r\n\r\n    // sine of half the inclination\r\n\r\n    var sg = 0.0011776 * Math.cos(deg2rad * (49.1562 - 75869.8120 * t + 35.458 * t2e4 \r\n        + 4.231 * t3e6 - 2.001 * t4e8)) \r\n        - 0.0000971 * Math.cos(deg2rad * (235.7004 + 890534.2230 * t - 32.601 * t2e4 \r\n        + 3.664 * t3e6 - 1.769 * t4e8)) \r\n        + 0.0000908 * Math.cos(deg2rad * (186.5442 + 966404.0351 * t - 68.058 * t2e4 \r\n        - 0.567 * t3e6 + 0.232 * t4e8)) \r\n        + 0.0000623 * Math.cos(deg2rad * (83.3826 - 12006.2998 * t + 247.999 * t2e4 \r\n        + 29.262 * t3e6 - 13.826 * t4e8)) \r\n        + 0.0000483 * Math.cos(deg2rad * (51.6271 - 111868.8623 * t + 36.994 * t2e4 \r\n        + 4.190 * t3e6 - 2.001 * t4e8)) \r\n        + 0.0000348 * Math.cos(deg2rad * (100.7370 + 413335.3554 * t - 122.571 * t2e4 \r\n        - 10.684 * t3e6 + 5.028 * t4e8)) \r\n        - 0.0000316 * Math.cos(deg2rad * (308.4192 - 489205.1674 * t + 158.029 * t2e4 \r\n        + 14.915 * t3e6 - 7.029 * t4e8)) \r\n        - 0.0000253 * Math.cos(deg2rad * (46.6853 - 39870.7617 * t + 33.922 * t2e4 \r\n        + 4.272 * t3e6 - 2.001 * t4e8)) \r\n        - 0.0000141 * Math.cos(deg2rad * (274.1928 - 553068.6797 * t - 54.513 * t2e4 \r\n        - 10.116 * t3e6 + 4.797 * t4e8)) \r\n        + 0.0000127 * Math.cos(deg2rad * (325.7736 - 63863.5122 * t - 212.541 * t2e4 \r\n        - 25.031 * t3e6 + 11.826 * t4e8)) \r\n        + 0.0000117 * Math.cos(deg2rad * (184.1196 + 401329.0556 * t + 125.428 * t2e4 \r\n        + 18.579 * t3e6 - 8.798 * t4e8)) \r\n        - 0.0000078 * Math.cos(deg2rad * (98.3124 - 151739.6240 * t + 70.916 * t2e4 \r\n        + 8.462 * t3e6 - 4.001 * t4e8)) \r\n        - 0.0000063 * Math.cos(deg2rad * (238.1713 + 854535.1727 * t - 31.065 * t2e4 \r\n        + 3.623 * t3e6 - 1.769 * t4e8)) \r\n        + 0.0000063 * Math.cos(deg2rad * (134.9634 + 477198.8676 * t + 89.970 * t2e4 \r\n        + 14.348 * t3e6 - 6.797 * t4e8)) \r\n        + 0.0000036 * Math.cos(deg2rad * (321.5076 + 1443602.9027 * t + 21.912 * t2e4 \r\n        + 13.780 * t3e6 - 6.566 * t4e8)) \r\n        - 0.0000035 * Math.cos(deg2rad * (10.6638 + 1367733.0907 * t + 57.370 * t2e4 \r\n        + 18.011 * t3e6 - 8.566 * t4e8)) \r\n        + 0.0000024 * Math.cos(deg2rad * (149.8932 + 337465.5434 * t - 87.113 * t2e4 \r\n        - 6.453 * t3e6 + 3.028 * t4e8)) \r\n        + 0.0000024 * Math.cos(deg2rad * (170.9849 - 930404.9848 * t + 66.523 * t2e4 \r\n        + 0.608 * t3e6 - 0.232 * t4e8));\r\n\r\n    var sgp = - 0.0203 * Math.cos(deg2rad * (125.0 - 1934.1 * t)) \r\n        + 0.0034 * Math.cos(deg2rad * (220.2 - 1935.5 * t));\r\n\r\n    var gamma = 0.0449858 + sg + 1e-3 * sgp;\r\n\r\n    // longitude of perigee\r\n\r\n    var sp = - 15.448 * Math.sin(deg2rad * (100.7370 + 413335.3554 * t - 122.571 * t2e4 \r\n        - 10.684 * t3e6 + 5.028 * t4e8))\r\n        - 9.642 * Math.sin(deg2rad * (325.7736 - 63863.5122 * t - 212.541 * t2e4 \r\n        - 25.031 * t3e6 + 11.826 * t4e8)) \r\n        - 2.721 * Math.sin(deg2rad * (134.9634 + 477198.8676 * t + 89.970 * t2e4 \r\n        + 14.348 * t3e6 - 6.797 * t4e8)) \r\n        + 2.607 * Math.sin(deg2rad * (66.5106 + 349471.8432 * t - 335.112 * t2e4 \r\n        - 35.715 * t3e6 + 16.854 * t4e8)) \r\n        + 2.085 * Math.sin(deg2rad * (201.4740 + 826670.7108 * t - 245.142 * t2e4 \r\n        - 21.367 * t3e6 + 10.057 * t4e8)) \r\n        + 1.477 * Math.sin(deg2rad * (10.6638 + 1367733.0907 * t + 57.370 * t2e4 \r\n        + 18.011 * t3e6 - 8.566 * t4e8)) \r\n        + 0.968 * Math.sin(deg2rad * (291.5472 - 127727.0245 * t - 425.082 * t2e4 \r\n        - 50.062 * t3e6 + 23.651 * t4e8)) \r\n        - 0.949 * Math.sin(deg2rad * (103.2079 + 377336.3051 * t - 121.035 * t2e4 \r\n        - 10.724 * t3e6 + 5.028 * t4e8)) \r\n        - 0.703 * Math.sin(deg2rad * (167.2476 + 762807.1986 * t - 457.683 * t2e4 \r\n        - 46.398 * t3e6 + 21.882 * t4e8)) \r\n        - 0.660 * Math.sin(deg2rad * (235.7004 + 890534.2230 * t - 32.601 * t2e4 \r\n        + 3.664 * t3e6 - 1.769 * t4e8)) \r\n        - 0.577 * Math.sin(deg2rad * (190.8102 - 541062.3799 * t - 302.511 * t2e4 \r\n        - 39.379 * t3e6 + 18.623 * t4e8)) \r\n        - 0.524 * Math.sin(deg2rad * (269.9268 + 954397.7353 * t + 179.941 * t2e4 \r\n        + 28.695 * t3e6 - 13.594 * t4e8)) \r\n        - 0.482 * Math.sin(deg2rad * (32.2842 + 285608.3309 * t - 547.653 * t2e4 \r\n        - 60.746 * t3e6 + 28.679 * t4e8)) \r\n        + 0.452 * Math.sin(deg2rad * (357.5291 + 35999.0503 * t - 1.536 * t2e4 \r\n        + 0.041 * t3e6 + 0.000 * t4e8)) \r\n        - 0.381 * Math.sin(deg2rad * (302.2110 + 1240006.0662 * t - 367.713 * t2e4 \r\n        - 32.051 * t3e6 + 15.085 * t4e8)) \r\n        - 0.342 * Math.sin(deg2rad * (328.2445 - 99862.5625 * t - 211.005 * t2e4 \r\n        - 25.072 * t3e6 + 11.826 * t4e8)) \r\n        - 0.312 * Math.sin(deg2rad * (44.8902 + 1431596.6029 * t + 269.911 * t2e4 \r\n        + 43.043 * t3e6 - 20.392 * t4e8)) \r\n        + 0.282 * Math.sin(deg2rad * (162.8868 - 31931.7561 * t - 106.271 * t2e4 \r\n        - 12.516 * t3e6 + 5.913 * t4e8)) \r\n        + 0.255 * Math.sin(deg2rad * (203.9449 + 790671.6605 * t - 243.606 * t2e4 \r\n        - 21.408 * t3e6 + 10.057 * t4e8)) \r\n        + 0.252 * Math.sin(deg2rad * (68.9815 + 313472.7929 * t - 333.576 * t2e4 \r\n        - 35.756 * t3e6 + 16.854 * t4e8)) \r\n        - 0.211 * Math.sin(deg2rad * (83.3826 - 12006.2998 * t + 247.999 * t2e4 \r\n        + 29.262 * t3e6 - 13.826 * t4e8)) \r\n        + 0.193 * Math.sin(deg2rad * (267.9846 + 1176142.5540 * t - 580.254 * t2e4 \r\n        - 57.082 * t3e6 + 26.911 * t4e8)) \r\n        + 0.191 * Math.sin(deg2rad * (133.0212 + 698943.6863 * t - 670.224 * t2e4 \r\n        - 71.429 * t3e6 + 33.708 * t4e8)) \r\n        - 0.184 * Math.sin(deg2rad * (55.8468 - 1018261.2475 * t - 392.482 * t2e4 \r\n        - 53.726 * t3e6 + 25.420 * t4e8)) \r\n        + 0.182 * Math.sin(deg2rad * (145.6272 + 1844931.9583 * t + 147.340 * t2e4 \r\n        + 32.359 * t3e6 - 15.363 * t4e8)) \r\n        - 0.158 * Math.sin(deg2rad * (257.3208 - 191590.5367 * t - 637.623 * t2e4 \r\n        - 75.093 * t3e6 + 35.477 * t4e8)) \r\n        + 0.148 * Math.sin(deg2rad * (156.5838 - 604925.8921 * t - 515.053 * t2e4 \r\n        - 64.410 * t3e6 + 30.448 * t4e8)) \r\n        - 0.111 * Math.sin(deg2rad * (169.7185 + 726808.1483 * t - 456.147 * t2e4 \r\n        - 46.439 * t3e6 + 21.882 * t4e8)) \r\n        + 0.101 * Math.sin(deg2rad * (13.1347 + 1331734.0404 * t + 58.906 * t2e4 \r\n        + 17.971 * t3e6 - 8.566 * t4e8)) \r\n        + 0.100 * Math.sin(deg2rad * (358.0578 + 221744.8187 * t - 760.194 * t2e4 \r\n        - 85.777 * t3e6 + 40.505 * t4e8)) \r\n        + 0.087 * Math.sin(deg2rad * (98.2661 + 449334.4057 * t - 124.107 * t2e4 \r\n        - 10.643 * t3e6 + 5.028 * t4e8)) \r\n        + 0.080 * Math.sin(deg2rad * (42.9480 + 1653341.4216 * t - 490.283 * t2e4 \r\n        - 42.734 * t3e6 + 20.113 * t4e8)) \r\n        + 0.080 * Math.sin(deg2rad * (222.5657 - 441199.8173 * t - 91.506 * t2e4 \r\n        - 14.307 * t3e6 + 6.797 * t4e8)) \r\n        + 0.077 * Math.sin(deg2rad * (294.0181 - 163726.0747 * t - 423.546 * t2e4 \r\n        - 50.103 * t3e6 + 23.651 * t4e8)) \r\n        - 0.073 * Math.sin(deg2rad * (280.8834 - 1495460.1151 * t - 482.452 * t2e4 \r\n        - 68.074 * t3e6 + 32.217 * t4e8)) \r\n        - 0.071 * Math.sin(deg2rad * (304.6819 + 1204007.0159 * t - 366.177 * t2e4 \r\n        - 32.092 * t3e6 + 15.085 * t4e8)) \r\n        - 0.069 * Math.sin(deg2rad * (233.7582 + 1112279.0417 * t - 792.795 * t2e4 \r\n        - 82.113 * t3e6 + 38.736 * t4e8)) \r\n        - 0.067 * Math.sin(deg2rad * (34.7551 + 249609.2807 * t - 546.117 * t2e4 \r\n        - 60.787 * t3e6 + 28.679 * t4e8)) \r\n        - 0.067 * Math.sin(deg2rad * (263.6238 + 381403.5993 * t - 228.841 * t2e4 \r\n        - 23.199 * t3e6 + 10.941 * t4e8)) \r\n        + 0.055 * Math.sin(deg2rad * (21.6203 - 1082124.7597 * t - 605.023 * t2e4 \r\n        - 78.757 * t3e6 + 37.246 * t4e8)) \r\n        + 0.055 * Math.sin(deg2rad * (308.4192 - 489205.1674 * t + 158.029 * t2e4 \r\n        + 14.915 * t3e6 -7.029 * t4e8)) \r\n        - 0.054 * Math.sin(deg2rad * (8.7216 + 1589477.9094 * t - 702.824 * t2e4 \r\n        - 67.766 * t3e6 + 31.939 * t4e8)) \r\n        - 0.052 * Math.sin(deg2rad * (179.8536 + 1908795.4705 * t + 359.881 * t2e4 \r\n        + 57.390 * t3e6 - 27.189 * t4e8)) \r\n        - 0.050 * Math.sin(deg2rad * (98.7948 + 635080.1741 * t - 882.765 * t2e4 \r\n        - 96.461 * t3e6 + 45.533 * t4e8)) \r\n        - 0.049 * Math.sin(deg2rad * (128.6604 - 95795.2683 * t - 318.812 * t2e4 \r\n        - 37.547 * t3e6 + 17.738 * t4e8)) \r\n        - 0.047 * Math.sin(deg2rad * (17.3544 + 425341.6552 * t - 370.570 * t2e4 \r\n        - 39.946 * t3e6 + 18.854 * t4e8)) \r\n        - 0.044 * Math.sin(deg2rad * (160.4159 + 4067.2942 * t - 107.806 * t2e4 \r\n        - 12.475 * t3e6 + 5.913 * t4e8)) \r\n        - 0.043 * Math.sin(deg2rad * (238.1713 + 854535.1727 * t - 31.065 * t2e4 \r\n        + 3.623 * t3e6 - 1.769 * t4e8)) \r\n        + 0.042 * Math.sin(deg2rad * (270.4555 + 1140143.5037 * t - 578.718 * t2e4 \r\n        - 57.123 * t3e6 + 26.911 * t4e8)) \r\n        - 0.042 * Math.sin(deg2rad * (132.4925 + 513197.9179 * t + 88.434 * t2e4 \r\n        + 14.388 * t3e6 - 6.797 * t4e8)) \r\n        - 0.041 * Math.sin(deg2rad * (122.3573 - 668789.4043 * t - 727.594 * t2e4 \r\n        - 89.441 * t3e6 + 42.274 * t4e8)) \r\n        - 0.040 * Math.sin(deg2rad * (105.6788 + 341337.2548 * t - 119.499 * t2e4 \r\n        - 10.765 * t3e6 + 5.028 * t4e8)) \r\n        + 0.038 * Math.sin(deg2rad * (135.4921 + 662944.6361 * t - 668.688 * t2e4 \r\n        - 71.470 * t3e6 + 33.708 * t4e8)) \r\n        - 0.037 * Math.sin(deg2rad * (242.3910 - 51857.2124 * t - 460.540 * t2e4 \r\n        - 54.293 * t3e6 + 25.652 * t4e8)) \r\n        + 0.036 * Math.sin(deg2rad * (336.4374 +  1303869.5784 * t - 155.171 * t2e4 \r\n        - 7.020 * t3e6 + 3.259 * t4e8)) \r\n        + 0.035 * Math.sin(deg2rad * (223.0943 - 255454.0489 * t - 850.164 * t2e4 \r\n        - 100.124 * t3e6 + 47.302 * t4e8)) \r\n        - 0.034 * Math.sin(deg2rad * (193.2811 - 577061.4302 * t - 300.976 * t2e4 \r\n        - 39.419 * t3e6 + 18.623 * t4e8)) \r\n        + 0.031 * Math.sin(deg2rad * (87.6023 - 918398.6850 * t - 181.476 * t2e4 \r\n        - 28.654 * t3e6 + 13.594 * t4e8));\r\n\r\n    var spp = 2.4 * Math.sin(deg2rad * (103.2 + 377336.3 * t));\r\n\r\n    var lp = 83.353 + 4069.0137 * t - 103.238 * t2e4 \r\n        - 12.492 * t3e6 + 5.263 * t4e8 + sp + 1e-3 * t * spp;\r\n\r\n    // longitude of the ascending node\r\n\r\n    var sr = - 1.4979 * Math.sin(deg2rad * (49.1562 - 75869.8120 * t + 35.458 * t2e4 \r\n        + 4.231 * t3e6 - 2.001 * t4e8)) \r\n        - 0.1500 * Math.sin(deg2rad * (357.5291 + 35999.0503 * t - 1.536 * t2e4 \r\n        + 0.041 * t3e6 + 0.000 * t4e8)) \r\n        - 0.1226 * Math.sin(deg2rad * (235.7004 + 890534.2230 * t - 32.601 * t2e4 \r\n        + 3.664 * t3e6 - 1.769 * t4e8)) \r\n        + 0.1176 * Math.sin(deg2rad * (186.5442 + 966404.0351 * t - 68.058 * t2e4 \r\n        - 0.567 * t3e6 + 0.232 * t4e8)) \r\n        - 0.0801 * Math.sin(deg2rad * (83.3826 - 12006.2998 * t + 247.999 * t2e4 \r\n        + 29.262 * t3e6 - 13.826 * t4e8)) \r\n        - 0.0616 * Math.sin(deg2rad * (51.6271 - 111868.8623 * t + 36.994 * t2e4 \r\n        + 4.190 * t3e6 - 2.001 * t4e8)) \r\n        + 0.0490 * Math.sin(deg2rad * (100.7370 + 413335.3554 * t - 122.571 * t2e4 \r\n        - 10.684 * t3e6 + 5.028 * t4e8)) \r\n        + 0.0409 * Math.sin(deg2rad * (308.4192 - 489205.1674 * t + 158.029 * t2e4 \r\n        + 14.915 * t3e6 - 7.029 * t4e8)) \r\n        + 0.0327 * Math.sin(deg2rad * (134.9634 + 477198.8676 * t + 89.970 * t2e4 \r\n        + 14.348 * t3e6 - 6.797 * t4e8)) \r\n        + 0.0324 * Math.sin(deg2rad * (46.6853 - 39870.7617 * t + 33.922 * t2e4 \r\n        + 4.272 * t3e6 - 2.001 * t4e8)) \r\n        + 0.0196 * Math.sin(deg2rad * (98.3124 - 151739.6240 * t + 70.916 * t2e4 \r\n        + 8.462 * t3e6 - 4.001 * t4e8)) \r\n        + 0.0180 * Math.sin(deg2rad * (274.1928 - 553068.6797 * t - 54.513 * t2e4 \r\n        - 10.116 * t3e6 + 4.797 * t4e8)) \r\n        + 0.0150 * Math.sin(deg2rad * (325.7736 - 63863.5122 * t - 212.541 * t2e4 \r\n        - 25.031 * t3e6 + 11.826 * t4e8)) \r\n        - 0.0150 * Math.sin(deg2rad * (184.1196 + 401329.0556 * t + 125.428 * t2e4 \r\n        + 18.579 * t3e6 - 8.798 * t4e8)) \r\n        - 0.0078 * Math.sin(deg2rad * (238.1713 + 854535.1727 * t - 31.065 * t2e4 \r\n        + 3.623 * t3e6 - 1.769 * t4e8)) \r\n        - 0.0045 * Math.sin(deg2rad * (10.6638 + 1367733.0907 * t + 57.370 * t2e4 \r\n        + 18.011 * t3e6 - 8.566 * t4e8)) \r\n        + 0.0044 * Math.sin(deg2rad * (321.5076 + 1443602.9027 * t + 21.912 * t2e4 \r\n        + 13.780 * t3e6 - 6.566 * t4e8)) \r\n        - 0.0042 * Math.sin(deg2rad * (162.8868 - 31931.7561 * t - 106.271 * t2e4 \r\n        - 12.516 * t3e6 + 5.913 * t4e8)) \r\n        - 0.0031 * Math.sin(deg2rad * (170.9849 - 930404.9848 * t + 66.523 * t2e4 \r\n        + 0.608 * t3e6 - 0.232 * t4e8)) \r\n        + 0.0031 * Math.sin(deg2rad * (103.2079 + 377336.3051 * t - 121.035 * t2e4 \r\n        - 10.724 * t3e6 + 5.028 * t4e8)) \r\n        + 0.0029 * Math.sin(deg2rad * (222.6120 - 1042273.8471 * t + 103.516 * t2e4 \r\n        + 4.798 * t3e6 - 2.232 * t4e8)) \r\n        + 0.0028 * Math.sin(deg2rad * (184.0733 + 1002403.0853 * t - 69.594 * t2e4 \r\n        - 0.526 * t3e6 + 0.232 * t4e8));\r\n\r\n    var srp = 25.9 * Math.sin(deg2rad * (125.0 - 1934.1 * t)) \r\n        - 4.3 * Math.sin(deg2rad * (220.2 - 1935.5 * t));\r\n\r\n    var srpp = 0.38 * Math.sin(deg2rad * (357.5 + 35999.1 * t));\r\n\r\n    var raan = 125.0446 - 1934.13618 * t + 20.762 * t2e4 \r\n        + 2.139 * t3e6 - 1.650 * t4e8 + sr \r\n        + 1e-3 * (srp + srpp * t);\r\n\r\n    // mean longitude\r\n\r\n    var sl = - 0.92581 * Math.sin(deg2rad * (235.7004 + 890534.2230 * t - 32.601 * t2e4 \r\n        + 3.664 * t3e6 - 1.769 * t4e8)) \r\n        + 0.33262 * Math.sin(deg2rad * (100.7370 + 413335.3554 * t - 122.571 * t2e4 \r\n        - 10.684 * t3e6 + 5.028 * t4e8)) \r\n        - 0.18402 * Math.sin(deg2rad * (357.5291 + 35999.0503 * t - 1.536 * t2e4 \r\n        + 0.041 * t3e6 + 0.000 * t4e8)) \r\n        + 0.11007 * Math.sin(deg2rad * (134.9634 + 477198.8676 * t + 89.970 * t2e4 \r\n        + 14.348 * t3e6 - 6.797 * t4e8)) \r\n        - 0.06055 * Math.sin(deg2rad * (238.1713 + 854535.1727 * t - 31.065 * t2e4 \r\n        + 3.623 * t3e6 - 1.769 * t4e8)) \r\n        + 0.04741 * Math.sin(deg2rad * (325.7736 - 63863.5122 * t - 212.541 * t2e4 \r\n        - 25.031 * t3e6 + 11.826 * t4e8)) \r\n        - 0.03086 * Math.sin(deg2rad * (10.6638 + 1367733.0907 * t + 57.370 * t2e4 \r\n        + 18.011 * t3e6 - 8.566 * t4e8)) \r\n        + 0.02184 * Math.sin(deg2rad * (103.2079 + 377336.3051 * t - 121.035 * t2e4 \r\n        - 10.724 * t3e6 + 5.028 * t4e8)) \r\n        + 0.01645 * Math.sin(deg2rad * (49.1562 - 75869.8120 * t + 35.458 * t2e4 \r\n        + 4.231 * t3e6 - 2.001 * t4e8)) \r\n        + 0.01022 * Math.sin(deg2rad * (233.2295 + 926533.2733 * t - 34.136 * t2e4 \r\n        + 3.705 * t3e6 - 1.769 * t4e8)) \r\n        - 0.00756 * Math.sin(deg2rad * (336.4374 + 1303869.5784 * t - 155.171 * t2e4 \r\n        - 7.020 * t3e6 + 3.259 * t4e8)) \r\n        - 0.00530 * Math.sin(deg2rad * (222.5657 - 441199.8173 * t - 91.506 * t2e4 \r\n        - 14.307 * t3e6 + 6.797 * t4e8)) \r\n        - 0.00496 * Math.sin(deg2rad * (162.8868 - 31931.7561 * t - 106.271 * t2e4 \r\n        - 12.516 * t3e6 + 5.913 * t4e8)) \r\n        - 0.00472 * Math.sin(deg2rad * (297.8502 + 445267.1115 * t - 16.300 * t2e4 \r\n        + 1.832 * t3e6 - 0.884 * t4e8)) \r\n        - 0.00271 * Math.sin(deg2rad * (240.6422 + 818536.1225 * t - 29.529 * t2e4 \r\n        + 3.582 * t3e6 - 1.769 * t4e8)) \r\n        + 0.00264 * Math.sin(deg2rad * (132.4925 + 513197.9179 * t + 88.434 * t2e4 \r\n        + 14.388 * t3e6 - 6.797 * t4e8)) \r\n        - 0.00254 * Math.sin(deg2rad * (186.5442 + 966404.0351 * t - 68.058 * t2e4 \r\n        - 0.567 * t3e6 + 0.232 * t4e8)) \r\n        + 0.00234 * Math.sin(deg2rad * (269.9268 + 954397.7353 * t + 179.941 * t2e4 \r\n        + 28.695 * t3e6 - 13.594 * t4e8)) \r\n        - 0.00220 * Math.sin(deg2rad * (13.1347 + 1331734.0404 * t + 58.906 * t2e4 \r\n        + 17.971 * t3e6 - 8.566 * t4e8)) \r\n        - 0.00202 * Math.sin(deg2rad * (355.0582 + 71998.1006 * t - 3.072 * t2e4 \r\n        + 0.082 * t3e6 + 0.000 * t4e8)) \r\n        + 0.00167 * Math.sin(deg2rad * (328.2445 - 99862.5625 * t - 211.005 * t2e4 \r\n        - 25.072 * t3e6 + 11.826 * t4e8)) \r\n        - 0.00143 * Math.sin(deg2rad * (173.5506 + 1335801.3346 * t - 48.901 * t2e4 \r\n        + 5.496 * t3e6 - 2.653 * t4e8)) \r\n        - 0.00121 * Math.sin(deg2rad * (98.2661 + 449334.4057 * t - 124.107 * t2e4 \r\n        - 10.643 * t3e6 + 5.028 * t4e8)) \r\n        - 0.00116 * Math.sin(deg2rad * (145.6272 + 1844931.9583 * t + 147.340 * t2e4 \r\n        + 32.359 * t3e6 - 15.363 * t4e8)) \r\n        + 0.00102 * Math.sin(deg2rad * (105.6788 + 341337.2548 * t - 119.499 * t2e4 \r\n        - 10.765 * t3e6 + 5.028 * t4e8)) \r\n        - 0.00090 * Math.sin(deg2rad * (184.1196 + 401329.0556 * t + 125.428 * t2e4 \r\n        + 18.579 * t3e6 - 8.798 * t4e8)) \r\n        - 0.00086 * Math.sin(deg2rad * (338.9083 + 1267870.5281 * t - 153.636 * t2e4 \r\n        - 7.061 * t3e6 + 3.259 * t4e8)) \r\n        - 0.00078 * Math.sin(deg2rad * (111.4008 + 1781068.4461 * t - 65.201 * t2e4 \r\n        + 7.328 * t3e6 - 3.538 * t4e8)) \r\n        + 0.00069 * Math.sin(deg2rad * (323.3027 - 27864.4619 * t - 214.077 * t2e4 \r\n        - 24.990 * t3e6 + 11.826 * t4e8)) \r\n        + 0.00066 * Math.sin(deg2rad * (51.6271 - 111868.8623 * t + 36.994 * t2e4 \r\n        + 4.190 * t3e6 - 2.001 * t4e8)) \r\n        + 0.00065 * Math.sin(deg2rad * (38.5872 + 858602.4669 * t - 138.871 * t2e4 \r\n        - 8.852 * t3e6 + 4.144 * t4e8)) \r\n        - 0.00060 * Math.sin(deg2rad * (83.3826 - 12006.2998 * t + 247.999 * t2e4 \r\n        + 29.262 * t3e6 - 13.826 * t4e8)) \r\n        + 0.00054 * Math.sin(deg2rad * (201.4740 + 826670.7108 * t - 245.142 * t2e4 \r\n        - 21.367 * t3e6 + 10.057 * t4e8)) \r\n        - 0.00052 * Math.sin(deg2rad * (308.4192 - 489205.1674 * t + 158.029 * t2e4 \r\n        + 14.915 * t3e6 - 7.029 * t4e8)) \r\n        + 0.00048 * Math.sin(deg2rad * (8.1929 + 1403732.1410 * t + 55.834 * t2e4 \r\n        + 18.052 * t3e6 - 8.566 * t4e8)) \r\n        - 0.00041 * Math.sin(deg2rad * (46.6853 - 39870.7617 * t + 33.922 * t2e4 \r\n        + 4.272 * t3e6 - 2.001 * t4e8)) \r\n        - 0.00033 * Math.sin(deg2rad * (274.1928 - 553068.6797 * t - 54.513 * t2e4 \r\n        - 10.116 * t3e6 + 4.797 * t4e8)) \r\n        + 0.00030 * Math.sin(deg2rad * (160.4159 + 4067.2942 * t - 107.806 * t2e4 \r\n        - 12.475 * t3e6 + 5.913 * t4e8));\r\n\r\n    var slp = 3.96 * Math.sin(deg2rad * (119.7 + 131.8 * t)) \r\n        + 1.96 * Math.sin(deg2rad * (125.0 - 1934.1 * t));\r\n\r\n    var slpp = 0.463 * Math.sin(deg2rad * (357.5 + 35999.1 * t)) \r\n        + 0.152 * Math.sin(deg2rad * (238.2 + 854535.2 * t)) \r\n        - 0.071 * Math.sin(deg2rad * (27.8 + 131.8 * t)) \r\n        - 0.055 * Math.sin(deg2rad * (103.2 + 377336.3 * t)) \r\n        - 0.026 * Math.sin(deg2rad * (233.2 + 926533.3 * t));\r\n\r\n    var slppp = 14 * Math.sin(deg2rad * (357.5 + 35999.1 * t)) \r\n        + 5 * Math.sin(deg2rad * (238.2 + 854535.2 * t));\r\n\r\n    var lambda = 218.31665 + 481267.88134 * t - 13.268 * t2e4 \r\n        + 1.856 * t3e6 - 1.534 * t4e8 + sl \r\n        + 1e-3 * (slp + slpp * t + slppp * t2e4);\r\n\r\n     dat.a = sma;\r\n     dat.e = ecc;\r\n     dat.i = 2.0 * Math.asin(gamma);\r\n     dat.w = Trig.normalize(deg2rad * (lp - raan));\r\n     dat.N = Trig.normalize(deg2rad * raan);\r\n     dat.M = Trig.normalize(deg2rad * (lambda - lp));\r\n     return dat;\r\n  },\r\n  corr: function(dat, sol) {\r\n    var M = Trig.normalize(sol.M + Math.PI),\r\n        w = Trig.normalize(sol.w + Math.PI),\r\n        L = dat.M + dat.w,     // Argument of latitude \r\n        E = L + dat.N - M - w; // Mean elongation\r\n    \r\n    var lon = \r\n      -0.022234 * Math.sin(dat.M - 2*E) +  // Evection\r\n       0.011494 * Math.sin(2*E) +          // Variation\r\n      -0.003246 * Math.sin(M) +        // Yearly Equation\r\n      -0.001029 * Math.sin(2*dat.M - 2*E) +\r\n      -9.94838e-4 * Math.sin(dat.M - 2*E + M) +\r\n       9.25025e-4 * Math.sin(dat.M + 2*E) +\r\n       8.02851e-4 * Math.sin(2*E - M) +\r\n       7.15585e-4 * Math.sin(dat.M - M) +\r\n      -6.10865e-4 * Math.sin(E) + \r\n      -5.41052e-4 * Math.sin(dat.M + M) +\r\n      -2.61799e-4 * Math.sin(2*L - 2*E) +\r\n       1.91986e-4 * Math.sin(dat.M - 4*E);\r\n    dat.ra += lon;\r\n    var lat =\r\n      -0.003019 * Math.sin(L - 2*E) +\r\n      -9.59931e-4 * Math.sin(dat.M - L - 2*E) +\r\n      -8.02851e-4 * Math.sin(dat.M + L - 2*E) +\r\n       5.75958e-4 * Math.sin(L + 2*E) +\r\n       2.96706e-4 * Math.sin(2*dat.M + L);  \r\n    dat.dec += lat;\r\n  \r\n    dat.age = Trig.normalize(dat.l - sol.l + Math.PI);   \r\n    dat.phase = 0.5 * (1 - Math.cos(dat.age));\r\n\r\n    return dat;\r\n  }\r\n\r\n};\r\nfunction exportSVG(fname) {\r\n  var doc = d3.select(\"body\").append(\"div\").attr(\"id\", \"d3-celestial-svg\").attr(\"style\", \"display: none\"),\r\n      svg = d3.select(\"#d3-celestial-svg\").append(\"svg\"), //.attr(\"style\", \"display: none\"),\r\n      m = Celestial.metrics(),\r\n      cfg = settings.set(),\r\n      path = cfg.datapath,\r\n      proj = projections[cfg.projection],\r\n      rotation = getAngles(cfg.center),\r\n      center = [-rotation[0], -rotation[1]],\r\n      scale0 = proj.scale * m.width/1024,\r\n      projection = Celestial.projection(cfg.projection).rotate(rotation).translate([m.width/2, m.height/2]).scale([m.scale]),\r\n      adapt = cfg.adaptable ? Math.sqrt(m.scale/scale0) : 1,\r\n      culture = (cfg.culture !== \"\" && cfg.culture !== \"iau\") ? cfg.culture : \"\",\r\n      circle, id;\r\n\r\n  svg.selectAll(\"*\").remove();\r\n\r\n  var defs = svg.append(\"defs\");\r\n\r\n  if (proj.clip) {\r\n    projection.clipAngle(90);\r\n  }\r\n  circle = d3.geo.circle().angle([179.95]).origin(center);\r\n\r\n  svg.attr(\"width\", m.width).attr(\"height\", m.height);\r\n  // .attr(\"viewBox\", \" 0 0 \" + (m.width) + \" \" + (m.height));\r\n\r\n  var groupNames = ['background', 'milkyWay', 'milkyWayBg', 'gridLines', 'constBoundaries', \r\n                    'planesequatorial', 'planesecliptic', 'planesgalactic', 'planessupergalactic',\r\n                    'constLines', 'mapBorder','stars', 'dsos', 'planets', 'gridvaluesLon', 'gridvaluesLat', \r\n                    'constNames', 'starDesignations', 'starNames', 'dsoNames', 'planetNames', 'horizon', 'daylight'],\r\n                groups = {}, styles = {};\r\n\r\n  for (var i=0; i<groupNames.length; i++) {\r\n     // inkscape:groupmode=\"layer\", inkscape:label=\"Ebene 1\" \r\n    groups[groupNames[i]] = svg.append('g').attr({\"id\": groupNames[i], \":inkscape:groupmode\": \"layer\", \":inkscape:label\": groupNames[i]});\r\n    styles[groupNames[i]] = {};\r\n  }\r\n\r\n  var graticule = d3.geo.graticule().minorStep([15,10]);\r\n  \r\n  var map = d3.geo.path().projection(projection);\r\n\r\n  var q = d3.queue(2);\r\n  \r\n  groups.background.append(\"path\").datum(circle).attr(\"class\", \"background\").attr(\"d\", map); \r\n  styles.background.fill = cfg.background.fill;\r\n\r\n  if (cfg.lines.graticule.show) {\r\n    if (cfg.transform === \"equatorial\") {\r\n      groups.gridLines.append(\"path\").datum(graticule)\r\n       .attr(\"class\", \"gridLines\")\r\n       .attr(\"d\", map);\r\n      styles.gridLines = svgStyle(cfg.lines.graticule);\r\n    } else {\r\n      Celestial.graticule(groups.gridLines, map, cfg.transform);\r\n      styles.gridLines = svgStyle(cfg.lines.graticule);\r\n    }\r\n    if (has(cfg.lines.graticule, \"lon\") && cfg.lines.graticule.lon.pos.length > 0) {\r\n      var jlon = {type: \"FeatureCollection\", features: getGridValues(\"lon\", cfg.lines.graticule.lon.pos)};      \r\n      groups.gridvaluesLon.selectAll(\".gridvalues_lon\")\r\n        .data(jlon.features)\r\n        .enter().append(\"text\")\r\n        .attr(\"transform\", function(d, i) { return point(d.geometry.coordinates); })\r\n        .text( function(d) { return d.properties.value; } )\r\n        .attr({dy: \".5em\", dx: \"-.75em\", class: \"gridvaluesLon\"});\r\n      styles.gridvaluesLon = svgTextStyle(cfg.lines.graticule.lon); \r\n    }\r\n    if (has(cfg.lines.graticule, \"lat\") && cfg.lines.graticule.lat.pos.length > 0) {\r\n      var jlat = {type: \"FeatureCollection\", features: getGridValues(\"lat\", cfg.lines.graticule.lat.pos)};\r\n      groups.gridvaluesLat.selectAll(\".gridvalues_lat\")\r\n        .data(jlat.features)\r\n        .enter().append(\"text\")\r\n        .attr(\"transform\", function(d, i) { return point(d.geometry.coordinates); })\r\n        .text( function(d) { return d.properties.value; } )\r\n        .attr({dy: \"-.5em\", dx: \"-.75em\", class: \"gridvaluesLat\"});\r\n       styles.gridvaluesLat = svgTextStyle(cfg.lines.graticule.lat); \r\n    }\r\n  }\r\n\r\n  //Celestial planes\r\n  for (var key in cfg.lines) {\r\n    if (has(cfg.lines, key) && key != \"graticule\" && cfg.lines[key].show !== false) { \r\n      id = \"planes\" + key;\r\n      groups[id].append(\"path\")\r\n         .datum(d3.geo.circle().angle([90]).origin(poles[key]) )\r\n         .attr(\"class\", id)\r\n         .attr(\"d\", map);\r\n      styles[id] = svgStyle(cfg.lines[key]);\r\n    }\r\n  }\r\n\r\n  //Milky way outline\r\n  if (cfg.mw.show) {\r\n    q.defer(function(callback) { \r\n      d3.json(path + \"mw.json\", function(error, json) {\r\n        if (error) callback(error);\r\n        var mw = getData(json, cfg.transform);\r\n        var mw_back = getMwbackground(mw);\r\n        \r\n        groups.milkyWay.selectAll(\".mway\")\r\n         .data(mw.features)\r\n         .enter().append(\"path\")\r\n         .attr(\"class\", \"milkyWay\")\r\n         .attr(\"d\", map);\r\n        styles.milkyWay = svgStyle(cfg.mw.style);\r\n        \r\n        if (!has(cfg.background, \"opacity\") || cfg.background.opacity > 0.95) {\r\n          groups.milkyWayBg.selectAll(\".mwaybg\")\r\n           .data(mw_back.features)\r\n           .enter().append(\"path\")\r\n           .attr(\"class\", \"milkyWayBg\")\r\n           .attr(\"d\", map);\r\n          styles.milkyWayBg = {\"fill\": cfg.background.fill, \r\n                   \"fill-opacity\": cfg.background.opacity };\r\n        }\r\n        callback(null);\r\n      });\r\n    });\r\n  }\r\n\r\n  //Constellation boundaries\r\n  if (cfg.constellations.bounds) { \r\n    q.defer(function(callback) { \r\n      d3.json(path + filename(\"constellations\", \"borders\"), function(error, json) {\r\n        if (error) callback(error);\r\n\r\n        var conb = getData(json, cfg.transform);\r\n        if (Celestial.constellation) {\r\n          var re = new RegExp(\"\\\\b\" + Celestial.constellation + \"\\\\b\");\r\n        }\r\n\r\n        groups.constBoundaries.selectAll(\".bounds\")\r\n         .data(conb.features)\r\n         .enter().append(\"path\")\r\n         .attr(\"class\", function(d) { return (Celestial.constellation && d.ids.search(re) !== -1) ? \"constBoundariesSel\" : \"constBoundaries\"; }) \r\n         .attr(\"d\", map);\r\n\r\n        styles.constBoundaries = svgStyle(cfg.constellations.boundStyle);\r\n        styles.constBoundariesSel = {\"fill\": \"none\",\r\n            \"stroke\": cfg.constellations.boundStyle.stroke, \r\n            \"stroke-width\": cfg.constellations.boundStyle.width * 1.5,\r\n            \"stroke-opacity\": 1,\r\n            \"stroke-dasharray\": \"none\"};\r\n        \r\n        callback(null);\r\n      });\r\n    });\r\n  }\r\n\r\n  //Constellation lines\r\n  if (cfg.constellations.lines) { \r\n    q.defer(function(callback) { \r\n      d3.json(path + filename(\"constellations\", \"lines\"), function(error, json) {\r\n        if (error) callback(error);\r\n\r\n        var conl = getData(json, cfg.transform);\r\n        groups.constLines.selectAll(\".lines\")\r\n         .data(conl.features)\r\n         .enter().append(\"path\")\r\n         .attr(\"class\", function(d) { return \"constLines\" + d.properties.rank; })\r\n         .attr(\"d\", map);\r\n\r\n        var dasharray = has(cfg.constellations.lineStyle, \"dash\") ? cfg.constellations.lineStyle.dash.join(\" \") : \"none\";\r\n         \r\n        styles.constLines1 = {\"fill\": \"none\", \"stroke\": cfg.constellations.lineStyle.stroke[0],\r\n                              \"stroke-width\": cfg.constellations.lineStyle.width[0],\r\n                              \"stroke-opacity\": cfg.constellations.lineStyle.opacity[0],\r\n                              \"stroke-dasharray\": dasharray};\r\n        styles.constLines2 = {\"fill\": \"none\", \"stroke\": cfg.constellations.lineStyle.stroke[1],\r\n                              \"stroke-width\": cfg.constellations.lineStyle.width[1],\r\n                              \"stroke-opacity\": cfg.constellations.lineStyle.opacity[1],\r\n                              \"stroke-dasharray\": dasharray};\r\n        styles.constLines3 = {\"fill\": \"none\", \"stroke\": cfg.constellations.lineStyle.stroke[2],\r\n                              \"stroke-width\": cfg.constellations.lineStyle.width[2],\r\n                              \"stroke-opacity\": cfg.constellations.lineStyle.opacity[2],\r\n                              \"stroke-dasharray\": dasharray};\r\n        callback(null);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Map border\r\n  q.defer(function(callback) {\r\n    var rot = projection.rotate();\r\n    projection.rotate([0,0,0]);\r\n    groups.mapBorder.append(\"path\")\r\n     .datum(graticule.outline)\r\n     .attr(\"class\", \"mapBorder\")\r\n     .attr(\"d\", map);\r\n     \r\n    styles.mapBorder = {\"fill\": \"none\", \"stroke\": cfg.background.stroke, \"stroke-width\": cfg.background.width, \"stroke-opacity\": 1, \"stroke-dasharray\": \"none\" };\r\n\r\n    projection.rotate(rot);\r\n    callback(null);\r\n  });  \r\n  \r\n  //Constellation names or designation\r\n  if (cfg.constellations.names) { \r\n    q.defer(function(callback) { \r\n      d3.json(path + filename(\"constellations\"), function(error, json) {\r\n        if (error) callback(error);\r\n\r\n        var conn = getData(json, cfg.transform);\r\n        groups.constNames.selectAll(\".constnames\")\r\n         .data(conn.features.filter( function(d) {\r\n            return clip(d.geometry.coordinates) === 1; \r\n          }))\r\n         .enter().append(\"text\")\r\n         .attr(\"class\", function(d) { return \"constNames\" + d.properties.rank; })\r\n         .attr(\"transform\", function(d, i) { return point(d.geometry.coordinates); })\r\n         .text( function(d) { return constName(d); } ); \r\n \r\n        styles.constNames1 = {\"fill\": cfg.constellations.nameStyle.fill[0],\r\n                              \"fill-opacity\": cfg.constellations.nameStyle.opacity[0],\r\n                              \"font\": cfg.constellations.nameStyle.font[0],\r\n                              \"text-anchor\": svgAlign(cfg.constellations.nameStyle.align)};\r\n        styles.constNames2 = {\"fill\": cfg.constellations.nameStyle.fill[1],\r\n                              \"fill-opacity\": cfg.constellations.nameStyle.opacity[1],\r\n                              \"font\": cfg.constellations.nameStyle.font[1],\r\n                              \"text-anchor\": svgAlign(cfg.constellations.nameStyle.align)};\r\n        styles.constNames3 = {\"fill\": cfg.constellations.nameStyle.fill[2],\r\n                              \"fill-opacity\": cfg.constellations.nameStyle.opacity[2],\r\n                              \"font\": cfg.constellations.nameStyle.font[2],\r\n                              \"text-anchor\": svgAlign(cfg.constellations.nameStyle.align)};\r\n        callback(null);\r\n      });\r\n    });\r\n  }\r\n  \r\n  //Stars\r\n  if (cfg.stars.show) { \r\n    q.defer(function(callback) { \r\n      d3.json(path +  cfg.stars.data, function(error, json) {\r\n        if (error) callback(error);\r\n\r\n        var cons = getData(json, cfg.transform);\r\n        \r\n        groups.stars.selectAll(\".stars\")\r\n          .data(cons.features.filter( function(d) {\r\n            return d.properties.mag <= cfg.stars.limit; \r\n          }))\r\n          .enter().append(\"path\")\r\n          .attr(\"class\", function(d) { return \"stars\" + starColor(d.properties.bv); })\r\n          .attr(\"d\", map.pointRadius( function(d) {\r\n            return d.properties ? starSize(d.properties.mag) : 1;\r\n          }));\r\n\r\n        styles.stars = svgStyle(cfg.stars.style);\r\n        var range = bvcolor.domain();\r\n        for (i=Round(range[1],1); i<=Round(range[0],1); i+=0.1) {\r\n          styles[\"stars\" + Math.round(i*10).toString()] = {\"fill\": bvcolor(i)};\r\n        }\r\n          \r\n        if (cfg.stars.designation) { \r\n          groups.starDesignations.selectAll(\".stardesigs\")\r\n            .data(cons.features.filter( function(d) {\r\n              return d.properties.mag <= cfg.stars.designationLimit*adapt && clip(d.geometry.coordinates) === 1; \r\n            }))\r\n            .enter().append(\"text\")\r\n            .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n            .text( function(d) { return starDesignation(d.id); })\r\n            .attr({dy: \".85em\", dx: \".35em\", class: \"starDesignations\"});\r\n          styles.starDesignations = svgTextStyle(cfg.stars.designationStyle);\r\n        }\r\n        if (cfg.stars.propername) { \r\n          groups.starNames.selectAll(\".starnames\")\r\n            .data(cons.features.filter( function(d) {\r\n              return d.properties.mag <= cfg.stars.propernameLimit*adapt && clip(d.geometry.coordinates) === 1; \r\n            }))\r\n            .enter().append(\"text\")\r\n            .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n            .text( function(d) { return starPropername(d.id); })\r\n            .attr({dy: \"-.5em\", dx: \"-.35em\", class: \"starNames\"});\r\n\r\n          styles.starNames = svgTextStyle(cfg.stars.propernameStyle);\r\n        }\r\n        callback(null);\r\n      });\r\n    });\r\n  }\r\n\r\n  //Deep space objects\r\n  if (cfg.dsos.show) { \r\n    q.defer(function(callback) { \r\n      d3.json(path +  cfg.dsos.data, function(error, json) {\r\n        if (error) callback(error);\r\n\r\n        var cond = getData(json, cfg.transform);\r\n        \r\n        groups.dsos.selectAll(\".dsos\")\r\n          .data(cond.features.filter( function(d) {\r\n            return clip(d.geometry.coordinates) === 1 && \r\n                   (d.properties.mag === 999 && Math.sqrt(parseInt(d.properties.dim)) > cfg.dsos.limit*adapt ||\r\n                   d.properties.mag !== 999 && d.properties.mag <= cfg.dsos.limit); \r\n          }))\r\n          .enter().append(\"path\")\r\n          .attr(\"class\", function(d) { return \"dsos\" + d.properties.type; })\r\n          .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n          .attr(\"d\", function(d) { return dsoSymbol(d.properties); });\r\n\r\n        styles.dsos = svgStyle(cfg.dsos.style);\r\n\r\n        for (key in cfg.dsos.symbols) {\r\n          if (!has(cfg.dsos.symbols, key)) continue;\r\n          id = \"dsos\" + key;\r\n          styles[id] = { \"fill-opacity\": cfg.dsos.style.opacity, \"stroke-opacity\": cfg.dsos.style.opacity };\r\n          if (has(cfg.dsos.symbols[key], \"stroke\")) {\r\n            styles[id].fill = \"none\"; \r\n            styles[id].stroke = cfg.dsos.colors ? cfg.dsos.symbols[key].stroke : cfg.dsos.style.stroke;\r\n            styles[id][\"stroke-width\"] = cfg.dsos.colors ? cfg.dsos.symbols[key].width : cfg.dsos.style.width;\r\n          } else {\r\n            styles[id].stroke = \"none\"; \r\n            styles[id].fill = cfg.dsos.colors ? cfg.dsos.symbols[key].fill : cfg.dsos.style.fill;\r\n          }\r\n        }\r\n        \r\n      \r\n        if (cfg.dsos.names) { \r\n          groups.dsoNames.selectAll(\".dsonames\")\r\n            .data(cond.features.filter( function(d) {\r\n              return clip(d.geometry.coordinates) === 1 && \r\n                   (d.properties.mag == 999 && Math.sqrt(parseInt(d.properties.dim)) > cfg.dsos.nameLimit ||\r\n                     d.properties.mag != 999 && d.properties.mag <= cfg.dsos.nameLimit); \r\n            }))\r\n            .enter().append(\"text\")\r\n            .attr(\"class\", function(d) { return \"dsoNames \" + d.properties.type; })\r\n            .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n            .text( function(d) { return dsoName(d); })\r\n            .attr({dy: \"-.5em\", dx: \".35em\"});\r\n               \r\n          styles.dsoNames = {\"fill-opacity\": cfg.dsos.style.opacity,\r\n                    \"font\": cfg.dsos.nameStyle.font,\r\n                    \"text-anchor\": svgAlign(cfg.dsos.nameStyle.align)};\r\n          \r\n          for (key in cfg.dsos.symbols) {\r\n            if (!has(cfg.dsos.symbols, key)) continue;\r\n            styles[key] = {\"fill\": cfg.dsos.colors ? cfg.dsos.symbols[key].fill : cfg.dsos.style.fill };\r\n          }\r\n        }\r\n        callback(null);\r\n      });\r\n    });\r\n  }\r\n\r\n  //Planets\r\n  if ((cfg.location || cfg.formFields.location) && cfg.planets.show && Celestial.origin) {\r\n    q.defer(function(callback) {\r\n      var dt = Celestial.date(),\r\n          o = Celestial.origin(dt).spherical(),\r\n          jp = {type: \"FeatureCollection\", features: []},\r\n          jlun = {type: \"FeatureCollection\", features: []};\r\n      Celestial.container.selectAll(\".planet\").each(function(d) {\r\n        var id = d.id(), r = 12,\r\n            p = d(dt).equatorial(o);\r\n            \r\n        p.ephemeris.pos = transformDeg(p.ephemeris.pos, euler[cfg.transform]);  //transform; \r\n        if (clip(p.ephemeris.pos) === 1) {\r\n          if (id === \"lun\")\r\n            jlun.features.push(createEntry(p));\r\n          else\r\n            jp.features.push(createEntry(p));\r\n        }\r\n      });\r\n      if (cfg.planets.symbolType === \"disk\") {\r\n        groups.planets.selectAll(\".planets\")\r\n         .data(jp.features)\r\n         .enter().append(\"path\")\r\n         .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n         .attr(\"d\", function(d) { \r\n           var r = (has(cfg.planets.symbols[d.id], \"size\")) ? (cfg.planets.symbols[d.id].size - 1) * adapt : null;\r\n           return planetSymbol(d.properties, r); \r\n         })\r\n         .attr(\"class\", function(d) { return \"planets \" + d.id; });\r\n      } else {\r\n        groups.planets.selectAll(\".planets\")\r\n         .data(jp.features)\r\n         .enter().append(\"text\")\r\n         .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n         .text( function(d) { return d.properties.symbol; })\r\n         .attr(\"class\", function(d) { return \"planets \" + d.id; })\r\n         .attr({dy: \".35em\"});\r\n      }\r\n      // Special case for Moon crescent\r\n      if (jlun.features.length > 0) {\r\n        if (cfg.planets.symbolType === \"letter\") {\r\n          groups.planets.selectAll(\".moon\")\r\n           .data(jlun.features)\r\n           .enter().append(\"text\")\r\n           .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n           .text( function(d) { return d.properties.symbol; })\r\n           .attr(\"class\", function(d) { return \"planets \" + d.id; })\r\n           .attr({dy: \".35em\"});\r\n        } else {\r\n          var rl = has(cfg.planets.symbols.lun, \"size\") ? (cfg.planets.symbols.lun.size - 1) * adapt : 11 * adapt; \r\n          groups.planets.selectAll(\".dmoon\")\r\n           .data(jlun.features)\r\n           .enter().append(\"path\")\r\n           .attr(\"class\", \"darkluna\" )\r\n           .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n           .attr(\"d\", function(d) { return d3.svg.symbol().type(\"circle\").size(rl*rl)(); });\r\n          groups.planets.selectAll(\".moon\")\r\n           .data(jlun.features)\r\n           .enter().append(\"path\")\r\n           .attr(\"class\", function(d) { return \"planets \" + d.id; })\r\n           .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n           .attr(\"d\", function(d) { return moonSymbol(d.properties, rl); });\r\n        }\r\n      } \r\n      \r\n      styles.planets = svgTextStyle(cfg.planets.symbolStyle);\r\n      styles.planets.font = planetFont(cfg.planets.symbolStyle.font);\r\n      styles.darkluna = {\"fill\": \"#557\"};\r\n      for (key in cfg.planets.symbols) {\r\n         if (!has(cfg.planets.symbols, key)) continue;\r\n         styles[key] = {\"fill\": cfg.planets.symbols[key].fill};\r\n      }\r\n        \r\n      //Planet names\r\n      if (cfg.planets.names) {\r\n        groups.planetNames.selectAll(\".planetnames\")\r\n         .data(jp.features)\r\n         .enter().append(\"text\")\r\n         .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n         .text( function(d) { return d.properties.name; })\r\n         .attr({dy: \".85em\", dx: \"-.35em\"})\r\n         .attr(\"class\", function(d) { return \"planetNames \" + d.id; });\r\n        if (jlun.features.length > 0) {\r\n          groups.planetNames.selectAll(\".moonname\")\r\n           .data(jlun.features)\r\n           .enter().append(\"text\")\r\n           .attr(\"transform\", function(d) { return point(d.geometry.coordinates); })\r\n           .text( function(d) { return d.properties.name; })\r\n           .attr({dy: \".85em\", dx: \"-.35em\"})\r\n           .attr(\"class\", function(d) { return \"planetNames \" + d.id; });\r\n        }\r\n      }\r\n      styles.planetNames = svgTextStyle(cfg.planets.nameStyle);\r\n      \r\n      callback(null);\r\n    });  \r\n  }\r\n  \r\n  if ((cfg.location || cfg.formFields.location) && cfg.daylight.show && proj.clip) {\r\n    q.defer(function(callback) {\r\n      var sol = getPlanet(\"sol\");\r\n      if (sol) {\r\n        var up = Celestial.zenith(),\r\n            solpos = sol.ephemeris.pos,\r\n            dist = d3.geo.distance(up, solpos),\r\n            pt = projection(solpos),\r\n            daylight = d3.geo.circle().angle([179.95]).origin(solpos);\r\n\r\n        groups.daylight.append(\"path\").datum(daylight)\r\n         .attr(\"class\", \"daylight\")\r\n         .attr(\"d\", map);\r\n       \r\n        styles.daylight = svgSkyStyle(dist, pt);  \r\n\r\n        if (clip(solpos) === 1 && dist < halfπ) {\r\n          groups.daylight.append(\"circle\")\r\n           .attr(\"cx\", pt[0])\r\n           .attr(\"cy\", pt[1])\r\n           .attr(\"r\", 5)\r\n           .style(\"fill\", \"#fff\");\r\n        }\r\n      }\r\n      callback(null);\r\n    });  \r\n  }\r\n\r\n  if ((cfg.location || cfg.formFields.location) && cfg.horizon.show && !proj.clip) {\r\n    q.defer(function(callback) {\r\n      var horizon = d3.geo.circle().angle([90]).origin(Celestial.nadir());\r\n     \r\n      groups.horizon.append(\"path\").datum(horizon)\r\n       .attr(\"class\", \"horizon\")\r\n       .attr(\"d\", map);\r\n      styles.horizon =  svgStyle(cfg.horizon);  \r\n      callback(null);\r\n    });\r\n  }\r\n  \r\n  if (Celestial.data.length > 0) { \r\n    Celestial.data.forEach( function(d) {\r\n      if (has(d, \"save\")) {\r\n       q.defer(function(callback) { \r\n         d.save(); \r\n        callback(null);\r\n       });\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Helper functions\r\n  \r\n  function clip(coords) {\r\n    return proj.clip && d3.geo.distance(center, coords) > halfπ ? 0 : 1;\r\n  }\r\n\r\n  function point(coords) {\r\n    return \"translate(\" + projection(coords) + \")\";\r\n  }\r\n    \r\n  function filename(what, sub, ext) {\r\n    var cult = (has(formats[what], culture)) ? \".\" + culture : \"\";\r\n    ext = ext ? \".\" + ext : \".json\";\r\n    sub = sub ? \".\" + sub : \"\";\r\n    return what + sub + cult + ext;\r\n  }\r\n\r\n  function svgStyle(s) {\r\n    var res = {};\r\n    res.fill = s.fill || \"none\";\r\n    res[\"fill-opacity\"] = s.opacity !== null ? s.opacity : 1;  \r\n    res.stroke = s.stroke || \"none\";\r\n    res[\"stroke-width\"] = s.width !== null ? s.width : 0;\r\n    res[\"stroke-opacity\"] = s.opacity !== null ? s.opacity : 1;  \r\n    if (has(s, \"dash\")) res[\"stroke-dasharray\"] = s.dash.join(\" \");\r\n    else res[\"stroke-dasharray\"] = \"none\";\r\n    res.font = s.font || null;\r\n    return res;\r\n  }\r\n\r\n  function svgTextStyle(s) {\r\n    var res = {};\r\n    res.stroke = \"none\";\r\n    res.fill = s.fill || \"none\";\r\n    res[\"fill-opacity\"] = s.opacity !== null ? s.opacity : 1;  \r\n    //res.textBaseline = s.baseline || \"bottom\";\r\n    res[\"text-anchor\"] = svgAlign(s.align);\r\n    res.font = s.font || null;\r\n    return res;\r\n  }\r\n\r\n  function svgStyleA(rank, s) {\r\n    var res = {};\r\n    rank = rank || 1;\r\n    res.fill = isArray(s.fill) ? s.fill[rank-1] : null;\r\n    res[\"fill-opacity\"] = isArray(s.opacity) ? s.opacity[rank-1] : 1;  \r\n    res.stroke = isArray(s.stroke) ? s.stroke[rank-1] : null;\r\n    res[\"stroke-width\"] = isArray(s.width) ? s.width[rank-1] : null;\r\n    res[\"stroke-opacity\"] = isArray(s.opacity) ? s.opacity[rank-1] : 1;  \r\n    res[\"text-anchor\"] = svgAlign(s.align);\r\n    res.font = isArray(s.font) ? s.font[rank-1] : null;\r\n    //res.textBaseline = s.baseline || \"bottom\";\r\n    return res;\r\n  }\r\n\r\n  function svgSkyStyle(dist, pt) {\r\n    var factor, color1, color2, color3,\r\n        upper = 1.36, \r\n        lower = 1.885;\r\n    \r\n    if (dist > lower) return {fill: \"transparent\"};\r\n    \r\n    if (dist <= upper) { \r\n      color1 = \"#daf1fa\";\r\n      color2 = \"#93d7f0\"; \r\n      color3 = \"#57c0e8\"; \r\n      factor = -(upper-dist) / 10; \r\n    } else {\r\n      factor = (dist - upper) / (lower - upper);\r\n      color1 = d3.interpolateLab(\"#daf1fa\", \"#e8c866\")(factor);\r\n      color2 = d3.interpolateLab(\"#93c7d0\", \"#ff854a\")(factor);\r\n      color3 = d3.interpolateLab(\"#57b0c8\", \"#6caae2\")(factor);\r\n    }\r\n\r\n    var gradient = groups.daylight.append(\"radialGradient\")\r\n     .attr(\"cx\", pt[0])\r\n     .attr(\"cy\", pt[1])\r\n     .attr(\"fr\", \"0\")\r\n     .attr(\"r\", \"300\")\r\n     .attr(\"id\", \"skygradient\")\r\n     .attr(\"gradientUnits\", \"userSpaceOnUse\");\r\n\r\n    gradient.append(\"stop\").attr(\"offset\", \"0\").attr(\"stop-color\", color1);\r\n    gradient.append(\"stop\").attr(\"offset\", 0.2+0.4*factor).attr(\"stop-color\", color2);\r\n    gradient.append(\"stop\").attr(\"offset\", \"1\").attr(\"stop-color\", color3);\r\n\r\n    return {\"fill\": \"url(#skygradient)\", \"fill-opacity\": skyTransparency(factor, 1.4)};\r\n  }\r\n\r\n  function skyTransparency(t, a) {\r\n    return 0.9 * (1 - ((Math.pow(Math.E, t*a) - 1) / (Math.pow(Math.E, a) - 1)));\r\n  }\r\n  \r\n\r\n\r\n  function svgAlign(s) {\r\n    if (!s) return \"start\";\r\n    if (s === \"center\") return \"middle\"; \r\n    if (s === \"right\") return \"end\";\r\n    return \"start\";\r\n  }\r\n\r\n  function dsoSymbol(p) {\r\n    var size = dsoSize(p.mag, p.dim) || 9,\r\n        type = dsoShape(p.type);\r\n    if (d3.svg.symbolTypes.indexOf(type) !== -1) {\r\n      return d3.svg.symbol().type(type).size(size)();\r\n    } else {\r\n      return d3.svg.customSymbol().type(type).size(size)();\r\n    }\r\n  }\r\n\r\n  function dsoShape(type) {\r\n    if (!type || !has(cfg.dsos.symbols, type)) return \"circle\"; \r\n    else return cfg.dsos.symbols[type].shape; \r\n  }\r\n\r\n  function dsoSize(mag, dim) {\r\n    if (!mag || mag === 999) return Math.pow(parseInt(dim) * cfg.dsos.size * adapt / 7, 0.5); \r\n    return Math.pow(2 * cfg.dsos.size * adapt - mag, cfg.dsos.exponent);\r\n  }\r\n \r\n  function dsoName(d) {\r\n    //return p[cfg.dsos.namesType]; \r\n    var lang = cfg.dsos.namesType, id = d.id;\r\n    if (lang === \"desig\" || !has(dsonames, id)) return d.properties.desig;\r\n    return has(dsonames[id], lang) ? dsonames[id][lang] : d.properties.desig; \r\n  }\r\n\r\n  function dsoColor(p) {\r\n    if (cfg.dsos.colors === true) return svgStyle(cfg.dsos.symbols[p.type]);\r\n    return svgStyle(cfg.dsos.style);\r\n  }\r\n \r\n  function starDesignation(id) {\r\n    if (!has(starnames, id)) return \"\";\r\n    return starnames[id][cfg.stars.designationType]; \r\n  }\r\n\r\n  function starPropername(id) {\r\n    var lang = cfg.stars.propernameType;\r\n    if (!has(starnames, id)) return \"\";\r\n    return has(starnames[id], lang) ? starnames[id][lang] : starnames[id].name; \r\n  }\r\n\r\n  function starSize(mag) {\r\n    if (mag === null) return 0.1; \r\n    var d = cfg.stars.size * adapt * Math.exp(cfg.stars.exponent * (mag + 2));\r\n    return Math.max(d, 0.1);\r\n  }\r\n  \r\n  function starColor(bv) {\r\n    if (!cfg.stars.colors || isNaN(bv)) return \"\"; \r\n    return Math.round(bv*10).toString();\r\n  }\r\n  \r\n  function constName(d) { \r\n    return d.properties[cfg.constellations.namesType]; \r\n  }\r\n\r\n  function moonSymbol(p, r) { \r\n    var size = r ? r*r : 121;\r\n    return d3.svg.customSymbol().type(\"crescent\").size(size).ratio(p.age)();\r\n  }\r\n\r\n  function planetSymbol(p, r) { \r\n    var size = r ? r*r : planetSize(p.mag);\r\n    return d3.svg.symbol().type(\"circle\").size(size)();\r\n  }\r\n\r\n  function planetFont(s) {\r\n    var size = s.replace(/(^\\D*)(\\d+)(\\D.+$)/i,'$2');\r\n    size = Math.round(adapt * size);\r\n    return s.replace(/(^\\D*)(\\d+)(\\D.+$)/i,'$1' + size + '$3');\r\n  }\r\n\r\n  function planetSize(m) {\r\n    var mag = m || 2; \r\n    var r = 4 * adapt * Math.exp(-0.05 * (mag+2));\r\n    return Math.max(r, 2);\r\n  }\r\n\r\n  function createEntry(o) {\r\n    var res = {type: \"Feature\", \"id\":o.id, properties: {}, geometry:{}};\r\n    res.properties.name = o[cfg.planets.namesType];\r\n    if (cfg.planets.symbolType === \"symbol\" || cfg.planets.symbolType === \"letter\")\r\n      res.properties.symbol = cfg.planets.symbols[res.id][cfg.planets.symbolType];\r\n    res.properties.mag = o.ephemeris.mag || 10;\r\n    if (res.id === \"lun\") {\r\n      res.properties.age = o.ephemeris.age;\r\n      res.properties.phase = o.ephemeris.phase;\r\n    }\r\n    res.geometry.type = \"Point\";\r\n    res.geometry.coordinates = o.ephemeris.pos;\r\n    return res;\r\n  }\r\n\r\n  function createStyles() {\r\n    var res = \"\";\r\n    for (var key in styles) {\r\n      if (!has(styles, key)) continue;\r\n      res += \" .\" + key + stringifyStyle(styles[key]);\r\n    }\r\n    return \"/*\\u003c![CDATA[*/\\n\" + res + \"\\n/*]]\\u003e*/\";\r\n  }\r\n\r\n  function stringifyStyle(s) {\r\n    var res = \" {\";\r\n    for (var key in s) {\r\n      if (!has(s, key)) continue;\r\n      res += key + \":\" + s[key] + \"; \";\r\n    }\r\n    return res + \"} \";\r\n  }\r\n\r\n  q.await(function(error) {\r\n    if (error) throw error;\r\n    var svg = d3.select(\"#d3-celestial-svg svg\")\r\n      .attr(\"title\", \"D3-Celestial\")\r\n      .attr(\"version\", 1.1)\r\n      .attr(\"encoding\", \"UTF-8\")\r\n      .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\r\n      .attr(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\r\n      .attr(\"xmlns:sodipodi\", \"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\")\r\n      .attr(\"xmlns:inkscape\", \"http://www.inkscape.org/namespaces/inkscape\")\r\n      .attr(\"viewBox\", \" 0 0 \" + (m.width) + \" \" + (m.height));\r\n\r\n    defs.append(\"style\")\r\n     .attr(\"type\", \"text\\/css\")\r\n     .text(createStyles());\r\n    /*defs.append(\":sodipodi:namedview\")\r\n     .attr(\":inkscape:window-width\", m.width+200)\r\n     .attr(\":inkscape:window-height\", m.height)\r\n     .attr(\":inkscape:window-maximized\", \"1\");*/\r\n    if (fname) {\r\n      var blob = new Blob([svg.node().outerHTML], {type:\"image/svg+xml;charset=utf-8\"});\r\n    \r\n      var a = d3.select(\"body\").append(\"a\").node(); \r\n      a.download = fname || \"d3-celestial.svg\";\r\n      a.rel = \"noopener\";\r\n      a.href = URL.createObjectURL(blob);\r\n      a.click();\r\n      d3.select(a).remove();\r\n    } else if (exportCallback !== null) {\r\n      exportCallback(svg.node().outerHTML);\r\n    }\r\n    d3.select(\"#d3-celestial-svg\").remove();\r\n  });\r\n\r\n}\r\n\r\nvar customSvgSymbols = d3.map({\r\n  'ellipse': function(size, ratio) {\r\n    var s = Math.sqrt(size), \r\n        rx = s*0.666, ry = s/3;\r\n    return 'M' + (-rx) + ',' + (-ry) +\r\n    ' m' + (-rx) + ',0' +\r\n    ' a' + rx + ',' + ry + ' 0 1,0' + (rx * 2) + ',0' +\r\n    ' a' + rx + ',' + ry + ' 0 1,0' + (-(rx * 2)) + ',0';\r\n  },\r\n  'marker': function(size, ratio) {\r\n    var s =  size > 48 ? size / 4 : 12,\r\n        r = s/2, l = r-3;\r\n    return 'M ' + (-r) + ' 0 h ' + l + \r\n           ' M 0 ' + (-r) + ' v ' + l + \r\n           ' M ' + r + ' 0 h ' + (-l) +  \r\n           ' M 0 ' + r + ' v ' + (-l);\r\n  },\r\n  'cross-circle': function(size, ratio) {\r\n    var s = Math.sqrt(size), \r\n        r = s/2;\r\n    return 'M' + (-r) + ',' + (-r) +\r\n    ' m' + (-r) + ',0' +\r\n    ' a' + r + ',' + r + ' 0 1,0' + (r * 2) + ',0' +\r\n    ' a' + r + ',' + r + ' 0 1,0' + (-(r * 2)) + ',0' +\r\n    ' M' + (-r) + ' 0 h ' + (s) + \r\n    ' M 0 ' + (-r) + ' v ' + (s);\r\n        \r\n  },\r\n  'stroke-circle': function(size, ratio) {\r\n    var s = Math.sqrt(size), \r\n        r = s/2;\r\n    return 'M' + (-r) + ',' + (-r) +\r\n    ' m' + (-r) + ',0' +\r\n    ' a' + r + ',' + r + ' 0 1,0' + (r * 2) + ',0' +\r\n    ' a' + r + ',' + r + ' 0 1,0' + (-(r * 2)) + ',0' +\r\n    ' M' + (-s-2) + ',' + (-s-2) + ' l' + (s+4) + ',' + (s+4);\r\n\r\n  }, \r\n  \"crescent\": function(size, ratio) {\r\n    var s = Math.sqrt(size), \r\n        r = s/2,\r\n        ph = 0.5 * (1 - Math.cos(ratio)),\r\n        e = 1.6 * Math.abs(ph - 0.5) + 0.01,\r\n        dir = ratio > Math.PI ? 0 : 1,\r\n        termdir = Math.abs(ph) > 0.5 ? dir : Math.abs(dir-1); \r\n    return 'M ' + (-1) + ',' + (-1) +\r\n    ' m 1,' + (-r+1) + \r\n    ' a' + r + ',' + r + ' 0 1 ' + dir + ' 0,' + (r * 2) +\r\n    ' a' + (r*e) + ',' + r + ' 0 1 ' + termdir + ' 0,' + (-(r * 2)) + 'z';\r\n  } \r\n});\r\n\r\nd3.svg.customSymbol = function() {\r\n  var type, size = 64, ratio = d3.functor(1);\r\n  \r\n  function symbol(d,i) {\r\n    return customSvgSymbols.get(type.call(this,d,i))(size.call(this,d,i), ratio.call(this,d,i));\r\n  }\r\n  symbol.type = function(_) {\r\n    if (!arguments.length) return type; \r\n    type = d3.functor(_);\r\n    return symbol;\r\n  };\r\n  symbol.size = function(_) {\r\n    if (!arguments.length) return size; \r\n    size = d3.functor(_);\r\n    return symbol;\r\n  };\r\n  symbol.ratio = function(_) {\r\n    if (!arguments.length) return ratio; \r\n    ratio = d3.functor(_);\r\n    return symbol;\r\n  };\r\n  return symbol;\r\n};\r\n\r\nvar exportCallback = null;\r\n\r\nCelestial.exportSVG = function(callback) {\r\n  if (!callback) return;\r\n  exportCallback = callback;\r\n  exportSVG();\r\n};\r\nvar datetimepicker = function(cfg, callback) {\r\n  var date = new Date(), \r\n      tzFormat = d3.time.format(\"%Z\"),\r\n      tz = [{\"−12:00\":-720}, {\"−11:00\":-660}, {\"−10:00\":-600}, {\"−09:30\":-570}, {\"−09:00\":-540}, {\"−08:00\":-480}, {\"−07:00\":-420}, {\"−06:00\":-360}, {\"−05:00\":-300}, {\"−04:30\":-270}, {\"−04:00\":-240}, {\"−03:30\":-210}, {\"−03:00\":-180}, {\"−02:30\":-150}, {\"−02:00\":-120}, {\"−01:00\":-60}, {\"±00:00\":0}, {\"+01:00\":60}, {\"+02:00\":120}, {\"+03:00\":180}, {\"+03:30\":210}, {\"+04:00\":240}, {\"+04:30\":270}, {\"+05:00\":300}, {\"+05:30\":330}, {\"+05:45\":345}, {\"+06:00\":360}, {\"+06:30\":390}, {\"+07:00\":420}, {\"+08:00\":480}, {\"+08:30\":510}, {\"+08:45\":525}, {\"+09:00\":540}, {\"+09:30\":570}, {\"+10:00\":600}, {\"+10:30\":630}, {\"+11:00\":660}, {\"+12:00\":720}, {\"+12:45\":765}, {\"+13:00\":780}, {\"+14:00\":840}],\r\n      months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n      days = [\"Su\", \"M\", \"Tu\", \"W\", \"Th\", \"F\", \"Sa\"],\r\n      years = getYears(date),\r\n      dateFormat = d3.time.format(\"%Y-%m-%d\"),\r\n      dtrange = cfg.daterange || [];\r\n    \r\n  var picker = d3.select(parentElement + \" ~ #celestial-form\").append(\"div\").attr(\"id\", \"celestial-date\");\r\n  nav(\"left\");\r\n  monSel();\r\n  yrSel();\r\n  nav(\"right\");\r\n  \r\n  var cal = picker.append(\"div\").attr(\"id\", \"cal\");\r\n\r\n  daySel();\r\n  \r\n  timeSel();\r\n  tzSel();\r\n  \r\n  function daySel() {\r\n    var mo = $form(\"mon\").value, yr = $form(\"yr\").value,\r\n        curdt = new Date(yr, mo, 1),\r\n        cal = d3.select(parentElement + \" ~ #celestial-form\").select(\"#cal\"),\r\n        today = new Date();\r\n    yr = parseInt(yr);   \r\n    mo = parseInt(mo);   \r\n    curdt.setDate(curdt.getDate() - curdt.getDay());\r\n    var nd = cal.node();\r\n    while (nd.firstChild) nd.removeChild(nd.firstChild);\r\n    \r\n    for (var i=0; i<7; i++) {\r\n      cal.append(\"div\").classed({\"date\": true, \"weekday\": true}).html(days[i]);\r\n    }\r\n    for (i=0; i<42; i++) {\r\n      var curmon = curdt.getMonth(), curday = curdt.getDay(), curid = dateFormat(curdt);\r\n      cal.append(\"div\").classed({\r\n        \"date\": true, \r\n        \"grey\": curmon !== mo,\r\n        \"weekend\": curmon === mo && (curday === 0 || curday === 6),\r\n        \"today\": dateDiff(curdt, today) === 0,\r\n        \"selected\": dateDiff(curdt, date) === 0\r\n      }).attr(\"id\", curid)\r\n      .on(\"click\", pick)\r\n      .html(curdt.getDate().toString());\r\n      \r\n      curdt.setDate(curdt.getDate()+1);\r\n    }\r\n  }\r\n\r\n  function yrSel() {     \r\n    picker.append(\"select\").attr(\"title\", \"Year\").attr(\"id\", \"yr\").on(\"change\", daySel);   \r\n    \r\n    fillYrSel();\r\n  }\r\n\r\n  function fillYrSel() { \r\n    var sel = d3.select(parentElement + \" ~ #celestial-form\").select(\"select#yr\"),\r\n        year = date.getFullYear(),\r\n        selected = 0,\r\n        years = getYears(date);\r\n        \r\n    sel.selectAll(\"*\").remove();    \r\n    sel.selectAll('option').data(years).enter().append('option')\r\n       .text(function (d, i) { \r\n         if (d === year) selected = i; \r\n         return d.toString(); \r\n       });\r\n    sel.property(\"selectedIndex\", selected);\r\n  }\r\n  \r\n  function monSel() { \r\n    var sel = picker.append(\"select\").attr(\"title\", \"Month\").attr(\"id\", \"mon\").on(\"change\", daySel),\r\n        selected = 0,\r\n        month = date.getMonth();\r\n    \r\n    sel.selectAll('option').data(months).enter().append('option')\r\n       .attr(\"value\", function (d, i) { \r\n         if (i === month) selected = i; \r\n         return i; \r\n       })\r\n       .text(function (d) { return d; });\r\n    sel.property(\"selectedIndex\", selected);\r\n  }\r\n  \r\n  function nav(dir) {\r\n    var lnk = picker.append(\"div\").attr(\"id\", dir).on(\"click\", function () {\r\n      var mon = $form(\"mon\"), yr = $form(\"yr\");\r\n      \r\n      if (dir === \"left\") {\r\n        if (mon.selectedIndex === 0) {\r\n          mon.selectedIndex = 11;\r\n          yr.selectedIndex--;\r\n        } else mon.selectedIndex--;\r\n      } else {\r\n        if (mon.selectedIndex === 11) {\r\n          mon.selectedIndex = 0;\r\n          yr.selectedIndex++;\r\n        } else mon.selectedIndex++;\r\n      }\r\n      daySel();\r\n    });\r\n  }\r\n\r\n  function timeSel() { \r\n    picker.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"hr\").attr(\"title\", \"Hours\").attr(\"max\", \"24\").attr(\"min\", \"-1\").attr(\"step\", \"1\").attr(\"value\", date.getHours()).on(\"change\", function () { if (testNumber(this) === true) pick(); });\r\n\r\n    picker.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"min\").attr(\"title\", \"Minutes\").attr(\"max\", \"60\").attr(\"min\", \"-1\").attr(\"step\", \"1\").attr(\"value\", date.getMinutes()).on(\"change\", function () { if (testNumber(this) === true) pick(); });\r\n    \r\n    picker.append(\"input\").attr(\"type\", \"number\").attr(\"id\", \"sec\").attr(\"title\", \"Seconds\").attr(\"max\", \"60\").attr(\"min\", \"-1\").attr(\"step\", \"1\").attr(\"value\", date.getSeconds()).on(\"change\", function () { if (testNumber(this) === true) pick(); });\r\n  }\r\n  \r\n  function tzSel() { \r\n    var sel = picker.append(\"select\").attr(\"title\", \"Time zone offset from UTC\").attr(\"id\", \"tz\").on(\"change\", pick),\r\n        selected = 15,\r\n        tzOffset = -date.getTimezoneOffset();\r\n    sel.selectAll('option').data(tz).enter().append('option')\r\n       .attr(\"value\", function (d, i) { \r\n         var k = Object.keys(d)[0];\r\n         if (d[k] === tzOffset) selected = i; \r\n         return d[k]; \r\n       })\r\n       .text(function (d) { return Object.keys(d)[0]; });\r\n    sel.property(\"selectedIndex\", selected);\r\n  }\r\n  \r\n  function getYears(dt) {\r\n    var r = getDateRange(dt.getFullYear()), res = [];\r\n    for (var i = r[0]; i <= r[1]; i++) res.push(i);\r\n    return res;\r\n  }  \r\n  \r\n  function getDateRange(yr) {\r\n    if (!dtrange || dtrange.length < 1) return [yr - 10, yr + 10];\r\n    \r\n    if (dtrange.length === 1 && isNumber(dtrange[0])) {\r\n      if (dtrange[0] >= 100) return [dtrange[0] - 10, dtrange[0] + 10];\r\n      else return [yr - dtrange[0], yr + dtrange[0]];\r\n    }\r\n    if (dtrange.length === 2 && isNumber(dtrange[0])&& isNumber(dtrange[1])) {\r\n      if (dtrange[1] >= 100) return [dtrange[0], dtrange[1]];\r\n      else return [dtrange[0] - dtrange[1], dtrange[0] + dtrange[1]];\r\n    }      \r\n    return [yr - 10, yr + 10];\r\n  }\r\n\r\n  function select(id, val) {\r\n    var sel = $form(id);\r\n    for (var i=0; i<sel.childNodes.length; i++) {\r\n      if (sel.childNodes[i].value == val) {\r\n        sel.selectedIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  \r\n  function set(dt) {\r\n     if (dt) date.setTime(dt.valueOf());\r\n     \r\n     select(\"yr\", date.getFullYear());\r\n     select(\"mon\", date.getMonth());\r\n     daySel();\r\n     $form(\"hr\").value = date.getHours();\r\n     $form(\"min\").value = date.getMinutes();\r\n     $form(\"sec\").value = date.getSeconds();\r\n  } \r\n  \r\n  this.show = function(dt, tz) {\r\n    var nd = $form(\"celestial-date\"),\r\n        src = $form(\"datepick\"),\r\n        left = src.offsetLeft + src.offsetWidth - nd.offsetWidth,\r\n        top = src.offsetTop - nd.offsetHeight - 1;\r\n  \r\n    if (nd.offsetTop === -9999) {\r\n      date.setTime(dt.valueOf());\r\n      select(\"tz\", tz);\r\n      set();\r\n      d3.select(parentElement + \" ~ #celestial-form\").select(\"#celestial-date\").style({\"top\": px(top), \"left\": px(left), \"opacity\": 1});  \r\n      d3.select(parentElement + \" ~ #celestial-form\").select(\"#datepick\").classed(\"active\", true);\r\n    } else {\r\n      vanish();\r\n    }\r\n  };\r\n  \r\n  this.isVisible = function () {\r\n    if (!document.getElementById(\"datepick\")) return false;\r\n    return d3.select(parentElement + \" ~ #celestial-form\").select(\"#datepick\").classed(\"active\") === true;\r\n  };\r\n\r\n  this.hide = function () {\r\n    vanish();\r\n  };\r\n  \r\n  function vanish() {\r\n    d3.select(parentElement + \" ~ #celestial-form\").select(\"#celestial-date\").style(\"opacity\", 0);\r\n    d3.select(\"#error\").style( {top:\"-9999px\", left:\"-9999px\", opacity:0} ); \r\n    d3.select(parentElement + \" ~ #celestial-form\").select(\"#datepick\").classed(\"active\", false);\r\n    setTimeout(function () { $form(\"celestial-date\").style.top = px(-9999); }, 600);    \r\n  }\r\n  \r\n  function pick() {\r\n    var h = $form(\"hr\").value, m = $form(\"min\").value,\r\n        s = $form(\"sec\").value, tz = $form(\"tz\").value;\r\n        \r\n    if (this.id && this.id.search(/^\\d/) !== -1) {\r\n      date = dateFormat.parse(this.id); \r\n    }\r\n    fillYrSel();\r\n    \r\n    date.setHours(h, m, s);\r\n    set();\r\n    \r\n    callback(date, tz);\r\n  } \r\n  \r\n  \r\n};// Copyright 2014, Jason Davies, http://www.jasondavies.com\r\n// See LICENSE.txt for details.\r\n(function() {\r\n\r\nvar radians = Math.PI / 180,\r\n    degrees = 180 / Math.PI;\r\n\r\n// TODO make incremental rotate optional\r\n\r\nd3.geo.zoom = function() {\r\n  var projection,\r\n      duration;\r\n\r\n  var zoomPoint,\r\n      zooming = 0,\r\n      event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\r\n      zoom = d3.behavior.zoom()\r\n        .on(\"zoomstart\", function() {\r\n          var mouse0 = d3.mouse(this),\r\n              rotate = quaternionFromEuler(projection.rotate()),\r\n              point = position(projection, mouse0);\r\n          if (point) zoomPoint = point;\r\n\r\n          zoomOn.call(zoom, \"zoom\", function() {\r\n                projection.scale(view.k = d3.event.scale);\r\n                var mouse1 = d3.mouse(this),\r\n                    between = rotateBetween(zoomPoint, position(projection, mouse1));\r\n                projection.rotate(view.r = eulerFromQuaternion(rotate = between\r\n                    ? multiply(rotate, between)\r\n                    : multiply(bank(projection, mouse0, mouse1), rotate)));\r\n                mouse0 = mouse1;\r\n                zoomed(event.of(this, arguments));\r\n              });\r\n          zoomstarted(event.of(this, arguments));\r\n        })\r\n        .on(\"zoomend\", function() {\r\n          zoomOn.call(zoom, \"zoom\", null);\r\n          zoomended(event.of(this, arguments));\r\n        }),\r\n      zoomOn = zoom.on,\r\n      view = {r: [0, 0, 0], k: 1};\r\n\r\n  zoom.rotateTo = function(location) {\r\n    var between = rotateBetween(cartesian(location), cartesian([-view.r[0], -view.r[1]]));\r\n    return eulerFromQuaternion(multiply(quaternionFromEuler(view.r), between));\r\n  };\r\n\r\n  zoom.projection = function(_) {\r\n    if (!arguments.length) return projection;\r\n    projection = _;\r\n    view = {r: projection.rotate(), k: projection.scale()};\r\n    return zoom.scale(view.k);\r\n  };\r\n\r\n  zoom.duration = function(_) {\r\n    return arguments.length ? (duration = _, zoom) : duration;\r\n  };\r\n\r\n  zoom.event = function(g) {\r\n    g.each(function() {\r\n      var g = d3.select(this),\r\n          dispatch = event.of(this, arguments),\r\n          view1 = view,\r\n          transition = d3.transition(g);\r\n     \r\n      if (transition !== g) {\r\n        transition\r\n            .each(\"start.zoom\", function() {\r\n              if (this.__chart__) { // pre-transition state\r\n                view = this.__chart__;\r\n                if (!view.hasOwnProperty(\"r\")) view.r = projection.rotate();\r\n              } \r\n              projection.rotate(view.r).scale(view.k);\r\n              zoomstarted(dispatch);\r\n            })\r\n            .tween(\"zoom:zoom\", function() {\r\n              var width = zoom.size()[0],\r\n                  i = interpolateBetween(quaternionFromEuler(view.r), quaternionFromEuler(view1.r)),\r\n                  d = d3.geo.distance(view.r, view1.r),\r\n                  smooth = d3.interpolateZoom([0, 0, width / view.k], [d, 0, width / view1.k]);\r\n              if (duration) transition.duration(duration(smooth.duration * .001)); // see https://github.com/mbostock/d3/pull/2045\r\n              return function(t) {\r\n                var uw = smooth(t);\r\n                this.__chart__ = view = {r: eulerFromQuaternion(i(uw[0] / d)), k: width / uw[2]};\r\n                projection.rotate(view.r).scale(view.k);\r\n                zoom.scale(view.k);\r\n                zoomed(dispatch);\r\n              };\r\n            })\r\n            .each(\"end.zoom\", function() {\r\n              zoomended(dispatch);\r\n            });\r\n        try { // see https://github.com/mbostock/d3/pull/1983\r\n          transition\r\n              .each(\"interrupt.zoom\", function() {\r\n                zoomended(dispatch);\r\n              });\r\n        } catch (e) { console.log(e); }\r\n      } else {\r\n        this.__chart__ = view;\r\n        zoomstarted(dispatch);\r\n        zoomed(dispatch);\r\n        zoomended(dispatch);\r\n      }\r\n    });\r\n  };\r\n\r\n  function zoomstarted(dispatch) {\r\n    if (!zooming++) dispatch({type: \"zoomstart\"});\r\n  }\r\n\r\n  function zoomed(dispatch) {\r\n    dispatch({type: \"zoom\"});\r\n  }\r\n\r\n  function zoomended(dispatch) {\r\n    if (!--zooming) dispatch({type: \"zoomend\"});\r\n  }\r\n\r\n  return d3.rebind(zoom, event, \"on\");\r\n};\r\n\r\nfunction bank(projection, p0, p1) {\r\n  var t = projection.translate(),\r\n      angle = Math.atan2(p0[1] - t[1], p0[0] - t[0]) - Math.atan2(p1[1] - t[1], p1[0] - t[0]);\r\n  return [Math.cos(angle / 2), 0, 0, Math.sin(angle / 2)];\r\n}\r\n\r\nfunction position(projection, point) {\r\n  var spherical = projection.invert(point);\r\n  return spherical && isFinite(spherical[0]) && isFinite(spherical[1]) && cartesian(spherical);\r\n}\r\n\r\nfunction quaternionFromEuler(euler) {\r\n  var λ = .5 * euler[0] * radians,\r\n      φ = .5 * euler[1] * radians,\r\n      γ = .5 * euler[2] * radians,\r\n      sinλ = Math.sin(λ), cosλ = Math.cos(λ),\r\n      sinφ = Math.sin(φ), cosφ = Math.cos(φ),\r\n      sinγ = Math.sin(γ), cosγ = Math.cos(γ);\r\n  return [\r\n    cosλ * cosφ * cosγ + sinλ * sinφ * sinγ,\r\n    sinλ * cosφ * cosγ - cosλ * sinφ * sinγ,\r\n    cosλ * sinφ * cosγ + sinλ * cosφ * sinγ,\r\n    cosλ * cosφ * sinγ - sinλ * sinφ * cosγ\r\n  ];\r\n}\r\n\r\nfunction multiply(a, b) {\r\n  var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\r\n      b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n  return [\r\n    a0 * b0 - a1 * b1 - a2 * b2 - a3 * b3,\r\n    a0 * b1 + a1 * b0 + a2 * b3 - a3 * b2,\r\n    a0 * b2 - a1 * b3 + a2 * b0 + a3 * b1,\r\n    a0 * b3 + a1 * b2 - a2 * b1 + a3 * b0\r\n  ];\r\n}\r\n\r\nfunction rotateBetween(a, b) {\r\n  if (!a || !b) return;\r\n  var axis = cross(a, b),\r\n      norm = Math.sqrt(dot(axis, axis)),\r\n      halfγ = .5 * Math.acos(Math.max(-1, Math.min(1, dot(a, b)))),\r\n      k = Math.sin(halfγ) / norm;\r\n  return norm && [Math.cos(halfγ), axis[2] * k, -axis[1] * k, axis[0] * k];\r\n}\r\n\r\n// Interpolate between two quaternions (slerp).\r\nfunction interpolateBetween(a, b) {\r\n  var d = Math.max(-1, Math.min(1, dot(a, b))),\r\n      s = d < 0 ? -1 : 1,\r\n      θ = Math.acos(s * d),\r\n      sinθ = Math.sin(θ);\r\n  return sinθ ? function(t) {\r\n    var A = s * Math.sin((1 - t) * θ) / sinθ,\r\n        B = Math.sin(t * θ) / sinθ;\r\n    return [\r\n      a[0] * A + b[0] * B,\r\n      a[1] * A + b[1] * B,\r\n      a[2] * A + b[2] * B,\r\n      a[3] * A + b[3] * B\r\n    ];\r\n  } : function() { return a; };\r\n}\r\n\r\nfunction eulerFromQuaternion(q) {\r\n  return [\r\n    Math.atan2(2 * (q[0] * q[1] + q[2] * q[3]), 1 - 2 * (q[1] * q[1] + q[2] * q[2])) * degrees,\r\n    Math.asin(Math.max(-1, Math.min(1, 2 * (q[0] * q[2] - q[3] * q[1])))) * degrees,\r\n    Math.atan2(2 * (q[0] * q[3] + q[1] * q[2]), 1 - 2 * (q[2] * q[2] + q[3] * q[3])) * degrees\r\n  ];\r\n}\r\n\r\nfunction cartesian(spherical) {\r\n  var λ = spherical[0] * radians,\r\n      φ = spherical[1] * radians,\r\n      cosφ = Math.cos(φ);\r\n  return [\r\n    cosφ * Math.cos(λ),\r\n    cosφ * Math.sin(λ),\r\n    Math.sin(φ)\r\n  ];\r\n}\r\n\r\nfunction dot(a, b) {\r\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) s += a[i] * b[i];\r\n  return s;\r\n}\r\n\r\nfunction cross(a, b) {\r\n  return [\r\n    a[1] * b[2] - a[2] * b[1],\r\n    a[2] * b[0] - a[0] * b[2],\r\n    a[0] * b[1] - a[1] * b[0]\r\n  ];\r\n}\r\n\r\n// Like d3.dispatch, but for custom events abstracting native UI events. These\r\n// events have a target component (such as a brush), a target element (such as\r\n// the svg:g element containing the brush) and the standard arguments `d` (the\r\n// target element's data) and `i` (the selection index of the target element).\r\nfunction d3_eventDispatch(target) {\r\n  var i = 0,\r\n      n = arguments.length,\r\n      argumentz = [];\r\n\r\n  while (++i < n) argumentz.push(arguments[i]);\r\n\r\n  var dispatch = d3.dispatch.apply(null, argumentz);\r\n\r\n  // Creates a dispatch context for the specified `thiz` (typically, the target\r\n  // DOM element that received the source event) and `argumentz` (typically, the\r\n  // data `d` and index `i` of the target element). The returned function can be\r\n  // used to dispatch an event to any registered listeners; the function takes a\r\n  // single argument as input, being the event to dispatch. The event must have\r\n  // a \"type\" attribute which corresponds to a type registered in the\r\n  // constructor. This context will automatically populate the \"sourceEvent\" and\r\n  // \"target\" attributes of the event, as well as setting the `d3.event` global\r\n  // for the duration of the notification.\r\n  dispatch.of = function(thiz, argumentz) {\r\n    return function(e1) {\r\n      try {\r\n        var e0 =\r\n        e1.sourceEvent = d3.event;\r\n        e1.target = target;\r\n        d3.event = e1;\r\n        dispatch[e1.type].apply(thiz, argumentz);\r\n      } finally {\r\n        d3.event = e0;\r\n      }\r\n    };\r\n  };\r\n\r\n  return dispatch;\r\n}\r\n\r\n})();\r\n// https://d3js.org/d3-queue/ Version 3.0.7. Copyright 2017 Mike Bostock.\r\n(function (global, factory) {\r\n\t true ? factory(exports) :\r\n\t0;\r\n}(this, (function (exports) { 'use strict';\r\n\r\nvar slice = [].slice;\r\n\r\nvar noabort = {};\r\n\r\nfunction Queue(size) {\r\n  this._size = size;\r\n  this._call =\r\n  this._error = null;\r\n  this._tasks = [];\r\n  this._data = [];\r\n  this._waiting =\r\n  this._active =\r\n  this._ended =\r\n  this._start = 0; // inside a synchronous task callback?\r\n}\r\n\r\nQueue.prototype = queue.prototype = {\r\n  constructor: Queue,\r\n  defer: function(callback) {\r\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\r\n    if (this._call) throw new Error(\"defer after await\");\r\n    if (this._error != null) return this;\r\n    var t = slice.call(arguments, 1);\r\n    t.push(callback);\r\n    ++this._waiting, this._tasks.push(t);\r\n    poke(this);\r\n    return this;\r\n  },\r\n  abort: function() {\r\n    if (this._error == null) abort(this, new Error(\"abort\"));\r\n    return this;\r\n  },\r\n  await: function(callback) {\r\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\r\n    if (this._call) throw new Error(\"multiple await\");\r\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\r\n    maybeNotify(this);\r\n    return this;\r\n  },\r\n  awaitAll: function(callback) {\r\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\r\n    if (this._call) throw new Error(\"multiple await\");\r\n    this._call = callback;\r\n    maybeNotify(this);\r\n    return this;\r\n  }\r\n};\r\n\r\nfunction poke(q) {\r\n  if (!q._start) {\r\n    try { start(q); } // let the current task complete\r\n    catch (e) {\r\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\r\n      else if (!q._data) throw e; // await callback errored synchronously\r\n    }\r\n  }\r\n}\r\n\r\nfunction start(q) {\r\n  while (q._start = q._waiting && q._active < q._size) {\r\n    var i = q._ended + q._active,\r\n        t = q._tasks[i],\r\n        j = t.length - 1,\r\n        c = t[j];\r\n    t[j] = end(q, i);\r\n    --q._waiting, ++q._active;\r\n    t = c.apply(null, t);\r\n    if (!q._tasks[i]) continue; // task finished synchronously\r\n    q._tasks[i] = t || noabort;\r\n  }\r\n}\r\n\r\nfunction end(q, i) {\r\n  return function(e, r) {\r\n    if (!q._tasks[i]) return; // ignore multiple callbacks\r\n    --q._active, ++q._ended;\r\n    q._tasks[i] = null;\r\n    if (q._error != null) return; // ignore secondary errors\r\n    if (e != null) {\r\n      abort(q, e);\r\n    } else {\r\n      q._data[i] = r;\r\n      if (q._waiting) poke(q);\r\n      else maybeNotify(q);\r\n    }\r\n  };\r\n}\r\n\r\nfunction abort(q, e) {\r\n  var i = q._tasks.length, t;\r\n  q._error = e; // ignore active callbacks\r\n  q._data = undefined; // allow gc\r\n  q._waiting = NaN; // prevent starting\r\n\r\n  while (--i >= 0) {\r\n    if (t = q._tasks[i]) {\r\n      q._tasks[i] = null;\r\n      if (t.abort) {\r\n        try { t.abort(); }\r\n        catch (e) { /* ignore */ }\r\n      }\r\n    }\r\n  }\r\n\r\n  q._active = NaN; // allow notification\r\n  maybeNotify(q);\r\n}\r\n\r\nfunction maybeNotify(q) {\r\n  if (!q._active && q._call) {\r\n    var d = q._data;\r\n    q._data = undefined; // allow gc\r\n    q._call(q._error, d);\r\n  }\r\n}\r\n\r\nfunction queue(concurrency) {\r\n  if (concurrency == null) concurrency = Infinity;\r\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\r\n  return new Queue(concurrency);\r\n}\r\n\r\nexports.queue = queue;\r\nd3.queue = queue;\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\n})));\r\nthis.Celestial = Celestial;\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/d3-celestial/celestial.js\n");

/***/ }),

/***/ "./node_modules/d3-celestial/lib/d3.geo.projection.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-celestial/lib/d3.geo.projection.js ***!
  \************************************************************/
/***/ (function() {

eval("(function() {\r\n  d3.geo.project = function(object, projection) {\r\n    var stream = projection.stream;\r\n    if (!stream) throw new Error(\"not yet supported\");\r\n    return (object && d3_geo_projectObjectType.hasOwnProperty(object.type) ? d3_geo_projectObjectType[object.type] : d3_geo_projectGeometry)(object, stream);\r\n  };\r\n  function d3_geo_projectFeature(object, stream) {\r\n    return {\r\n      type: \"Feature\",\r\n      id: object.id,\r\n      properties: object.properties,\r\n      geometry: d3_geo_projectGeometry(object.geometry, stream)\r\n    };\r\n  }\r\n  function d3_geo_projectGeometry(geometry, stream) {\r\n    if (!geometry) return null;\r\n    if (geometry.type === \"GeometryCollection\") return {\r\n      type: \"GeometryCollection\",\r\n      geometries: object.geometries.map(function(geometry) {\r\n        return d3_geo_projectGeometry(geometry, stream);\r\n      })\r\n    };\r\n    if (!d3_geo_projectGeometryType.hasOwnProperty(geometry.type)) return null;\r\n    var sink = d3_geo_projectGeometryType[geometry.type];\r\n    d3.geo.stream(geometry, stream(sink));\r\n    return sink.result();\r\n  }\r\n  var d3_geo_projectObjectType = {\r\n    Feature: d3_geo_projectFeature,\r\n    FeatureCollection: function(object, stream) {\r\n      return {\r\n        type: \"FeatureCollection\",\r\n        features: object.features.map(function(feature) {\r\n          return d3_geo_projectFeature(feature, stream);\r\n        })\r\n      };\r\n    }\r\n  };\r\n  var d3_geo_projectPoints = [], d3_geo_projectLines = [];\r\n  var d3_geo_projectPoint = {\r\n    point: function(x, y) {\r\n      d3_geo_projectPoints.push([ x, y ]);\r\n    },\r\n    result: function() {\r\n      var result = !d3_geo_projectPoints.length ? null : d3_geo_projectPoints.length < 2 ? {\r\n        type: \"Point\",\r\n        coordinates: d3_geo_projectPoints[0]\r\n      } : {\r\n        type: \"MultiPoint\",\r\n        coordinates: d3_geo_projectPoints\r\n      };\r\n      d3_geo_projectPoints = [];\r\n      return result;\r\n    }\r\n  };\r\n  var d3_geo_projectLine = {\r\n    lineStart: d3_geo_projectNoop,\r\n    point: function(x, y) {\r\n      d3_geo_projectPoints.push([ x, y ]);\r\n    },\r\n    lineEnd: function() {\r\n      if (d3_geo_projectPoints.length) d3_geo_projectLines.push(d3_geo_projectPoints), \r\n      d3_geo_projectPoints = [];\r\n    },\r\n    result: function() {\r\n      var result = !d3_geo_projectLines.length ? null : d3_geo_projectLines.length < 2 ? {\r\n        type: \"LineString\",\r\n        coordinates: d3_geo_projectLines[0]\r\n      } : {\r\n        type: \"MultiLineString\",\r\n        coordinates: d3_geo_projectLines\r\n      };\r\n      d3_geo_projectLines = [];\r\n      return result;\r\n    }\r\n  };\r\n  var d3_geo_projectPolygon = {\r\n    polygonStart: d3_geo_projectNoop,\r\n    lineStart: d3_geo_projectNoop,\r\n    point: function(x, y) {\r\n      d3_geo_projectPoints.push([ x, y ]);\r\n    },\r\n    lineEnd: function() {\r\n      var n = d3_geo_projectPoints.length;\r\n      if (n) {\r\n        do d3_geo_projectPoints.push(d3_geo_projectPoints[0].slice()); while (++n < 4);\r\n        d3_geo_projectLines.push(d3_geo_projectPoints), d3_geo_projectPoints = [];\r\n      }\r\n    },\r\n    polygonEnd: d3_geo_projectNoop,\r\n    result: function() {\r\n      if (!d3_geo_projectLines.length) return null;\r\n      var polygons = [], holes = [];\r\n      d3_geo_projectLines.forEach(function(ring) {\r\n        if (d3_geo_projectClockwise(ring)) polygons.push([ ring ]); else holes.push(ring);\r\n      });\r\n      holes.forEach(function(hole) {\r\n        var point = hole[0];\r\n        polygons.some(function(polygon) {\r\n          if (d3_geo_projectContains(polygon[0], point)) {\r\n            polygon.push(hole);\r\n            return true;\r\n          }\r\n        }) || polygons.push([ hole ]);\r\n      });\r\n      d3_geo_projectLines = [];\r\n      return !polygons.length ? null : polygons.length > 1 ? {\r\n        type: \"MultiPolygon\",\r\n        coordinates: polygons\r\n      } : {\r\n        type: \"Polygon\",\r\n        coordinates: polygons[0]\r\n      };\r\n    }\r\n  };\r\n  var d3_geo_projectGeometryType = {\r\n    Point: d3_geo_projectPoint,\r\n    MultiPoint: d3_geo_projectPoint,\r\n    LineString: d3_geo_projectLine,\r\n    MultiLineString: d3_geo_projectLine,\r\n    Polygon: d3_geo_projectPolygon,\r\n    MultiPolygon: d3_geo_projectPolygon,\r\n    Sphere: d3_geo_projectPolygon\r\n  };\r\n  function d3_geo_projectNoop() {}\r\n  function d3_geo_projectClockwise(ring) {\r\n    if ((n = ring.length) < 4) return false;\r\n    var i = 0, n, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\r\n    while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\r\n    return area <= 0;\r\n  }\r\n  function d3_geo_projectContains(ring, point) {\r\n    var x = point[0], y = point[1], contains = false;\r\n    for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\r\n      var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\r\n      if (yi > y ^ yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = !contains;\r\n    }\r\n    return contains;\r\n  }\r\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, halfπ = π / 2, sqrtπ = Math.sqrt(π), radians = π / 180, degrees = 180 / π;\r\n  function sinci(x) {\r\n    return x ? x / Math.sin(x) : 1;\r\n  }\r\n  function sgn(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\r\n  }\r\n  function asin(x) {\r\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\r\n  }\r\n  function acos(x) {\r\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\r\n  }\r\n  function asqrt(x) {\r\n    return x > 0 ? Math.sqrt(x) : 0;\r\n  }\r\n  var projection = d3.geo.projection, projectionMutator = d3.geo.projectionMutator;\r\n  d3.geo.interrupt = function(project) {\r\n    var lobes = [ [ [ [ -π, 0 ], [ 0, halfπ ], [ π, 0 ] ] ], [ [ [ -π, 0 ], [ 0, -halfπ ], [ π, 0 ] ] ] ];\r\n    var bounds;\r\n    function forward(λ, φ) {\r\n      var sign = φ < 0 ? -1 : +1, hemilobes = lobes[+(φ < 0)];\r\n      for (var i = 0, n = hemilobes.length - 1; i < n && λ > hemilobes[i][2][0]; ++i) ;\r\n      var coordinates = project(λ - hemilobes[i][1][0], φ);\r\n      coordinates[0] += project(hemilobes[i][1][0], sign * φ > sign * hemilobes[i][0][1] ? hemilobes[i][0][1] : φ)[0];\r\n      return coordinates;\r\n    }\r\n    function reset() {\r\n      bounds = lobes.map(function(hemilobes) {\r\n        return hemilobes.map(function(lobe) {\r\n          var x0 = project(lobe[0][0], lobe[0][1])[0], x1 = project(lobe[2][0], lobe[2][1])[0], y0 = project(lobe[1][0], lobe[0][1])[1], y1 = project(lobe[1][0], lobe[1][1])[1], t;\r\n          if (y0 > y1) t = y0, y0 = y1, y1 = t;\r\n          return [ [ x0, y0 ], [ x1, y1 ] ];\r\n        });\r\n      });\r\n    }\r\n    if (project.invert) forward.invert = function(x, y) {\r\n      var hemibounds = bounds[+(y < 0)], hemilobes = lobes[+(y < 0)];\r\n      for (var i = 0, n = hemibounds.length; i < n; ++i) {\r\n        var b = hemibounds[i];\r\n        if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {\r\n          var coordinates = project.invert(x - project(hemilobes[i][1][0], 0)[0], y);\r\n          coordinates[0] += hemilobes[i][1][0];\r\n          return pointEqual(forward(coordinates[0], coordinates[1]), [ x, y ]) ? coordinates : null;\r\n        }\r\n      }\r\n    };\r\n    var projection = d3.geo.projection(forward), stream_ = projection.stream;\r\n    projection.stream = function(stream) {\r\n      var rotate = projection.rotate(), rotateStream = stream_(stream), sphereStream = (projection.rotate([ 0, 0 ]), \r\n      stream_(stream));\r\n      projection.rotate(rotate);\r\n      rotateStream.sphere = function() {\r\n        d3.geo.stream(sphere(), sphereStream);\r\n      };\r\n      return rotateStream;\r\n    };\r\n    projection.lobes = function(_) {\r\n      if (!arguments.length) return lobes.map(function(lobes) {\r\n        return lobes.map(function(lobe) {\r\n          return [ [ lobe[0][0] * 180 / π, lobe[0][1] * 180 / π ], [ lobe[1][0] * 180 / π, lobe[1][1] * 180 / π ], [ lobe[2][0] * 180 / π, lobe[2][1] * 180 / π ] ];\r\n        });\r\n      });\r\n      lobes = _.map(function(lobes) {\r\n        return lobes.map(function(lobe) {\r\n          return [ [ lobe[0][0] * π / 180, lobe[0][1] * π / 180 ], [ lobe[1][0] * π / 180, lobe[1][1] * π / 180 ], [ lobe[2][0] * π / 180, lobe[2][1] * π / 180 ] ];\r\n        });\r\n      });\r\n      reset();\r\n      return projection;\r\n    };\r\n    function sphere() {\r\n      var ε = 1e-6, coordinates = [];\r\n      for (var i = 0, n = lobes[0].length; i < n; ++i) {\r\n        var lobe = lobes[0][i], λ0 = lobe[0][0] * 180 / π, φ0 = lobe[0][1] * 180 / π, φ1 = lobe[1][1] * 180 / π, λ2 = lobe[2][0] * 180 / π, φ2 = lobe[2][1] * 180 / π;\r\n        coordinates.push(resample([ [ λ0 + ε, φ0 + ε ], [ λ0 + ε, φ1 - ε ], [ λ2 - ε, φ1 - ε ], [ λ2 - ε, φ2 + ε ] ], 30));\r\n      }\r\n      for (var i = lobes[1].length - 1; i >= 0; --i) {\r\n        var lobe = lobes[1][i], λ0 = lobe[0][0] * 180 / π, φ0 = lobe[0][1] * 180 / π, φ1 = lobe[1][1] * 180 / π, λ2 = lobe[2][0] * 180 / π, φ2 = lobe[2][1] * 180 / π;\r\n        coordinates.push(resample([ [ λ2 - ε, φ2 - ε ], [ λ2 - ε, φ1 + ε ], [ λ0 + ε, φ1 + ε ], [ λ0 + ε, φ0 - ε ] ], 30));\r\n      }\r\n      return {\r\n        type: \"Polygon\",\r\n        coordinates: [ d3.merge(coordinates) ]\r\n      };\r\n    }\r\n    function resample(coordinates, m) {\r\n      var i = -1, n = coordinates.length, p0 = coordinates[0], p1, dx, dy, resampled = [];\r\n      while (++i < n) {\r\n        p1 = coordinates[i];\r\n        dx = (p1[0] - p0[0]) / m;\r\n        dy = (p1[1] - p0[1]) / m;\r\n        for (var j = 0; j < m; ++j) resampled.push([ p0[0] + j * dx, p0[1] + j * dy ]);\r\n        p0 = p1;\r\n      }\r\n      resampled.push(p1);\r\n      return resampled;\r\n    }\r\n    function pointEqual(a, b) {\r\n      return Math.abs(a[0] - b[0]) < ε && Math.abs(a[1] - b[1]) < ε;\r\n    }\r\n    return projection;\r\n  };\r\n  function airy(β) {\r\n    var tanβ_2 = Math.tan(.5 * β), B = 2 * Math.log(Math.cos(.5 * β)) / (tanβ_2 * tanβ_2);\r\n    function forward(λ, φ) {\r\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), sinφ = Math.sin(φ), cosz = cosφ * cosλ, K = -((1 - cosz ? Math.log(.5 * (1 + cosz)) / (1 - cosz) : -.5) + B / (1 + cosz));\r\n      return [ K * cosφ * Math.sin(λ), K * sinφ ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ = Math.sqrt(x * x + y * y), z = β * -.5, i = 50, δ;\r\n      if (!ρ) return [ 0, 0 ];\r\n      do {\r\n        var z_2 = .5 * z, cosz_2 = Math.cos(z_2), sinz_2 = Math.sin(z_2), tanz_2 = Math.tan(z_2), lnsecz_2 = Math.log(1 / cosz_2);\r\n        z -= δ = (2 / tanz_2 * lnsecz_2 - B * tanz_2 - ρ) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - B / (2 * cosz_2 * cosz_2));\r\n      } while (Math.abs(δ) > ε && --i > 0);\r\n      var sinz = Math.sin(z);\r\n      return [ Math.atan2(x * sinz, ρ * Math.cos(z)), asin(y * sinz / ρ) ];\r\n    };\r\n    return forward;\r\n  }\r\n  function airyProjection() {\r\n    var β = halfπ, m = projectionMutator(airy), p = m(β);\r\n    p.radius = function(_) {\r\n      if (!arguments.length) return β / π * 180;\r\n      return m(β = _ * π / 180);\r\n    };\r\n    return p;\r\n  }\r\n  (d3.geo.airy = airyProjection).raw = airy;\r\n  function aitoff(λ, φ) {\r\n    var cosφ = Math.cos(φ), sinciα = sinci(acos(cosφ * Math.cos(λ /= 2)));\r\n    return [ 2 * cosφ * Math.sin(λ) * sinciα, Math.sin(φ) * sinciα ];\r\n  }\r\n  aitoff.invert = function(x, y) {\r\n    if (x * x + 4 * y * y > π * π + ε) return;\r\n    var λ = x, φ = y, i = 25;\r\n    do {\r\n      var sinλ = Math.sin(λ), sinλ_2 = Math.sin(λ / 2), cosλ_2 = Math.cos(λ / 2), sinφ = Math.sin(φ), cosφ = Math.cos(φ), sin_2φ = Math.sin(2 * φ), sin2φ = sinφ * sinφ, cos2φ = cosφ * cosφ, sin2λ_2 = sinλ_2 * sinλ_2, C = 1 - cos2φ * cosλ_2 * cosλ_2, E = C ? acos(cosφ * cosλ_2) * Math.sqrt(F = 1 / C) : F = 0, F, fx = 2 * E * cosφ * sinλ_2 - x, fy = E * sinφ - y, δxδλ = F * (cos2φ * sin2λ_2 + E * cosφ * cosλ_2 * sin2φ), δxδφ = F * (.5 * sinλ * sin_2φ - E * 2 * sinφ * sinλ_2), δyδλ = F * .25 * (sin_2φ * sinλ_2 - E * sinφ * cos2φ * sinλ), δyδφ = F * (sin2φ * cosλ_2 + E * sin2λ_2 * cosφ), denominator = δxδφ * δyδλ - δyδφ * δxδλ;\r\n      if (!denominator) break;\r\n      var δλ = (fy * δxδφ - fx * δyδφ) / denominator, δφ = (fx * δyδλ - fy * δxδλ) / denominator;\r\n      λ -= δλ, φ -= δφ;\r\n    } while ((Math.abs(δλ) > ε || Math.abs(δφ) > ε) && --i > 0);\r\n    return [ λ, φ ];\r\n  };\r\n  (d3.geo.aitoff = function() {\r\n    return projection(aitoff);\r\n  }).raw = aitoff;\r\n  function armadillo(φ0) {\r\n    var sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sφ0 = φ0 > 0 ? 1 : -1, tanφ0 = Math.tan(sφ0 * φ0), k = (1 + sinφ0 - cosφ0) / 2;\r\n    function forward(λ, φ) {\r\n      var cosφ = Math.cos(φ), cosλ = Math.cos(λ /= 2);\r\n      return [ (1 + cosφ) * Math.sin(λ), (sφ0 * φ > -Math.atan2(cosλ, tanφ0) - .001 ? 0 : -sφ0 * 10) + k + Math.sin(φ) * cosφ0 - (1 + cosφ) * sinφ0 * cosλ ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var λ = 0, φ = 0, i = 50;\r\n      do {\r\n        var cosλ = Math.cos(λ), sinλ = Math.sin(λ), cosφ = Math.cos(φ), sinφ = Math.sin(φ), A = 1 + cosφ, fx = A * sinλ - x, fy = k + sinφ * cosφ0 - A * sinφ0 * cosλ - y, δxδλ = .5 * A * cosλ, δxδφ = -sinλ * sinφ, δyδλ = .5 * sinφ0 * A * sinλ, δyδφ = cosφ0 * cosφ + sinφ0 * cosλ * sinφ, denominator = δxδφ * δyδλ - δyδφ * δxδλ, δλ = .5 * (fy * δxδφ - fx * δyδφ) / denominator, δφ = (fx * δyδλ - fy * δxδλ) / denominator;\r\n        λ -= δλ, φ -= δφ;\r\n      } while ((Math.abs(δλ) > ε || Math.abs(δφ) > ε) && --i > 0);\r\n      return sφ0 * φ > -Math.atan2(Math.cos(λ), tanφ0) - .001 ? [ λ * 2, φ ] : null;\r\n    };\r\n    return forward;\r\n  }\r\n  function armadilloProjection() {\r\n    var φ0 = π / 9, sφ0 = φ0 > 0 ? 1 : -1, tanφ0 = Math.tan(sφ0 * φ0), m = projectionMutator(armadillo), p = m(φ0), stream_ = p.stream;\r\n    p.parallel = function(_) {\r\n      if (!arguments.length) return φ0 / π * 180;\r\n      tanφ0 = Math.tan((sφ0 = (φ0 = _ * π / 180) > 0 ? 1 : -1) * φ0);\r\n      return m(φ0);\r\n    };\r\n    p.stream = function(stream) {\r\n      var rotate = p.rotate(), rotateStream = stream_(stream), sphereStream = (p.rotate([ 0, 0 ]), \r\n      stream_(stream));\r\n      p.rotate(rotate);\r\n      rotateStream.sphere = function() {\r\n        sphereStream.polygonStart(), sphereStream.lineStart();\r\n        for (var λ = sφ0 * -180; sφ0 * λ < 180; λ += sφ0 * 90) sphereStream.point(λ, sφ0 * 90);\r\n        while (sφ0 * (λ -= φ0) >= -180) {\r\n          sphereStream.point(λ, sφ0 * -Math.atan2(Math.cos(λ * radians / 2), tanφ0) * degrees);\r\n        }\r\n        sphereStream.lineEnd(), sphereStream.polygonEnd();\r\n      };\r\n      return rotateStream;\r\n    };\r\n    return p;\r\n  }\r\n  (d3.geo.armadillo = armadilloProjection).raw = armadillo;\r\n  function tanh(x) {\r\n    x = Math.exp(2 * x);\r\n    return (x - 1) / (x + 1);\r\n  }\r\n  function sinh(x) {\r\n    return .5 * (Math.exp(x) - Math.exp(-x));\r\n  }\r\n  function cosh(x) {\r\n    return .5 * (Math.exp(x) + Math.exp(-x));\r\n  }\r\n  function arsinh(x) {\r\n    return Math.log(x + asqrt(x * x + 1));\r\n  }\r\n  function arcosh(x) {\r\n    return Math.log(x + asqrt(x * x - 1));\r\n  }\r\n  function august(λ, φ) {\r\n    var tanφ = Math.tan(φ / 2), k = asqrt(1 - tanφ * tanφ), c = 1 + k * Math.cos(λ /= 2), x = Math.sin(λ) * k / c, y = tanφ / c, x2 = x * x, y2 = y * y;\r\n    return [ 4 / 3 * x * (3 + x2 - 3 * y2), 4 / 3 * y * (3 + 3 * x2 - y2) ];\r\n  }\r\n  august.invert = function(x, y) {\r\n    x *= 3 / 8, y *= 3 / 8;\r\n    if (!x && Math.abs(y) > 1) return null;\r\n    var x2 = x * x, y2 = y * y, s = 1 + x2 + y2, sin3η = Math.sqrt(.5 * (s - Math.sqrt(s * s - 4 * y * y))), η = asin(sin3η) / 3, ξ = sin3η ? arcosh(Math.abs(y / sin3η)) / 3 : arsinh(Math.abs(x)) / 3, cosη = Math.cos(η), coshξ = cosh(ξ), d = coshξ * coshξ - cosη * cosη;\r\n    return [ sgn(x) * 2 * Math.atan2(sinh(ξ) * cosη, .25 - d), sgn(y) * 2 * Math.atan2(coshξ * Math.sin(η), .25 + d) ];\r\n  };\r\n  (d3.geo.august = function() {\r\n    return projection(august);\r\n  }).raw = august;\r\n  var bakerφ = Math.log(1 + Math.SQRT2);\r\n  function baker(λ, φ) {\r\n    var φ0 = Math.abs(φ);\r\n    return φ0 < π / 4 ? [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ] : [ λ * Math.cos(φ0) * (2 * Math.SQRT2 - 1 / Math.sin(φ0)), sgn(φ) * (2 * Math.SQRT2 * (φ0 - π / 4) - Math.log(Math.tan(φ0 / 2))) ];\r\n  }\r\n  baker.invert = function(x, y) {\r\n    if ((y0 = Math.abs(y)) < bakerφ) return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\r\n    var sqrt8 = Math.sqrt(8), φ = π / 4, i = 25, δ, y0;\r\n    do {\r\n      var cosφ_2 = Math.cos(φ / 2), tanφ_2 = Math.tan(φ / 2);\r\n      φ -= δ = (sqrt8 * (φ - π / 4) - Math.log(tanφ_2) - y0) / (sqrt8 - .5 * cosφ_2 * cosφ_2 / tanφ_2);\r\n    } while (Math.abs(δ) > ε2 && --i > 0);\r\n    return [ x / (Math.cos(φ) * (sqrt8 - 1 / Math.sin(φ))), sgn(y) * φ ];\r\n  };\r\n  (d3.geo.baker = function() {\r\n    return projection(baker);\r\n  }).raw = baker;\r\n  var berghausAzimuthalEquidistant = d3.geo.azimuthalEquidistant.raw;\r\n  function berghaus(n) {\r\n    var k = 2 * π / n;\r\n    function forward(λ, φ) {\r\n      var p = berghausAzimuthalEquidistant(λ, φ);\r\n      if (Math.abs(λ) > halfπ) {\r\n        var θ = Math.atan2(p[1], p[0]), r = Math.sqrt(p[0] * p[0] + p[1] * p[1]), θ0 = k * Math.round((θ - halfπ) / k) + halfπ, α = Math.atan2(Math.sin(θ -= θ0), 2 - Math.cos(θ));\r\n        θ = θ0 + asin(π / r * Math.sin(α)) - α;\r\n        p[0] = r * Math.cos(θ);\r\n        p[1] = r * Math.sin(θ);\r\n      }\r\n      return p;\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var r = Math.sqrt(x * x + y * y);\r\n      if (r > halfπ) {\r\n        var θ = Math.atan2(y, x), θ0 = k * Math.round((θ - halfπ) / k) + halfπ, s = θ > θ0 ? -1 : 1, A = r * Math.cos(θ0 - θ), cotα = 1 / Math.tan(s * Math.acos((A - π) / Math.sqrt(π * (π - 2 * A) + r * r)));\r\n        θ = θ0 + 2 * Math.atan((cotα + s * Math.sqrt(cotα * cotα - 3)) / 3);\r\n        x = r * Math.cos(θ), y = r * Math.sin(θ);\r\n      }\r\n      return berghausAzimuthalEquidistant.invert(x, y);\r\n    };\r\n    return forward;\r\n  }\r\n  function berghausProjection() {\r\n    var n = 5, m = projectionMutator(berghaus), p = m(n), stream_ = p.stream, ε = .01, cr = -Math.cos(ε * radians), sr = Math.sin(ε * radians);\r\n    p.lobes = function(_) {\r\n      if (!arguments.length) return n;\r\n      return m(n = +_);\r\n    };\r\n    p.stream = function(stream) {\r\n      var rotate = p.rotate(), rotateStream = stream_(stream), sphereStream = (p.rotate([ 0, 0 ]), \r\n      stream_(stream));\r\n      p.rotate(rotate);\r\n      rotateStream.sphere = function() {\r\n        sphereStream.polygonStart(), sphereStream.lineStart();\r\n        for (var i = 0, δ = 360 / n, δ0 = 2 * π / n, φ = 90 - 180 / n, φ0 = halfπ; i < n; ++i, \r\n        φ -= δ, φ0 -= δ0) {\r\n          sphereStream.point(Math.atan2(sr * Math.cos(φ0), cr) * degrees, asin(sr * Math.sin(φ0)) * degrees);\r\n          if (φ < -90) {\r\n            sphereStream.point(-90, -180 - φ - ε);\r\n            sphereStream.point(-90, -180 - φ + ε);\r\n          } else {\r\n            sphereStream.point(90, φ + ε);\r\n            sphereStream.point(90, φ - ε);\r\n          }\r\n        }\r\n        sphereStream.lineEnd(), sphereStream.polygonEnd();\r\n      };\r\n      return rotateStream;\r\n    };\r\n    return p;\r\n  }\r\n  (d3.geo.berghaus = berghausProjection).raw = berghaus;\r\n  function mollweideBromleyθ(Cp) {\r\n    return function(θ) {\r\n      var Cpsinθ = Cp * Math.sin(θ), i = 30, δ;\r\n      do θ -= δ = (θ + Math.sin(θ) - Cpsinθ) / (1 + Math.cos(θ)); while (Math.abs(δ) > ε && --i > 0);\r\n      return θ / 2;\r\n    };\r\n  }\r\n  function mollweideBromley(Cx, Cy, Cp) {\r\n    var θ = mollweideBromleyθ(Cp);\r\n    function forward(λ, φ) {\r\n      return [ Cx * λ * Math.cos(φ = θ(φ)), Cy * Math.sin(φ) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var θ = asin(y / Cy);\r\n      return [ x / (Cx * Math.cos(θ)), asin((2 * θ + Math.sin(2 * θ)) / Cp) ];\r\n    };\r\n    return forward;\r\n  }\r\n  var mollweideθ = mollweideBromleyθ(π), mollweide = mollweideBromley(Math.SQRT2 / halfπ, Math.SQRT2, π);\r\n  (d3.geo.mollweide = function() {\r\n    return projection(mollweide);\r\n  }).raw = mollweide;\r\n  function boggs(λ, φ) {\r\n    var k = 2.00276, θ = mollweideθ(φ);\r\n    return [ k * λ / (1 / Math.cos(φ) + 1.11072 / Math.cos(θ)), (φ + Math.SQRT2 * Math.sin(θ)) / k ];\r\n  }\r\n  boggs.invert = function(x, y) {\r\n    var k = 2.00276, ky = k * y, θ = y < 0 ? -π / 4 : π / 4, i = 25, δ, φ;\r\n    do {\r\n      φ = ky - Math.SQRT2 * Math.sin(θ);\r\n      θ -= δ = (Math.sin(2 * θ) + 2 * θ - π * Math.sin(φ)) / (2 * Math.cos(2 * θ) + 2 + π * Math.cos(φ) * Math.SQRT2 * Math.cos(θ));\r\n    } while (Math.abs(δ) > ε && --i > 0);\r\n    φ = ky - Math.SQRT2 * Math.sin(θ);\r\n    return [ x * (1 / Math.cos(φ) + 1.11072 / Math.cos(θ)) / k, φ ];\r\n  };\r\n  (d3.geo.boggs = function() {\r\n    return projection(boggs);\r\n  }).raw = boggs;\r\n  function parallel1Projection(projectAt) {\r\n    var φ0 = 0, m = projectionMutator(projectAt), p = m(φ0);\r\n    p.parallel = function(_) {\r\n      if (!arguments.length) return φ0 / π * 180;\r\n      return m(φ0 = _ * π / 180);\r\n    };\r\n    return p;\r\n  }\r\n  function sinusoidal(λ, φ) {\r\n    return [ λ * Math.cos(φ), φ ];\r\n  }\r\n  sinusoidal.invert = function(x, y) {\r\n    return [ x / Math.cos(y), y ];\r\n  };\r\n  (d3.geo.sinusoidal = function() {\r\n    return projection(sinusoidal);\r\n  }).raw = sinusoidal;\r\n  function bonne(φ0) {\r\n    if (!φ0) return sinusoidal;\r\n    var cotφ0 = 1 / Math.tan(φ0);\r\n    function forward(λ, φ) {\r\n      var ρ = cotφ0 + φ0 - φ, E = ρ ? λ * Math.cos(φ) / ρ : ρ;\r\n      return [ ρ * Math.sin(E), cotφ0 - ρ * Math.cos(E) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ = Math.sqrt(x * x + (y = cotφ0 - y) * y), φ = cotφ0 + φ0 - ρ;\r\n      return [ ρ / Math.cos(φ) * Math.atan2(x, y), φ ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.bonne = function() {\r\n    return parallel1Projection(bonne).parallel(45);\r\n  }).raw = bonne;\r\n  function bottomleyRaw(ψ) {\r\n    var sinψ = Math.sin(ψ);\r\n    function forward(λ, φ) {\r\n      var ρ = halfπ - φ, η = ρ ? λ * sinψ * Math.sin(ρ) / ρ : ρ;\r\n      return [ ρ * Math.sin(η) / sinψ, halfπ - ρ * Math.cos(η) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var x1 = x * sinψ, y1 = halfπ - y, ρ = Math.sqrt(x1 * x1 + y1 * y1), η = Math.atan2(x1, y1);\r\n      return [ (ρ ? ρ / Math.sin(ρ) : 1) * η / sinψ, halfπ - ρ ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.bottomley = function() {\r\n    var ψ = π / 6, mutate = d3.geo.projectionMutator(bottomleyRaw), projection = mutate(ψ);\r\n    projection.variant = function(_) {\r\n      return arguments.length ? mutate(ψ = +_) : ψ;\r\n    };\r\n    return projection;\r\n  }).raw = bottomleyRaw;\r\n  var bromley = mollweideBromley(1, 4 / π, π);\r\n  (d3.geo.bromley = function() {\r\n    return projection(bromley);\r\n  }).raw = bromley;\r\n  function chamberlin(points) {\r\n    points = points.map(function(p) {\r\n      return [ p[0], p[1], Math.sin(p[1]), Math.cos(p[1]) ];\r\n    });\r\n    for (var a = points[2], b, i = 0; i < 3; ++i, a = b) {\r\n      b = points[i];\r\n      a.v = chamberlinDistanceAzimuth(b[1] - a[1], a[3], a[2], b[3], b[2], b[0] - a[0]);\r\n      a.point = [ 0, 0 ];\r\n    }\r\n    var β0 = chamberlinAngle(points[0].v[0], points[2].v[0], points[1].v[0]), β1 = chamberlinAngle(points[0].v[0], points[1].v[0], points[2].v[0]), β2 = π - β0;\r\n    points[2].point[1] = 0;\r\n    points[0].point[0] = -(points[1].point[0] = .5 * points[0].v[0]);\r\n    var mean = [ points[2].point[0] = points[0].point[0] + points[2].v[0] * Math.cos(β0), 2 * (points[0].point[1] = points[1].point[1] = points[2].v[0] * Math.sin(β0)) ];\r\n    function forward(λ, φ) {\r\n      var sinφ = Math.sin(φ), cosφ = Math.cos(φ), v = new Array(3);\r\n      for (var i = 0; i < 3; ++i) {\r\n        var p = points[i];\r\n        v[i] = chamberlinDistanceAzimuth(φ - p[1], p[3], p[2], cosφ, sinφ, λ - p[0]);\r\n        if (!v[i][0]) return p.point;\r\n        v[i][1] = chamberlinLongitude(v[i][1] - p.v[1]);\r\n      }\r\n      var point = mean.slice();\r\n      for (var i = 0; i < 3; ++i) {\r\n        var j = i == 2 ? 0 : i + 1;\r\n        var a = chamberlinAngle(points[i].v[0], v[i][0], v[j][0]);\r\n        if (v[i][1] < 0) a = -a;\r\n        if (!i) {\r\n          point[0] += v[i][0] * Math.cos(a);\r\n          point[1] -= v[i][0] * Math.sin(a);\r\n        } else if (i == 1) {\r\n          a = β1 - a;\r\n          point[0] -= v[i][0] * Math.cos(a);\r\n          point[1] -= v[i][0] * Math.sin(a);\r\n        } else {\r\n          a = β2 - a;\r\n          point[0] += v[i][0] * Math.cos(a);\r\n          point[1] += v[i][0] * Math.sin(a);\r\n        }\r\n      }\r\n      point[0] /= 3, point[1] /= 3;\r\n      return point;\r\n    }\r\n    return forward;\r\n  }\r\n  function chamberlinProjection() {\r\n    var points = [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ], m = projectionMutator(chamberlin), p = m(points), rotate = p.rotate;\r\n    delete p.rotate;\r\n    p.points = function(_) {\r\n      if (!arguments.length) return points;\r\n      points = _;\r\n      var origin = d3.geo.centroid({\r\n        type: \"MultiPoint\",\r\n        coordinates: points\r\n      }), r = [ -origin[0], -origin[1] ];\r\n      rotate.call(p, r);\r\n      return m(points.map(d3.geo.rotation(r)).map(chamberlinRadians));\r\n    };\r\n    return p.points([ [ -150, 55 ], [ -35, 55 ], [ -92.5, 10 ] ]);\r\n  }\r\n  function chamberlinDistanceAzimuth(dφ, c1, s1, c2, s2, dλ) {\r\n    var cosdλ = Math.cos(dλ), r;\r\n    if (Math.abs(dφ) > 1 || Math.abs(dλ) > 1) {\r\n      r = acos(s1 * s2 + c1 * c2 * cosdλ);\r\n    } else {\r\n      var sindφ = Math.sin(.5 * dφ), sindλ = Math.sin(.5 * dλ);\r\n      r = 2 * asin(Math.sqrt(sindφ * sindφ + c1 * c2 * sindλ * sindλ));\r\n    }\r\n    if (Math.abs(r) > ε) {\r\n      return [ r, Math.atan2(c2 * Math.sin(dλ), c1 * s2 - s1 * c2 * cosdλ) ];\r\n    }\r\n    return [ 0, 0 ];\r\n  }\r\n  function chamberlinAngle(b, c, a) {\r\n    return acos(.5 * (b * b + c * c - a * a) / (b * c));\r\n  }\r\n  function chamberlinLongitude(λ) {\r\n    return λ - 2 * π * Math.floor((λ + π) / (2 * π));\r\n  }\r\n  function chamberlinRadians(point) {\r\n    return [ point[0] * radians, point[1] * radians ];\r\n  }\r\n  (d3.geo.chamberlin = chamberlinProjection).raw = chamberlin;\r\n  function collignon(λ, φ) {\r\n    var α = asqrt(1 - Math.sin(φ));\r\n    return [ 2 / sqrtπ * λ * α, sqrtπ * (1 - α) ];\r\n  }\r\n  collignon.invert = function(x, y) {\r\n    var λ = (λ = y / sqrtπ - 1) * λ;\r\n    return [ λ > 0 ? x * Math.sqrt(π / λ) / 2 : 0, asin(1 - λ) ];\r\n  };\r\n  (d3.geo.collignon = function() {\r\n    return projection(collignon);\r\n  }).raw = collignon;\r\n  function craig(φ0) {\r\n    var tanφ0 = Math.tan(φ0);\r\n    function forward(λ, φ) {\r\n      return [ λ, (λ ? λ / Math.sin(λ) : 1) * (Math.sin(φ) * Math.cos(λ) - tanφ0 * Math.cos(φ)) ];\r\n    }\r\n    forward.invert = tanφ0 ? function(x, y) {\r\n      if (x) y *= Math.sin(x) / x;\r\n      var cosλ = Math.cos(x);\r\n      return [ x, 2 * Math.atan2(Math.sqrt(cosλ * cosλ + tanφ0 * tanφ0 - y * y) - cosλ, tanφ0 - y) ];\r\n    } : function(x, y) {\r\n      return [ x, asin(x ? y * Math.tan(x) / x : y) ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.craig = function() {\r\n    return parallel1Projection(craig);\r\n  }).raw = craig;\r\n  function craster(λ, φ) {\r\n    var sqrt3 = Math.sqrt(3);\r\n    return [ sqrt3 * λ * (2 * Math.cos(2 * φ / 3) - 1) / sqrtπ, sqrt3 * sqrtπ * Math.sin(φ / 3) ];\r\n  }\r\n  craster.invert = function(x, y) {\r\n    var sqrt3 = Math.sqrt(3), φ = 3 * asin(y / (sqrt3 * sqrtπ));\r\n    return [ sqrtπ * x / (sqrt3 * (2 * Math.cos(2 * φ / 3) - 1)), φ ];\r\n  };\r\n  (d3.geo.craster = function() {\r\n    return projection(craster);\r\n  }).raw = craster;\r\n  function cylindricalEqualArea(φ0) {\r\n    var cosφ0 = Math.cos(φ0);\r\n    function forward(λ, φ) {\r\n      return [ λ * cosφ0, Math.sin(φ) / cosφ0 ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      return [ x / cosφ0, asin(y * cosφ0) ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.cylindricalEqualArea = function() {\r\n    return parallel1Projection(cylindricalEqualArea);\r\n  }).raw = cylindricalEqualArea;\r\n  function cylindricalStereographic(φ0) {\r\n    var cosφ0 = Math.cos(φ0);\r\n    function forward(λ, φ) {\r\n      return [ λ * cosφ0, (1 + cosφ0) * Math.tan(φ * .5) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      return [ x / cosφ0, Math.atan(y / (1 + cosφ0)) * 2 ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.cylindricalStereographic = function() {\r\n    return parallel1Projection(cylindricalStereographic);\r\n  }).raw = cylindricalStereographic;\r\n  function eckert1(λ, φ) {\r\n    var α = Math.sqrt(8 / (3 * π));\r\n    return [ α * λ * (1 - Math.abs(φ) / π), α * φ ];\r\n  }\r\n  eckert1.invert = function(x, y) {\r\n    var α = Math.sqrt(8 / (3 * π)), φ = y / α;\r\n    return [ x / (α * (1 - Math.abs(φ) / π)), φ ];\r\n  };\r\n  (d3.geo.eckert1 = function() {\r\n    return projection(eckert1);\r\n  }).raw = eckert1;\r\n  function eckert2(λ, φ) {\r\n    var α = Math.sqrt(4 - 3 * Math.sin(Math.abs(φ)));\r\n    return [ 2 / Math.sqrt(6 * π) * λ * α, sgn(φ) * Math.sqrt(2 * π / 3) * (2 - α) ];\r\n  }\r\n  eckert2.invert = function(x, y) {\r\n    var α = 2 - Math.abs(y) / Math.sqrt(2 * π / 3);\r\n    return [ x * Math.sqrt(6 * π) / (2 * α), sgn(y) * asin((4 - α * α) / 3) ];\r\n  };\r\n  (d3.geo.eckert2 = function() {\r\n    return projection(eckert2);\r\n  }).raw = eckert2;\r\n  function eckert3(λ, φ) {\r\n    var k = Math.sqrt(π * (4 + π));\r\n    return [ 2 / k * λ * (1 + Math.sqrt(1 - 4 * φ * φ / (π * π))), 4 / k * φ ];\r\n  }\r\n  eckert3.invert = function(x, y) {\r\n    var k = Math.sqrt(π * (4 + π)) / 2;\r\n    return [ x * k / (1 + asqrt(1 - y * y * (4 + π) / (4 * π))), y * k / 2 ];\r\n  };\r\n  (d3.geo.eckert3 = function() {\r\n    return projection(eckert3);\r\n  }).raw = eckert3;\r\n  function eckert4(λ, φ) {\r\n    var k = (2 + halfπ) * Math.sin(φ);\r\n    φ /= 2;\r\n    for (var i = 0, δ = Infinity; i < 10 && Math.abs(δ) > ε; i++) {\r\n      var cosφ = Math.cos(φ);\r\n      φ -= δ = (φ + Math.sin(φ) * (cosφ + 2) - k) / (2 * cosφ * (1 + cosφ));\r\n    }\r\n    return [ 2 / Math.sqrt(π * (4 + π)) * λ * (1 + Math.cos(φ)), 2 * Math.sqrt(π / (4 + π)) * Math.sin(φ) ];\r\n  }\r\n  eckert4.invert = function(x, y) {\r\n    var A = .5 * y * Math.sqrt((4 + π) / π), k = asin(A), c = Math.cos(k);\r\n    return [ x / (2 / Math.sqrt(π * (4 + π)) * (1 + c)), asin((k + A * (c + 2)) / (2 + halfπ)) ];\r\n  };\r\n  (d3.geo.eckert4 = function() {\r\n    return projection(eckert4);\r\n  }).raw = eckert4;\r\n  function eckert5(λ, φ) {\r\n    return [ λ * (1 + Math.cos(φ)) / Math.sqrt(2 + π), 2 * φ / Math.sqrt(2 + π) ];\r\n  }\r\n  eckert5.invert = function(x, y) {\r\n    var k = Math.sqrt(2 + π), φ = y * k / 2;\r\n    return [ k * x / (1 + Math.cos(φ)), φ ];\r\n  };\r\n  (d3.geo.eckert5 = function() {\r\n    return projection(eckert5);\r\n  }).raw = eckert5;\r\n  function eckert6(λ, φ) {\r\n    var k = (1 + halfπ) * Math.sin(φ);\r\n    for (var i = 0, δ = Infinity; i < 10 && Math.abs(δ) > ε; i++) {\r\n      φ -= δ = (φ + Math.sin(φ) - k) / (1 + Math.cos(φ));\r\n    }\r\n    k = Math.sqrt(2 + π);\r\n    return [ λ * (1 + Math.cos(φ)) / k, 2 * φ / k ];\r\n  }\r\n  eckert6.invert = function(x, y) {\r\n    var j = 1 + halfπ, k = Math.sqrt(j / 2);\r\n    return [ x * 2 * k / (1 + Math.cos(y *= k)), asin((y + Math.sin(y)) / j) ];\r\n  };\r\n  (d3.geo.eckert6 = function() {\r\n    return projection(eckert6);\r\n  }).raw = eckert6;\r\n  function eisenlohr(λ, φ) {\r\n    var s0 = Math.sin(λ /= 2), c0 = Math.cos(λ), k = Math.sqrt(Math.cos(φ)), c1 = Math.cos(φ /= 2), t = Math.sin(φ) / (c1 + Math.SQRT2 * c0 * k), c = Math.sqrt(2 / (1 + t * t)), v = Math.sqrt((Math.SQRT2 * c1 + (c0 + s0) * k) / (Math.SQRT2 * c1 + (c0 - s0) * k));\r\n    return [ eisenlohrK * (c * (v - 1 / v) - 2 * Math.log(v)), eisenlohrK * (c * t * (v + 1 / v) - 2 * Math.atan(t)) ];\r\n  }\r\n  eisenlohr.invert = function(x, y) {\r\n    var p = d3.geo.august.raw.invert(x / 1.2, y * 1.065);\r\n    if (!p) return null;\r\n    var λ = p[0], φ = p[1], i = 20;\r\n    x /= eisenlohrK, y /= eisenlohrK;\r\n    do {\r\n      var _0 = λ / 2, _1 = φ / 2, s0 = Math.sin(_0), c0 = Math.cos(_0), s1 = Math.sin(_1), c1 = Math.cos(_1), cos1 = Math.cos(φ), k = Math.sqrt(cos1), t = s1 / (c1 + Math.SQRT2 * c0 * k), t2 = t * t, c = Math.sqrt(2 / (1 + t2)), v0 = Math.SQRT2 * c1 + (c0 + s0) * k, v1 = Math.SQRT2 * c1 + (c0 - s0) * k, v2 = v0 / v1, v = Math.sqrt(v2), vm1v = v - 1 / v, vp1v = v + 1 / v, fx = c * vm1v - 2 * Math.log(v) - x, fy = c * t * vp1v - 2 * Math.atan(t) - y, δtδλ = s1 && Math.SQRT1_2 * k * s0 * t2 / s1, δtδφ = (Math.SQRT2 * c0 * c1 + k) / (2 * (c1 + Math.SQRT2 * c0 * k) * (c1 + Math.SQRT2 * c0 * k) * k), δcδt = -.5 * t * c * c * c, δcδλ = δcδt * δtδλ, δcδφ = δcδt * δtδφ, A = (A = 2 * c1 + Math.SQRT2 * k * (c0 - s0)) * A * v, δvδλ = (Math.SQRT2 * c0 * c1 * k + cos1) / A, δvδφ = -(Math.SQRT2 * s0 * s1) / (k * A), δxδλ = vm1v * δcδλ - 2 * δvδλ / v + c * (δvδλ + δvδλ / v2), δxδφ = vm1v * δcδφ - 2 * δvδφ / v + c * (δvδφ + δvδφ / v2), δyδλ = t * vp1v * δcδλ - 2 * δtδλ / (1 + t2) + c * vp1v * δtδλ + c * t * (δvδλ - δvδλ / v2), δyδφ = t * vp1v * δcδφ - 2 * δtδφ / (1 + t2) + c * vp1v * δtδφ + c * t * (δvδφ - δvδφ / v2), denominator = δxδφ * δyδλ - δyδφ * δxδλ;\r\n      if (!denominator) break;\r\n      var δλ = (fy * δxδφ - fx * δyδφ) / denominator, δφ = (fx * δyδλ - fy * δxδλ) / denominator;\r\n      λ -= δλ;\r\n      φ = Math.max(-halfπ, Math.min(halfπ, φ - δφ));\r\n    } while ((Math.abs(δλ) > ε || Math.abs(δφ) > ε) && --i > 0);\r\n    return Math.abs(Math.abs(φ) - halfπ) < ε ? [ 0, φ ] : i && [ λ, φ ];\r\n  };\r\n  var eisenlohrK = 3 + 2 * Math.SQRT2;\r\n  (d3.geo.eisenlohr = function() {\r\n    return projection(eisenlohr);\r\n  }).raw = eisenlohr;\r\n  function fahey(λ, φ) {\r\n    var t = Math.tan(φ / 2);\r\n    return [ λ * faheyK * asqrt(1 - t * t), (1 + faheyK) * t ];\r\n  }\r\n  fahey.invert = function(x, y) {\r\n    var t = y / (1 + faheyK);\r\n    return [ x ? x / (faheyK * asqrt(1 - t * t)) : 0, 2 * Math.atan(t) ];\r\n  };\r\n  var faheyK = Math.cos(35 * radians);\r\n  (d3.geo.fahey = function() {\r\n    return projection(fahey);\r\n  }).raw = fahey;\r\n  function foucaut(λ, φ) {\r\n    var k = φ / 2, cosk = Math.cos(k);\r\n    return [ 2 * λ / sqrtπ * Math.cos(φ) * cosk * cosk, sqrtπ * Math.tan(k) ];\r\n  }\r\n  foucaut.invert = function(x, y) {\r\n    var k = Math.atan(y / sqrtπ), cosk = Math.cos(k), φ = 2 * k;\r\n    return [ x * sqrtπ * .5 / (Math.cos(φ) * cosk * cosk), φ ];\r\n  };\r\n  (d3.geo.foucaut = function() {\r\n    return projection(foucaut);\r\n  }).raw = foucaut;\r\n  d3.geo.gilbert = function(projection) {\r\n    var e = d3.geo.equirectangular().scale(degrees).translate([ 0, 0 ]);\r\n    function gilbert(coordinates) {\r\n      return projection([ coordinates[0] * .5, asin(Math.tan(coordinates[1] * .5 * radians)) * degrees ]);\r\n    }\r\n    if (projection.invert) gilbert.invert = function(coordinates) {\r\n      coordinates = projection.invert(coordinates);\r\n      coordinates[0] *= 2;\r\n      coordinates[1] = 2 * Math.atan(Math.sin(coordinates[1] * radians)) * degrees;\r\n      return coordinates;\r\n    };\r\n    gilbert.stream = function(stream) {\r\n      stream = projection.stream(stream);\r\n      var s = e.stream({\r\n        point: function(λ, φ) {\r\n          stream.point(λ * .5, asin(Math.tan(-φ * .5 * radians)) * degrees);\r\n        },\r\n        lineStart: function() {\r\n          stream.lineStart();\r\n        },\r\n        lineEnd: function() {\r\n          stream.lineEnd();\r\n        },\r\n        polygonStart: function() {\r\n          stream.polygonStart();\r\n        },\r\n        polygonEnd: function() {\r\n          stream.polygonEnd();\r\n        }\r\n      });\r\n      s.sphere = function() {\r\n        stream.sphere();\r\n      };\r\n      s.valid = false;\r\n      return s;\r\n    };\r\n    return gilbert;\r\n  };\r\n  var gingeryAzimuthalEquidistant = d3.geo.azimuthalEquidistant.raw;\r\n  function gingery(ρ, n) {\r\n    var k = 2 * π / n, ρ2 = ρ * ρ;\r\n    function forward(λ, φ) {\r\n      var p = gingeryAzimuthalEquidistant(λ, φ), x = p[0], y = p[1], r2 = x * x + y * y;\r\n      if (r2 > ρ2) {\r\n        var r = Math.sqrt(r2), θ = Math.atan2(y, x), θ0 = k * Math.round(θ / k), α = θ - θ0, ρcosα = ρ * Math.cos(α), k_ = (ρ * Math.sin(α) - α * Math.sin(ρcosα)) / (halfπ - ρcosα), s_ = arcLength_(α, k_), e = (π - ρ) / gingeryIntegrate(s_, ρcosα, π);\r\n        x = r;\r\n        var i = 50, δ;\r\n        do {\r\n          x -= δ = (ρ + gingeryIntegrate(s_, ρcosα, x) * e - r) / (s_(x) * e);\r\n        } while (Math.abs(δ) > ε && --i > 0);\r\n        y = α * Math.sin(x);\r\n        if (x < halfπ) y -= k_ * (x - halfπ);\r\n        var s = Math.sin(θ0), c = Math.cos(θ0);\r\n        p[0] = x * c - y * s;\r\n        p[1] = x * s + y * c;\r\n      }\r\n      return p;\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var r2 = x * x + y * y;\r\n      if (r2 > ρ2) {\r\n        var r = Math.sqrt(r2), θ = Math.atan2(y, x), θ0 = k * Math.round(θ / k), dθ = θ - θ0, x = r * Math.cos(dθ);\r\n        y = r * Math.sin(dθ);\r\n        var x_halfπ = x - halfπ, sinx = Math.sin(x), α = y / sinx, δ = x < halfπ ? Infinity : 0, i = 10;\r\n        while (true) {\r\n          var ρsinα = ρ * Math.sin(α), ρcosα = ρ * Math.cos(α), sinρcosα = Math.sin(ρcosα), halfπ_ρcosα = halfπ - ρcosα, k_ = (ρsinα - α * sinρcosα) / halfπ_ρcosα, s_ = arcLength_(α, k_);\r\n          if (Math.abs(δ) < ε2 || !--i) break;\r\n          α -= δ = (α * sinx - k_ * x_halfπ - y) / (sinx - x_halfπ * 2 * (halfπ_ρcosα * (ρcosα + α * ρsinα * Math.cos(ρcosα) - sinρcosα) - ρsinα * (ρsinα - α * sinρcosα)) / (halfπ_ρcosα * halfπ_ρcosα));\r\n        }\r\n        r = ρ + gingeryIntegrate(s_, ρcosα, x) * (π - ρ) / gingeryIntegrate(s_, ρcosα, π);\r\n        θ = θ0 + α;\r\n        x = r * Math.cos(θ);\r\n        y = r * Math.sin(θ);\r\n      }\r\n      return gingeryAzimuthalEquidistant.invert(x, y);\r\n    };\r\n    return forward;\r\n  }\r\n  function arcLength_(α, k) {\r\n    return function(x) {\r\n      var y_ = α * Math.cos(x);\r\n      if (x < halfπ) y_ -= k;\r\n      return Math.sqrt(1 + y_ * y_);\r\n    };\r\n  }\r\n  function gingeryProjection() {\r\n    var n = 6, ρ = 30 * radians, cρ = Math.cos(ρ), sρ = Math.sin(ρ), m = projectionMutator(gingery), p = m(ρ, n), stream_ = p.stream, ε = .01, cr = -Math.cos(ε * radians), sr = Math.sin(ε * radians);\r\n    p.radius = function(_) {\r\n      if (!arguments.length) return ρ * degrees;\r\n      cρ = Math.cos(ρ = _ * radians);\r\n      sρ = Math.sin(ρ);\r\n      return m(ρ, n);\r\n    };\r\n    p.lobes = function(_) {\r\n      if (!arguments.length) return n;\r\n      return m(ρ, n = +_);\r\n    };\r\n    p.stream = function(stream) {\r\n      var rotate = p.rotate(), rotateStream = stream_(stream), sphereStream = (p.rotate([ 0, 0 ]), \r\n      stream_(stream));\r\n      p.rotate(rotate);\r\n      rotateStream.sphere = function() {\r\n        sphereStream.polygonStart(), sphereStream.lineStart();\r\n        for (var i = 0, δ = 2 * π / n, φ = 0; i < n; ++i, φ -= δ) {\r\n          sphereStream.point(Math.atan2(sr * Math.cos(φ), cr) * degrees, Math.asin(sr * Math.sin(φ)) * degrees);\r\n          sphereStream.point(Math.atan2(sρ * Math.cos(φ - δ / 2), cρ) * degrees, Math.asin(sρ * Math.sin(φ - δ / 2)) * degrees);\r\n        }\r\n        sphereStream.lineEnd(), sphereStream.polygonEnd();\r\n      };\r\n      return rotateStream;\r\n    };\r\n    return p;\r\n  }\r\n  function gingeryIntegrate(f, a, b) {\r\n    var n = 50, h = (b - a) / n, s = f(a) + f(b);\r\n    for (var i = 1, x = a; i < n; ++i) s += 2 * f(x += h);\r\n    return s * .5 * h;\r\n  }\r\n  (d3.geo.gingery = gingeryProjection).raw = gingery;\r\n  function ginzburgPolyconic(a, b, c, d, e, f, g, h) {\r\n    if (arguments.length < 8) h = 0;\r\n    function forward(λ, φ) {\r\n      if (!φ) return [ a * λ / π, 0 ];\r\n      var φ2 = φ * φ, xB = a + φ2 * (b + φ2 * (c + φ2 * d)), yB = φ * (e - 1 + φ2 * (f - h + φ2 * g)), m = (xB * xB + yB * yB) / (2 * yB), α = λ * Math.asin(xB / m) / π;\r\n      return [ m * Math.sin(α), φ * (1 + φ2 * h) + m * (1 - Math.cos(α)) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var λ = π * x / a, φ = y, δλ, δφ, i = 50;\r\n      do {\r\n        var φ2 = φ * φ, xB = a + φ2 * (b + φ2 * (c + φ2 * d)), yB = φ * (e - 1 + φ2 * (f - h + φ2 * g)), p = xB * xB + yB * yB, q = 2 * yB, m = p / q, m2 = m * m, dαdλ = Math.asin(xB / m) / π, α = λ * dαdλ;\r\n        xB2 = xB * xB, dxBdφ = (2 * b + φ2 * (4 * c + φ2 * 6 * d)) * φ, dyBdφ = e + φ2 * (3 * f + φ2 * 5 * g), \r\n        dpdφ = 2 * (xB * dxBdφ + yB * (dyBdφ - 1)), dqdφ = 2 * (dyBdφ - 1), dmdφ = (dpdφ * q - p * dqdφ) / (q * q), \r\n        cosα = Math.cos(α), sinα = Math.sin(α), mcosα = m * cosα, msinα = m * sinα, dαdφ = λ / π * (1 / asqrt(1 - xB2 / m2)) * (dxBdφ * m - xB * dmdφ) / m2, \r\n        fx = msinα - x, fy = φ * (1 + φ2 * h) + m - mcosα - y, δxδφ = dmdφ * sinα + mcosα * dαdφ, \r\n        δxδλ = mcosα * dαdλ, δyδφ = 1 + dmdφ - (dmdφ * cosα - msinα * dαdφ), δyδλ = msinα * dαdλ, \r\n        denominator = δxδφ * δyδλ - δyδφ * δxδλ;\r\n        if (!denominator) break;\r\n        λ -= δλ = (fy * δxδφ - fx * δyδφ) / denominator;\r\n        φ -= δφ = (fx * δyδλ - fy * δxδλ) / denominator;\r\n      } while ((Math.abs(δλ) > ε || Math.abs(δφ) > ε) && --i > 0);\r\n      return [ λ, φ ];\r\n    };\r\n    return forward;\r\n  }\r\n  var ginzburg4 = ginzburgPolyconic(2.8284, -1.6988, .75432, -.18071, 1.76003, -.38914, .042555);\r\n  (d3.geo.ginzburg4 = function() {\r\n    return projection(ginzburg4);\r\n  }).raw = ginzburg4;\r\n  var ginzburg5 = ginzburgPolyconic(2.583819, -.835827, .170354, -.038094, 1.543313, -.411435, .082742);\r\n  (d3.geo.ginzburg5 = function() {\r\n    return projection(ginzburg5);\r\n  }).raw = ginzburg5;\r\n  var ginzburg6 = ginzburgPolyconic(5 / 6 * π, -.62636, -.0344, 0, 1.3493, -.05524, 0, .045);\r\n  (d3.geo.ginzburg6 = function() {\r\n    return projection(ginzburg6);\r\n  }).raw = ginzburg6;\r\n  function ginzburg8(λ, φ) {\r\n    var λ2 = λ * λ, φ2 = φ * φ;\r\n    return [ λ * (1 - .162388 * φ2) * (.87 - 952426e-9 * λ2 * λ2), φ * (1 + φ2 / 12) ];\r\n  }\r\n  ginzburg8.invert = function(x, y) {\r\n    var λ = x, φ = y, i = 50, δ;\r\n    do {\r\n      var φ2 = φ * φ;\r\n      φ -= δ = (φ * (1 + φ2 / 12) - y) / (1 + φ2 / 4);\r\n    } while (Math.abs(δ) > ε && --i > 0);\r\n    i = 50;\r\n    x /= 1 - .162388 * φ2;\r\n    do {\r\n      var λ4 = (λ4 = λ * λ) * λ4;\r\n      λ -= δ = (λ * (.87 - 952426e-9 * λ4) - x) / (.87 - .00476213 * λ4);\r\n    } while (Math.abs(δ) > ε && --i > 0);\r\n    return [ λ, φ ];\r\n  };\r\n  (d3.geo.ginzburg8 = function() {\r\n    return projection(ginzburg8);\r\n  }).raw = ginzburg8;\r\n  var ginzburg9 = ginzburgPolyconic(2.6516, -.76534, .19123, -.047094, 1.36289, -.13965, .031762);\r\n  (d3.geo.ginzburg9 = function() {\r\n    return projection(ginzburg9);\r\n  }).raw = ginzburg9;\r\n  function quincuncialProjection(projectHemisphere) {\r\n    var dx = projectHemisphere(halfπ, 0)[0] - projectHemisphere(-halfπ, 0)[0];\r\n    function projection() {\r\n      var quincuncial = false, m = projectionMutator(projectAt), p = m(quincuncial);\r\n      p.quincuncial = function(_) {\r\n        if (!arguments.length) return quincuncial;\r\n        return m(quincuncial = !!_);\r\n      };\r\n      return p;\r\n    }\r\n    function projectAt(quincuncial) {\r\n      var forward = quincuncial ? function(λ, φ) {\r\n        var t = Math.abs(λ) < halfπ, p = projectHemisphere(t ? λ : λ > 0 ? λ - π : λ + π, φ);\r\n        var x = (p[0] - p[1]) * Math.SQRT1_2, y = (p[0] + p[1]) * Math.SQRT1_2;\r\n        if (t) return [ x, y ];\r\n        var d = dx * Math.SQRT1_2, s = x > 0 ^ y > 0 ? -1 : 1;\r\n        return [ s * x - sgn(y) * d, s * y - sgn(x) * d ];\r\n      } : function(λ, φ) {\r\n        var s = λ > 0 ? -.5 : .5, point = projectHemisphere(λ + s * π, φ);\r\n        point[0] -= s * dx;\r\n        return point;\r\n      };\r\n      if (projectHemisphere.invert) forward.invert = quincuncial ? function(x0, y0) {\r\n        var x = (x0 + y0) * Math.SQRT1_2, y = (y0 - x0) * Math.SQRT1_2, t = Math.abs(x) < .5 * dx && Math.abs(y) < .5 * dx;\r\n        if (!t) {\r\n          var d = dx * Math.SQRT1_2, s = x > 0 ^ y > 0 ? -1 : 1, x1 = -s * (x0 + (y > 0 ? 1 : -1) * d), y1 = -s * (y0 + (x > 0 ? 1 : -1) * d);\r\n          x = (-x1 - y1) * Math.SQRT1_2;\r\n          y = (x1 - y1) * Math.SQRT1_2;\r\n        }\r\n        var p = projectHemisphere.invert(x, y);\r\n        if (!t) p[0] += x > 0 ? π : -π;\r\n        return p;\r\n      } : function(x, y) {\r\n        var s = x > 0 ? -.5 : .5, location = projectHemisphere.invert(x + s * dx, y), λ = location[0] - s * π;\r\n        if (λ < -π) λ += 2 * π; else if (λ > π) λ -= 2 * π;\r\n        location[0] = λ;\r\n        return location;\r\n      };\r\n      return forward;\r\n    }\r\n    projection.raw = projectAt;\r\n    return projection;\r\n  }\r\n  function gringorten(λ, φ) {\r\n    var sλ = sgn(λ), sφ = sgn(φ), cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(sφ * φ);\r\n    λ = Math.abs(Math.atan2(y, z));\r\n    φ = asin(x);\r\n    if (Math.abs(λ - halfπ) > ε) λ %= halfπ;\r\n    var point = gringortenHexadecant(λ > π / 4 ? halfπ - λ : λ, φ);\r\n    if (λ > π / 4) z = point[0], point[0] = -point[1], point[1] = -z;\r\n    return point[0] *= sλ, point[1] *= -sφ, point;\r\n  }\r\n  gringorten.invert = function(x, y) {\r\n    var sx = sgn(x), sy = sgn(y), x0 = -sx * x, y0 = -sy * y, t = y0 / x0 < 1, p = gringortenHexadecantInvert(t ? y0 : x0, t ? x0 : y0), λ = p[0], φ = p[1];\r\n    if (t) λ = -halfπ - λ;\r\n    var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ);\r\n    return [ sx * (Math.atan2(y, -z) + π), sy * asin(x) ];\r\n  };\r\n  function gringortenHexadecant(λ, φ) {\r\n    if (φ === halfπ) return [ 0, 0 ];\r\n    var sinφ = Math.sin(φ), r = sinφ * sinφ, r2 = r * r, j = 1 + r2, k = 1 + 3 * r2, q = 1 - r2, z = asin(1 / Math.sqrt(j)), v = q + r * j * z, p2 = (1 - sinφ) / v, p = Math.sqrt(p2), a2 = p2 * j, a = Math.sqrt(a2), h = p * q;\r\n    if (λ === 0) return [ 0, -(h + r * a) ];\r\n    var cosφ = Math.cos(φ), secφ = 1 / cosφ, drdφ = 2 * sinφ * cosφ, dvdφ = (-3 * r + z * k) * drdφ, dp2dφ = (-v * cosφ - (1 - sinφ) * dvdφ) / (v * v), dpdφ = .5 * dp2dφ / p, dhdφ = q * dpdφ - 2 * r * p * drdφ, dra2dφ = r * j * dp2dφ + p2 * k * drdφ, μ = -secφ * drdφ, ν = -secφ * dra2dφ, ζ = -2 * secφ * dhdφ, Λ = 4 * λ / π;\r\n    if (λ > .222 * π || φ < π / 4 && λ > .175 * π) {\r\n      var x = (h + r * asqrt(a2 * (1 + r2) - h * h)) / (1 + r2);\r\n      if (λ > π / 4) return [ x, x ];\r\n      var x1 = x, x0 = .5 * x, i = 50;\r\n      x = .5 * (x0 + x1);\r\n      do {\r\n        var g = Math.sqrt(a2 - x * x), f = x * (ζ + μ * g) + ν * asin(x / a) - Λ;\r\n        if (!f) break;\r\n        if (f < 0) x0 = x; else x1 = x;\r\n        x = .5 * (x0 + x1);\r\n      } while (Math.abs(x1 - x0) > ε && --i > 0);\r\n    } else {\r\n      var x = ε, i = 25, δ;\r\n      do {\r\n        var x2 = x * x, g = asqrt(a2 - x2), ζμg = ζ + μ * g, f = x * ζμg + ν * asin(x / a) - Λ, df = ζμg + (ν - μ * x2) / g;\r\n        x -= δ = g ? f / df : 0;\r\n      } while (Math.abs(δ) > ε && --i > 0);\r\n    }\r\n    return [ x, -h - r * asqrt(a2 - x * x) ];\r\n  }\r\n  function gringortenHexadecantInvert(x, y) {\r\n    var x0 = 0, x1 = 1, r = .5, i = 50;\r\n    while (true) {\r\n      var r2 = r * r, sinφ = Math.sqrt(r), z = Math.asin(1 / Math.sqrt(1 + r2)), v = 1 - r2 + r * (1 + r2) * z, p2 = (1 - sinφ) / v, p = Math.sqrt(p2), a2 = p2 * (1 + r2), h = p * (1 - r2), g2 = a2 - x * x, g = Math.sqrt(g2), y0 = y + h + r * g;\r\n      if (Math.abs(x1 - x0) < ε2 || --i === 0 || y0 === 0) break;\r\n      if (y0 > 0) x0 = r; else x1 = r;\r\n      r = .5 * (x0 + x1);\r\n    }\r\n    if (!i) return null;\r\n    var φ = Math.asin(sinφ), cosφ = Math.cos(φ), secφ = 1 / cosφ, drdφ = 2 * sinφ * cosφ, dvdφ = (-3 * r + z * (1 + 3 * r2)) * drdφ, dp2dφ = (-v * cosφ - (1 - sinφ) * dvdφ) / (v * v), dpdφ = .5 * dp2dφ / p, dhdφ = (1 - r2) * dpdφ - 2 * r * p * drdφ, ζ = -2 * secφ * dhdφ, μ = -secφ * drdφ, ν = -secφ * (r * (1 + r2) * dp2dφ + p2 * (1 + 3 * r2) * drdφ);\r\n    return [ π / 4 * (x * (ζ + μ * g) + ν * Math.asin(x / Math.sqrt(a2))), φ ];\r\n  }\r\n  d3.geo.gringorten = quincuncialProjection(gringorten);\r\n  function ellipticJi(u, v, m) {\r\n    if (!u) {\r\n      var b = ellipticJ(v, 1 - m);\r\n      return [ [ 0, b[0] / b[1] ], [ 1 / b[1], 0 ], [ b[2] / b[1], 0 ] ];\r\n    }\r\n    var a = ellipticJ(u, m);\r\n    if (!v) return [ [ a[0], 0 ], [ a[1], 0 ], [ a[2], 0 ] ];\r\n    var b = ellipticJ(v, 1 - m), denominator = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\r\n    return [ [ a[0] * b[2] / denominator, a[1] * a[2] * b[0] * b[1] / denominator ], [ a[1] * b[1] / denominator, -a[0] * a[2] * b[0] * b[2] / denominator ], [ a[2] * b[1] * b[2] / denominator, -m * a[0] * a[1] * b[0] / denominator ] ];\r\n  }\r\n  function ellipticJ(u, m) {\r\n    var ai, b, φ, t, twon;\r\n    if (m < ε) {\r\n      t = Math.sin(u);\r\n      b = Math.cos(u);\r\n      ai = .25 * m * (u - t * b);\r\n      return [ t - ai * b, b + ai * t, 1 - .5 * m * t * t, u - ai ];\r\n    }\r\n    if (m >= 1 - ε) {\r\n      ai = .25 * (1 - m);\r\n      b = cosh(u);\r\n      t = tanh(u);\r\n      φ = 1 / b;\r\n      twon = b * sinh(u);\r\n      return [ t + ai * (twon - u) / (b * b), φ - ai * t * φ * (twon - u), φ + ai * t * φ * (twon + u), 2 * Math.atan(Math.exp(u)) - halfπ + ai * (twon - u) / b ];\r\n    }\r\n    var a = [ 1, 0, 0, 0, 0, 0, 0, 0, 0 ], c = [ Math.sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0 ], i = 0;\r\n    b = Math.sqrt(1 - m);\r\n    twon = 1;\r\n    while (Math.abs(c[i] / a[i]) > ε && i < 8) {\r\n      ai = a[i++];\r\n      c[i] = .5 * (ai - b);\r\n      a[i] = .5 * (ai + b);\r\n      b = asqrt(ai * b);\r\n      twon *= 2;\r\n    }\r\n    φ = twon * a[i] * u;\r\n    do {\r\n      t = c[i] * Math.sin(b = φ) / a[i];\r\n      φ = .5 * (asin(t) + φ);\r\n    } while (--i);\r\n    return [ Math.sin(φ), t = Math.cos(φ), t / Math.cos(φ - b), φ ];\r\n  }\r\n  function ellipticFi(φ, ψ, m) {\r\n    var r = Math.abs(φ), i = Math.abs(ψ), sinhψ = sinh(i);\r\n    if (r) {\r\n      var cscφ = 1 / Math.sin(r), cotφ2 = 1 / (Math.tan(r) * Math.tan(r)), b = -(cotφ2 + m * sinhψ * sinhψ * cscφ * cscφ - 1 + m), c = (m - 1) * cotφ2, cotλ2 = .5 * (-b + Math.sqrt(b * b - 4 * c));\r\n      return [ ellipticF(Math.atan(1 / Math.sqrt(cotλ2)), m) * sgn(φ), ellipticF(Math.atan(asqrt((cotλ2 / cotφ2 - 1) / m)), 1 - m) * sgn(ψ) ];\r\n    }\r\n    return [ 0, ellipticF(Math.atan(sinhψ), 1 - m) * sgn(ψ) ];\r\n  }\r\n  function ellipticF(φ, m) {\r\n    if (!m) return φ;\r\n    if (m === 1) return Math.log(Math.tan(φ / 2 + π / 4));\r\n    var a = 1, b = Math.sqrt(1 - m), c = Math.sqrt(m);\r\n    for (var i = 0; Math.abs(c) > ε; i++) {\r\n      if (φ % π) {\r\n        var dφ = Math.atan(b * Math.tan(φ) / a);\r\n        if (dφ < 0) dφ += π;\r\n        φ += dφ + ~~(φ / π) * π;\r\n      } else φ += φ;\r\n      c = (a + b) / 2;\r\n      b = Math.sqrt(a * b);\r\n      c = ((a = c) - b) / 2;\r\n    }\r\n    return φ / (Math.pow(2, i) * a);\r\n  }\r\n  function guyou(λ, φ) {\r\n    var k_ = (Math.SQRT2 - 1) / (Math.SQRT2 + 1), k = Math.sqrt(1 - k_ * k_), K = ellipticF(halfπ, k * k), f = -1;\r\n    var ψ = Math.log(Math.tan(π / 4 + Math.abs(φ) / 2)), r = Math.exp(f * ψ) / Math.sqrt(k_), at = guyouComplexAtan(r * Math.cos(f * λ), r * Math.sin(f * λ)), t = ellipticFi(at[0], at[1], k * k);\r\n    return [ -t[1], (φ >= 0 ? 1 : -1) * (.5 * K - t[0]) ];\r\n  }\r\n  function guyouComplexAtan(x, y) {\r\n    var x2 = x * x, y_1 = y + 1, t = 1 - x2 - y * y;\r\n    return [ .5 * ((x >= 0 ? halfπ : -halfπ) - Math.atan2(t, 2 * x)), -.25 * Math.log(t * t + 4 * x2) + .5 * Math.log(y_1 * y_1 + x2) ];\r\n  }\r\n  function guyouComplexDivide(a, b) {\r\n    var denominator = b[0] * b[0] + b[1] * b[1];\r\n    return [ (a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator ];\r\n  }\r\n  guyou.invert = function(x, y) {\r\n    var k_ = (Math.SQRT2 - 1) / (Math.SQRT2 + 1), k = Math.sqrt(1 - k_ * k_), K = ellipticF(halfπ, k * k), f = -1;\r\n    var j = ellipticJi(.5 * K - y, -x, k * k), tn = guyouComplexDivide(j[0], j[1]), λ = Math.atan2(tn[1], tn[0]) / f;\r\n    return [ λ, 2 * Math.atan(Math.exp(.5 / f * Math.log(k_ * tn[0] * tn[0] + k_ * tn[1] * tn[1]))) - halfπ ];\r\n  };\r\n  d3.geo.guyou = quincuncialProjection(guyou);\r\n  function hammerRetroazimuthal(φ0) {\r\n    var sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), rotate = hammerRetroazimuthalRotation(φ0);\r\n    rotate.invert = hammerRetroazimuthalRotation(-φ0);\r\n    function forward(λ, φ) {\r\n      var p = rotate(λ, φ);\r\n      λ = p[0], φ = p[1];\r\n      var sinφ = Math.sin(φ), cosφ = Math.cos(φ), cosλ = Math.cos(λ), z = acos(sinφ0 * sinφ + cosφ0 * cosφ * cosλ), sinz = Math.sin(z), K = Math.abs(sinz) > ε ? z / sinz : 1;\r\n      return [ K * cosφ0 * Math.sin(λ), (Math.abs(λ) > halfπ ? K : -K) * (sinφ0 * cosφ - cosφ0 * sinφ * cosλ) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ = Math.sqrt(x * x + y * y), sinz = -Math.sin(ρ), cosz = Math.cos(ρ), a = ρ * cosz, b = -y * sinz, c = ρ * sinφ0, d = asqrt(a * a + b * b - c * c), φ = Math.atan2(a * c + b * d, b * c - a * d), λ = (ρ > halfπ ? -1 : 1) * Math.atan2(x * sinz, ρ * Math.cos(φ) * cosz + y * Math.sin(φ) * sinz);\r\n      return rotate.invert(λ, φ);\r\n    };\r\n    return forward;\r\n  }\r\n  function hammerRetroazimuthalRotation(φ0) {\r\n    var sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0);\r\n    return function(λ, φ) {\r\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ);\r\n      return [ Math.atan2(y, x * cosφ0 - z * sinφ0), asin(z * cosφ0 + x * sinφ0) ];\r\n    };\r\n  }\r\n  function hammerRetroazimuthalProjection() {\r\n    var φ0 = 0, m = projectionMutator(hammerRetroazimuthal), p = m(φ0), rotate_ = p.rotate, stream_ = p.stream, circle = d3.geo.circle();\r\n    p.parallel = function(_) {\r\n      if (!arguments.length) return φ0 / π * 180;\r\n      var r = p.rotate();\r\n      return m(φ0 = _ * π / 180).rotate(r);\r\n    };\r\n    p.rotate = function(_) {\r\n      if (!arguments.length) return _ = rotate_.call(p), _[1] += φ0 / π * 180, _;\r\n      rotate_.call(p, [ _[0], _[1] - φ0 / π * 180 ]);\r\n      circle.origin([ -_[0], -_[1] ]);\r\n      return p;\r\n    };\r\n    p.stream = function(stream) {\r\n      stream = stream_(stream);\r\n      stream.sphere = function() {\r\n        stream.polygonStart();\r\n        var ε = .01, ring = circle.angle(90 - ε)().coordinates[0], n = ring.length - 1, i = -1, p;\r\n        stream.lineStart();\r\n        while (++i < n) stream.point((p = ring[i])[0], p[1]);\r\n        stream.lineEnd();\r\n        ring = circle.angle(90 + ε)().coordinates[0];\r\n        n = ring.length - 1;\r\n        stream.lineStart();\r\n        while (--i >= 0) stream.point((p = ring[i])[0], p[1]);\r\n        stream.lineEnd();\r\n        stream.polygonEnd();\r\n      };\r\n      return stream;\r\n    };\r\n    return p;\r\n  }\r\n  (d3.geo.hammerRetroazimuthal = hammerRetroazimuthalProjection).raw = hammerRetroazimuthal;\r\n  var hammerAzimuthalEqualArea = d3.geo.azimuthalEqualArea.raw;\r\n  function hammer(A, B) {\r\n    if (arguments.length < 2) B = A;\r\n    if (B === 1) return hammerAzimuthalEqualArea;\r\n    if (B === Infinity) return hammerQuarticAuthalic;\r\n    function forward(λ, φ) {\r\n      var coordinates = hammerAzimuthalEqualArea(λ / B, φ);\r\n      coordinates[0] *= A;\r\n      return coordinates;\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var coordinates = hammerAzimuthalEqualArea.invert(x / A, y);\r\n      coordinates[0] *= B;\r\n      return coordinates;\r\n    };\r\n    return forward;\r\n  }\r\n  function hammerProjection() {\r\n    var B = 2, m = projectionMutator(hammer), p = m(B);\r\n    p.coefficient = function(_) {\r\n      if (!arguments.length) return B;\r\n      return m(B = +_);\r\n    };\r\n    return p;\r\n  }\r\n  function hammerQuarticAuthalic(λ, φ) {\r\n    return [ λ * Math.cos(φ) / Math.cos(φ /= 2), 2 * Math.sin(φ) ];\r\n  }\r\n  hammerQuarticAuthalic.invert = function(x, y) {\r\n    var φ = 2 * asin(y / 2);\r\n    return [ x * Math.cos(φ / 2) / Math.cos(φ), φ ];\r\n  };\r\n  (d3.geo.hammer = hammerProjection).raw = hammer;\r\n  function hatano(λ, φ) {\r\n    var c = Math.sin(φ) * (φ < 0 ? 2.43763 : 2.67595);\r\n    for (var i = 0, δ; i < 20; i++) {\r\n      φ -= δ = (φ + Math.sin(φ) - c) / (1 + Math.cos(φ));\r\n      if (Math.abs(δ) < ε) break;\r\n    }\r\n    return [ .85 * λ * Math.cos(φ *= .5), Math.sin(φ) * (φ < 0 ? 1.93052 : 1.75859) ];\r\n  }\r\n  hatano.invert = function(x, y) {\r\n    var θ = Math.abs(θ = y * (y < 0 ? .5179951515653813 : .5686373742600607)) > 1 - ε ? θ > 0 ? halfπ : -halfπ : asin(θ);\r\n    return [ 1.1764705882352942 * x / Math.cos(θ), Math.abs(θ = ((θ += θ) + Math.sin(θ)) * (y < 0 ? .4102345310814193 : .3736990601468637)) > 1 - ε ? θ > 0 ? halfπ : -halfπ : asin(θ) ];\r\n  };\r\n  (d3.geo.hatano = function() {\r\n    return projection(hatano);\r\n  }).raw = hatano;\r\n  var healpixParallel = 41 + 48 / 36 + 37 / 3600;\r\n  function healpix(h) {\r\n    var lambert = d3.geo.cylindricalEqualArea.raw(0), φ0 = healpixParallel * π / 180, dx0 = 2 * π, dx1 = d3.geo.collignon.raw(π, φ0)[0] - d3.geo.collignon.raw(-π, φ0)[0], y0 = lambert(0, φ0)[1], y1 = d3.geo.collignon.raw(0, φ0)[1], dy1 = d3.geo.collignon.raw(0, halfπ)[1] - y1, k = 2 * π / h;\r\n    function forward(λ, φ) {\r\n      var point, φ2 = Math.abs(φ);\r\n      if (φ2 > φ0) {\r\n        var i = Math.min(h - 1, Math.max(0, Math.floor((λ + π) / k)));\r\n        λ += π * (h - 1) / h - i * k;\r\n        point = d3.geo.collignon.raw(λ, φ2);\r\n        point[0] = point[0] * dx0 / dx1 - dx0 * (h - 1) / (2 * h) + i * dx0 / h;\r\n        point[1] = y0 + (point[1] - y1) * 4 * dy1 / dx0;\r\n        if (φ < 0) point[1] = -point[1];\r\n      } else {\r\n        point = lambert(λ, φ);\r\n      }\r\n      point[0] /= 2;\r\n      return point;\r\n    }\r\n    forward.invert = function(x, y) {\r\n      x *= 2;\r\n      var y2 = Math.abs(y);\r\n      if (y2 > y0) {\r\n        var i = Math.min(h - 1, Math.max(0, Math.floor((x + π) / k)));\r\n        x = (x + π * (h - 1) / h - i * k) * dx1 / dx0;\r\n        var point = d3.geo.collignon.raw.invert(x, .25 * (y2 - y0) * dx0 / dy1 + y1);\r\n        point[0] -= π * (h - 1) / h - i * k;\r\n        if (y < 0) point[1] = -point[1];\r\n        return point;\r\n      }\r\n      return lambert.invert(x, y);\r\n    };\r\n    return forward;\r\n  }\r\n  function healpixProjection() {\r\n    var n = 2, m = projectionMutator(healpix), p = m(n), stream_ = p.stream;\r\n    p.lobes = function(_) {\r\n      if (!arguments.length) return n;\r\n      return m(n = +_);\r\n    };\r\n    p.stream = function(stream) {\r\n      var rotate = p.rotate(), rotateStream = stream_(stream), sphereStream = (p.rotate([ 0, 0 ]), \r\n      stream_(stream));\r\n      p.rotate(rotate);\r\n      rotateStream.sphere = function() {\r\n        d3.geo.stream(sphere(), sphereStream);\r\n      };\r\n      return rotateStream;\r\n    };\r\n    function sphere() {\r\n      var step = 180 / n;\r\n      return {\r\n        type: \"Polygon\",\r\n        coordinates: [ d3.range(-180, 180 + step / 2, step).map(function(x, i) {\r\n          return [ x, i & 1 ? 90 - 1e-6 : healpixParallel ];\r\n        }).concat(d3.range(180, -180 - step / 2, -step).map(function(x, i) {\r\n          return [ x, i & 1 ? -90 + 1e-6 : -healpixParallel ];\r\n        })) ]\r\n      };\r\n    }\r\n    return p;\r\n  }\r\n  (d3.geo.healpix = healpixProjection).raw = healpix;\r\n  function hill(K) {\r\n    var L = 1 + K, sinβ = Math.sin(1 / L), β = asin(sinβ), A = 2 * Math.sqrt(π / (B = π + 4 * β * L)), B, ρ0 = .5 * A * (L + Math.sqrt(K * (2 + K))), K2 = K * K, L2 = L * L;\r\n    function forward(λ, φ) {\r\n      var t = 1 - Math.sin(φ), ρ, ω;\r\n      if (t && t < 2) {\r\n        var θ = halfπ - φ, i = 25, δ;\r\n        do {\r\n          var sinθ = Math.sin(θ), cosθ = Math.cos(θ), β_β1 = β + Math.atan2(sinθ, L - cosθ), C = 1 + L2 - 2 * L * cosθ;\r\n          θ -= δ = (θ - K2 * β - L * sinθ + C * β_β1 - .5 * t * B) / (2 * L * sinθ * β_β1);\r\n        } while (Math.abs(δ) > ε2 && --i > 0);\r\n        ρ = A * Math.sqrt(C);\r\n        ω = λ * β_β1 / π;\r\n      } else {\r\n        ρ = A * (K + t);\r\n        ω = λ * β / π;\r\n      }\r\n      return [ ρ * Math.sin(ω), ρ0 - ρ * Math.cos(ω) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ2 = x * x + (y -= ρ0) * y, cosθ = (1 + L2 - ρ2 / (A * A)) / (2 * L), θ = acos(cosθ), sinθ = Math.sin(θ), β_β1 = β + Math.atan2(sinθ, L - cosθ);\r\n      return [ asin(x / Math.sqrt(ρ2)) * π / β_β1, asin(1 - 2 * (θ - K2 * β - L * sinθ + (1 + L2 - 2 * L * cosθ) * β_β1) / B) ];\r\n    };\r\n    return forward;\r\n  }\r\n  function hillProjection() {\r\n    var K = 1, m = projectionMutator(hill), p = m(K);\r\n    p.ratio = function(_) {\r\n      if (!arguments.length) return K;\r\n      return m(K = +_);\r\n    };\r\n    return p;\r\n  }\r\n  (d3.geo.hill = hillProjection).raw = hill;\r\n  var sinuMollweideφ = .7109889596207567, sinuMollweideY = .0528035274542;\r\n  function sinuMollweide(λ, φ) {\r\n    return φ > -sinuMollweideφ ? (λ = mollweide(λ, φ), λ[1] += sinuMollweideY, λ) : sinusoidal(λ, φ);\r\n  }\r\n  sinuMollweide.invert = function(x, y) {\r\n    return y > -sinuMollweideφ ? mollweide.invert(x, y - sinuMollweideY) : sinusoidal.invert(x, y);\r\n  };\r\n  (d3.geo.sinuMollweide = function() {\r\n    return projection(sinuMollweide).rotate([ -20, -55 ]);\r\n  }).raw = sinuMollweide;\r\n  function homolosine(λ, φ) {\r\n    return Math.abs(φ) > sinuMollweideφ ? (λ = mollweide(λ, φ), λ[1] -= φ > 0 ? sinuMollweideY : -sinuMollweideY, \r\n    λ) : sinusoidal(λ, φ);\r\n  }\r\n  homolosine.invert = function(x, y) {\r\n    return Math.abs(y) > sinuMollweideφ ? mollweide.invert(x, y + (y > 0 ? sinuMollweideY : -sinuMollweideY)) : sinusoidal.invert(x, y);\r\n  };\r\n  (d3.geo.homolosine = function() {\r\n    return projection(homolosine);\r\n  }).raw = homolosine;\r\n  function kavrayskiy7(λ, φ) {\r\n    return [ 3 * λ / (2 * π) * Math.sqrt(π * π / 3 - φ * φ), φ ];\r\n  }\r\n  kavrayskiy7.invert = function(x, y) {\r\n    return [ 2 / 3 * π * x / Math.sqrt(π * π / 3 - y * y), y ];\r\n  };\r\n  (d3.geo.kavrayskiy7 = function() {\r\n    return projection(kavrayskiy7);\r\n  }).raw = kavrayskiy7;\r\n  function lagrange(n) {\r\n    function forward(λ, φ) {\r\n      if (Math.abs(Math.abs(φ) - halfπ) < ε) return [ 0, φ < 0 ? -2 : 2 ];\r\n      var sinφ = Math.sin(φ), v = Math.pow((1 + sinφ) / (1 - sinφ), n / 2), c = .5 * (v + 1 / v) + Math.cos(λ *= n);\r\n      return [ 2 * Math.sin(λ) / c, (v - 1 / v) / c ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var y0 = Math.abs(y);\r\n      if (Math.abs(y0 - 2) < ε) return x ? null : [ 0, sgn(y) * halfπ ];\r\n      if (y0 > 2) return null;\r\n      x /= 2, y /= 2;\r\n      var x2 = x * x, y2 = y * y, t = 2 * y / (1 + x2 + y2);\r\n      t = Math.pow((1 + t) / (1 - t), 1 / n);\r\n      return [ Math.atan2(2 * x, 1 - x2 - y2) / n, asin((t - 1) / (t + 1)) ];\r\n    };\r\n    return forward;\r\n  }\r\n  function lagrangeProjection() {\r\n    var n = .5, m = projectionMutator(lagrange), p = m(n);\r\n    p.spacing = function(_) {\r\n      if (!arguments.length) return n;\r\n      return m(n = +_);\r\n    };\r\n    return p;\r\n  }\r\n  (d3.geo.lagrange = lagrangeProjection).raw = lagrange;\r\n  function larrivee(λ, φ) {\r\n    return [ λ * (1 + Math.sqrt(Math.cos(φ))) / 2, φ / (Math.cos(φ / 2) * Math.cos(λ / 6)) ];\r\n  }\r\n  larrivee.invert = function(x, y) {\r\n    var x0 = Math.abs(x), y0 = Math.abs(y), π_sqrt2 = π / Math.SQRT2, λ = ε, φ = halfπ;\r\n    if (y0 < π_sqrt2) φ *= y0 / π_sqrt2; else λ += 6 * acos(π_sqrt2 / y0);\r\n    for (var i = 0; i < 25; i++) {\r\n      var sinφ = Math.sin(φ), sqrtcosφ = asqrt(Math.cos(φ)), sinφ_2 = Math.sin(φ / 2), cosφ_2 = Math.cos(φ / 2), sinλ_6 = Math.sin(λ / 6), cosλ_6 = Math.cos(λ / 6), f0 = .5 * λ * (1 + sqrtcosφ) - x0, f1 = φ / (cosφ_2 * cosλ_6) - y0, df0dφ = sqrtcosφ ? -.25 * λ * sinφ / sqrtcosφ : 0, df0dλ = .5 * (1 + sqrtcosφ), df1dφ = (1 + .5 * φ * sinφ_2 / cosφ_2) / (cosφ_2 * cosλ_6), df1dλ = φ / cosφ_2 * (sinλ_6 / 6) / (cosλ_6 * cosλ_6), denom = df0dφ * df1dλ - df1dφ * df0dλ, dφ = (f0 * df1dλ - f1 * df0dλ) / denom, dλ = (f1 * df0dφ - f0 * df1dφ) / denom;\r\n      φ -= dφ;\r\n      λ -= dλ;\r\n      if (Math.abs(dφ) < ε && Math.abs(dλ) < ε) break;\r\n    }\r\n    return [ x < 0 ? -λ : λ, y < 0 ? -φ : φ ];\r\n  };\r\n  (d3.geo.larrivee = function() {\r\n    return projection(larrivee);\r\n  }).raw = larrivee;\r\n  function laskowski(λ, φ) {\r\n    var λ2 = λ * λ, φ2 = φ * φ;\r\n    return [ λ * (.975534 + φ2 * (-.119161 + λ2 * -.0143059 + φ2 * -.0547009)), φ * (1.00384 + λ2 * (.0802894 + φ2 * -.02855 + λ2 * 199025e-9) + φ2 * (.0998909 + φ2 * -.0491032)) ];\r\n  }\r\n  laskowski.invert = function(x, y) {\r\n    var λ = sgn(x) * π, φ = y / 2, i = 50;\r\n    do {\r\n      var λ2 = λ * λ, φ2 = φ * φ, λφ = λ * φ, fx = λ * (.975534 + φ2 * (-.119161 + λ2 * -.0143059 + φ2 * -.0547009)) - x, fy = φ * (1.00384 + λ2 * (.0802894 + φ2 * -.02855 + λ2 * 199025e-9) + φ2 * (.0998909 + φ2 * -.0491032)) - y, δxδλ = .975534 - φ2 * (.119161 + 3 * λ2 * .0143059 + φ2 * .0547009), δxδφ = -λφ * (2 * .119161 + 4 * .0547009 * φ2 + 2 * .0143059 * λ2), δyδλ = λφ * (2 * .0802894 + 4 * 199025e-9 * λ2 + 2 * -.02855 * φ2), δyδφ = 1.00384 + λ2 * (.0802894 + 199025e-9 * λ2) + φ2 * (3 * (.0998909 - .02855 * λ2) - 5 * .0491032 * φ2), denominator = δxδφ * δyδλ - δyδφ * δxδλ, δλ = (fy * δxδφ - fx * δyδφ) / denominator, δφ = (fx * δyδλ - fy * δxδλ) / denominator;\r\n      λ -= δλ, φ -= δφ;\r\n    } while ((Math.abs(δλ) > ε || Math.abs(δφ) > ε) && --i > 0);\r\n    return i && [ λ, φ ];\r\n  };\r\n  (d3.geo.laskowski = function() {\r\n    return projection(laskowski);\r\n  }).raw = laskowski;\r\n  function littrow(λ, φ) {\r\n    return [ Math.sin(λ) / Math.cos(φ), Math.tan(φ) * Math.cos(λ) ];\r\n  }\r\n  littrow.invert = function(x, y) {\r\n    var x2 = x * x, y2 = y * y, y2_1 = y2 + 1, cosφ = x ? Math.SQRT1_2 * Math.sqrt((y2_1 - Math.sqrt(x2 * x2 + 2 * x2 * (y2 - 1) + y2_1 * y2_1)) / x2 + 1) : 1 / Math.sqrt(y2_1);\r\n    return [ asin(x * cosφ), sgn(y) * acos(cosφ) ];\r\n  };\r\n  (d3.geo.littrow = function() {\r\n    return projection(littrow);\r\n  }).raw = littrow;\r\n  function loximuthal(φ0) {\r\n    var cosφ0 = Math.cos(φ0), tanφ0 = Math.tan(π / 4 + φ0 / 2);\r\n    function forward(λ, φ) {\r\n      var y = φ - φ0, x = Math.abs(y) < ε ? λ * cosφ0 : Math.abs(x = π / 4 + φ / 2) < ε || Math.abs(Math.abs(x) - halfπ) < ε ? 0 : λ * y / Math.log(Math.tan(x) / tanφ0);\r\n      return [ x, y ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var λ, φ = y + φ0;\r\n      return [ Math.abs(y) < ε ? x / cosφ0 : Math.abs(λ = π / 4 + φ / 2) < ε || Math.abs(Math.abs(λ) - halfπ) < ε ? 0 : x * Math.log(Math.tan(λ) / tanφ0) / y, φ ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.loximuthal = function() {\r\n    return parallel1Projection(loximuthal).parallel(40);\r\n  }).raw = loximuthal;\r\n  function miller(λ, φ) {\r\n    return [ λ, 1.25 * Math.log(Math.tan(π / 4 + .4 * φ)) ];\r\n  }\r\n  miller.invert = function(x, y) {\r\n    return [ x, 2.5 * Math.atan(Math.exp(.8 * y)) - .625 * π ];\r\n  };\r\n  (d3.geo.miller = function() {\r\n    return projection(miller);\r\n  }).raw = miller;\r\n  function modifiedStereographic(C) {\r\n    var m = C.length - 1;\r\n    function forward(λ, φ) {\r\n      var cosφ = Math.cos(φ), k = 2 / (1 + cosφ * Math.cos(λ)), zr = k * cosφ * Math.sin(λ), zi = k * Math.sin(φ), i = m, w = C[i], ar = w[0], ai = w[1], t;\r\n      while (--i >= 0) {\r\n        w = C[i];\r\n        ar = w[0] + zr * (t = ar) - zi * ai;\r\n        ai = w[1] + zr * ai + zi * t;\r\n      }\r\n      ar = zr * (t = ar) - zi * ai;\r\n      ai = zr * ai + zi * t;\r\n      return [ ar, ai ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var i = 20, zr = x, zi = y;\r\n      do {\r\n        var j = m, w = C[j], ar = w[0], ai = w[1], br = 0, bi = 0, t;\r\n        while (--j >= 0) {\r\n          w = C[j];\r\n          br = ar + zr * (t = br) - zi * bi;\r\n          bi = ai + zr * bi + zi * t;\r\n          ar = w[0] + zr * (t = ar) - zi * ai;\r\n          ai = w[1] + zr * ai + zi * t;\r\n        }\r\n        br = ar + zr * (t = br) - zi * bi;\r\n        bi = ai + zr * bi + zi * t;\r\n        ar = zr * (t = ar) - zi * ai - x;\r\n        ai = zr * ai + zi * t - y;\r\n        var denominator = br * br + bi * bi, δr, δi;\r\n        zr -= δr = (ar * br + ai * bi) / denominator;\r\n        zi -= δi = (ai * br - ar * bi) / denominator;\r\n      } while (Math.abs(δr) + Math.abs(δi) > ε * ε && --i > 0);\r\n      if (i) {\r\n        var ρ = Math.sqrt(zr * zr + zi * zi), c = 2 * Math.atan(ρ * .5), sinc = Math.sin(c);\r\n        return [ Math.atan2(zr * sinc, ρ * Math.cos(c)), ρ ? asin(zi * sinc / ρ) : 0 ];\r\n      }\r\n    };\r\n    return forward;\r\n  }\r\n  var modifiedStereographicCoefficients = {\r\n    alaska: [ [ .9972523, 0 ], [ .0052513, -.0041175 ], [ .0074606, .0048125 ], [ -.0153783, -.1968253 ], [ .0636871, -.1408027 ], [ .3660976, -.2937382 ] ],\r\n    gs48: [ [ .98879, 0 ], [ 0, 0 ], [ -.050909, 0 ], [ 0, 0 ], [ .075528, 0 ] ],\r\n    gs50: [ [ .984299, 0 ], [ .0211642, .0037608 ], [ -.1036018, -.0575102 ], [ -.0329095, -.0320119 ], [ .0499471, .1223335 ], [ .026046, .0899805 ], [ 7388e-7, -.1435792 ], [ .0075848, -.1334108 ], [ -.0216473, .0776645 ], [ -.0225161, .0853673 ] ],\r\n    miller: [ [ .9245, 0 ], [ 0, 0 ], [ .01943, 0 ] ],\r\n    lee: [ [ .721316, 0 ], [ 0, 0 ], [ -.00881625, -.00617325 ] ]\r\n  };\r\n  function modifiedStereographicProjection() {\r\n    var coefficients = modifiedStereographicCoefficients.miller, m = projectionMutator(modifiedStereographic), p = m(coefficients);\r\n    p.coefficients = function(_) {\r\n      if (!arguments.length) return coefficients;\r\n      return m(coefficients = typeof _ === \"string\" ? modifiedStereographicCoefficients[_] : _);\r\n    };\r\n    return p;\r\n  }\r\n  (d3.geo.modifiedStereographic = modifiedStereographicProjection).raw = modifiedStereographic;\r\n  function mtFlatPolarParabolic(λ, φ) {\r\n    var sqrt6 = Math.sqrt(6), sqrt7 = Math.sqrt(7), θ = Math.asin(7 * Math.sin(φ) / (3 * sqrt6));\r\n    return [ sqrt6 * λ * (2 * Math.cos(2 * θ / 3) - 1) / sqrt7, 9 * Math.sin(θ / 3) / sqrt7 ];\r\n  }\r\n  mtFlatPolarParabolic.invert = function(x, y) {\r\n    var sqrt6 = Math.sqrt(6), sqrt7 = Math.sqrt(7), θ = 3 * asin(y * sqrt7 / 9);\r\n    return [ x * sqrt7 / (sqrt6 * (2 * Math.cos(2 * θ / 3) - 1)), asin(Math.sin(θ) * 3 * sqrt6 / 7) ];\r\n  };\r\n  (d3.geo.mtFlatPolarParabolic = function() {\r\n    return projection(mtFlatPolarParabolic);\r\n  }).raw = mtFlatPolarParabolic;\r\n  function mtFlatPolarQuartic(λ, φ) {\r\n    var k = (1 + Math.SQRT1_2) * Math.sin(φ), θ = φ;\r\n    for (var i = 0, δ; i < 25; i++) {\r\n      θ -= δ = (Math.sin(θ / 2) + Math.sin(θ) - k) / (.5 * Math.cos(θ / 2) + Math.cos(θ));\r\n      if (Math.abs(δ) < ε) break;\r\n    }\r\n    return [ λ * (1 + 2 * Math.cos(θ) / Math.cos(θ / 2)) / (3 * Math.SQRT2), 2 * Math.sqrt(3) * Math.sin(θ / 2) / Math.sqrt(2 + Math.SQRT2) ];\r\n  }\r\n  mtFlatPolarQuartic.invert = function(x, y) {\r\n    var sinθ_2 = y * Math.sqrt(2 + Math.SQRT2) / (2 * Math.sqrt(3)), θ = 2 * asin(sinθ_2);\r\n    return [ 3 * Math.SQRT2 * x / (1 + 2 * Math.cos(θ) / Math.cos(θ / 2)), asin((sinθ_2 + Math.sin(θ)) / (1 + Math.SQRT1_2)) ];\r\n  };\r\n  (d3.geo.mtFlatPolarQuartic = function() {\r\n    return projection(mtFlatPolarQuartic);\r\n  }).raw = mtFlatPolarQuartic;\r\n  function mtFlatPolarSinusoidal(λ, φ) {\r\n    var A = Math.sqrt(6 / (4 + π)), k = (1 + π / 4) * Math.sin(φ), θ = φ / 2;\r\n    for (var i = 0, δ; i < 25; i++) {\r\n      θ -= δ = (θ / 2 + Math.sin(θ) - k) / (.5 + Math.cos(θ));\r\n      if (Math.abs(δ) < ε) break;\r\n    }\r\n    return [ A * (.5 + Math.cos(θ)) * λ / 1.5, A * θ ];\r\n  }\r\n  mtFlatPolarSinusoidal.invert = function(x, y) {\r\n    var A = Math.sqrt(6 / (4 + π)), θ = y / A;\r\n    if (Math.abs(Math.abs(θ) - halfπ) < ε) θ = θ < 0 ? -halfπ : halfπ;\r\n    return [ 1.5 * x / (A * (.5 + Math.cos(θ))), asin((θ / 2 + Math.sin(θ)) / (1 + π / 4)) ];\r\n  };\r\n  (d3.geo.mtFlatPolarSinusoidal = function() {\r\n    return projection(mtFlatPolarSinusoidal);\r\n  }).raw = mtFlatPolarSinusoidal;\r\n  function naturalEarth(λ, φ) {\r\n    var φ2 = φ * φ, φ4 = φ2 * φ2;\r\n    return [ λ * (.8707 - .131979 * φ2 + φ4 * (-.013791 + φ4 * (.003971 * φ2 - .001529 * φ4))), φ * (1.007226 + φ2 * (.015085 + φ4 * (-.044475 + .028874 * φ2 - .005916 * φ4))) ];\r\n  }\r\n  naturalEarth.invert = function(x, y) {\r\n    var φ = y, i = 25, δ;\r\n    do {\r\n      var φ2 = φ * φ, φ4 = φ2 * φ2;\r\n      φ -= δ = (φ * (1.007226 + φ2 * (.015085 + φ4 * (-.044475 + .028874 * φ2 - .005916 * φ4))) - y) / (1.007226 + φ2 * (.015085 * 3 + φ4 * (-.044475 * 7 + .028874 * 9 * φ2 - .005916 * 11 * φ4)));\r\n    } while (Math.abs(δ) > ε && --i > 0);\r\n    return [ x / (.8707 + (φ2 = φ * φ) * (-.131979 + φ2 * (-.013791 + φ2 * φ2 * φ2 * (.003971 - .001529 * φ2)))), φ ];\r\n  };\r\n  (d3.geo.naturalEarth = function() {\r\n    return projection(naturalEarth);\r\n  }).raw = naturalEarth;\r\n  function nellHammer(λ, φ) {\r\n    return [ λ * (1 + Math.cos(φ)) / 2, 2 * (φ - Math.tan(φ / 2)) ];\r\n  }\r\n  nellHammer.invert = function(x, y) {\r\n    var p = y / 2;\r\n    for (var i = 0, δ = Infinity; i < 10 && Math.abs(δ) > ε; i++) {\r\n      var c = Math.cos(y / 2);\r\n      y -= δ = (y - Math.tan(y / 2) - p) / (1 - .5 / (c * c));\r\n    }\r\n    return [ 2 * x / (1 + Math.cos(y)), y ];\r\n  };\r\n  (d3.geo.nellHammer = function() {\r\n    return projection(nellHammer);\r\n  }).raw = nellHammer;\r\n  var pattersonK1 = 1.0148, pattersonK2 = .23185, pattersonK3 = -.14499, pattersonK4 = .02406, pattersonC1 = pattersonK1, pattersonC2 = 5 * pattersonK2, pattersonC3 = 7 * pattersonK3, pattersonC4 = 9 * pattersonK4, pattersonYmax = 1.790857183;\r\n  function patterson(λ, φ) {\r\n    var φ2 = φ * φ;\r\n    return [ λ, φ * (pattersonK1 + φ2 * φ2 * (pattersonK2 + φ2 * (pattersonK3 + pattersonK4 * φ2))) ];\r\n  }\r\n  patterson.invert = function(x, y) {\r\n    if (y > pattersonYmax) y = pattersonYmax; else if (y < -pattersonYmax) y = -pattersonYmax;\r\n    var yc = y, δ;\r\n    do {\r\n      var y2 = yc * yc;\r\n      yc -= δ = (yc * (pattersonK1 + y2 * y2 * (pattersonK2 + y2 * (pattersonK3 + pattersonK4 * y2))) - y) / (pattersonC1 + y2 * y2 * (pattersonC2 + y2 * (pattersonC3 + pattersonC4 * y2)));\r\n    } while (Math.abs(δ) > ε);\r\n    return [ x, yc ];\r\n  };\r\n  (d3.geo.patterson = function() {\r\n    return projection(patterson);\r\n  }).raw = patterson;\r\n  var peirceQuincuncialProjection = quincuncialProjection(guyou);\r\n  (d3.geo.peirceQuincuncial = function() {\r\n    return peirceQuincuncialProjection().quincuncial(true).rotate([ -90, -90, 45 ]).clipAngle(180 - 1e-6);\r\n  }).raw = peirceQuincuncialProjection.raw;\r\n  function polyconic(λ, φ) {\r\n    if (Math.abs(φ) < ε) return [ λ, 0 ];\r\n    var tanφ = Math.tan(φ), k = λ * Math.sin(φ);\r\n    return [ Math.sin(k) / tanφ, φ + (1 - Math.cos(k)) / tanφ ];\r\n  }\r\n  polyconic.invert = function(x, y) {\r\n    if (Math.abs(y) < ε) return [ x, 0 ];\r\n    var k = x * x + y * y, φ = y * .5, i = 10, δ;\r\n    do {\r\n      var tanφ = Math.tan(φ), secφ = 1 / Math.cos(φ), j = k - 2 * y * φ + φ * φ;\r\n      φ -= δ = (tanφ * j + 2 * (φ - y)) / (2 + j * secφ * secφ + 2 * (φ - y) * tanφ);\r\n    } while (Math.abs(δ) > ε && --i > 0);\r\n    tanφ = Math.tan(φ);\r\n    return [ (Math.abs(y) < Math.abs(φ + 1 / tanφ) ? asin(x * tanφ) : sgn(x) * (acos(Math.abs(x * tanφ)) + halfπ)) / Math.sin(φ), φ ];\r\n  };\r\n  (d3.geo.polyconic = function() {\r\n    return projection(polyconic);\r\n  }).raw = polyconic;\r\n  function rectangularPolyconic(φ0) {\r\n    var sinφ0 = Math.sin(φ0);\r\n    function forward(λ, φ) {\r\n      var A = sinφ0 ? Math.tan(λ * sinφ0 / 2) / sinφ0 : λ / 2;\r\n      if (!φ) return [ 2 * A, -φ0 ];\r\n      var E = 2 * Math.atan(A * Math.sin(φ)), cotφ = 1 / Math.tan(φ);\r\n      return [ Math.sin(E) * cotφ, φ + (1 - Math.cos(E)) * cotφ - φ0 ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      if (Math.abs(y += φ0) < ε) return [ sinφ0 ? 2 * Math.atan(sinφ0 * x / 2) / sinφ0 : x, 0 ];\r\n      var k = x * x + y * y, φ = 0, i = 10, δ;\r\n      do {\r\n        var tanφ = Math.tan(φ), secφ = 1 / Math.cos(φ), j = k - 2 * y * φ + φ * φ;\r\n        φ -= δ = (tanφ * j + 2 * (φ - y)) / (2 + j * secφ * secφ + 2 * (φ - y) * tanφ);\r\n      } while (Math.abs(δ) > ε && --i > 0);\r\n      var E = x * (tanφ = Math.tan(φ)), A = Math.tan(Math.abs(y) < Math.abs(φ + 1 / tanφ) ? asin(E) * .5 : acos(E) * .5 + π / 4) / Math.sin(φ);\r\n      return [ sinφ0 ? 2 * Math.atan(sinφ0 * A) / sinφ0 : 2 * A, φ ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.rectangularPolyconic = function() {\r\n    return parallel1Projection(rectangularPolyconic);\r\n  }).raw = rectangularPolyconic;\r\n  var robinsonConstants = [ [ .9986, -.062 ], [ 1, 0 ], [ .9986, .062 ], [ .9954, .124 ], [ .99, .186 ], [ .9822, .248 ], [ .973, .31 ], [ .96, .372 ], [ .9427, .434 ], [ .9216, .4958 ], [ .8962, .5571 ], [ .8679, .6176 ], [ .835, .6769 ], [ .7986, .7346 ], [ .7597, .7903 ], [ .7186, .8435 ], [ .6732, .8936 ], [ .6213, .9394 ], [ .5722, .9761 ], [ .5322, 1 ] ];\r\n  robinsonConstants.forEach(function(d) {\r\n    d[1] *= 1.0144;\r\n  });\r\n  function robinson(λ, φ) {\r\n    var i = Math.min(18, Math.abs(φ) * 36 / π), i0 = Math.floor(i), di = i - i0, ax = (k = robinsonConstants[i0])[0], ay = k[1], bx = (k = robinsonConstants[++i0])[0], by = k[1], cx = (k = robinsonConstants[Math.min(19, ++i0)])[0], cy = k[1], k;\r\n    return [ λ * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), (φ > 0 ? halfπ : -halfπ) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) ];\r\n  }\r\n  robinson.invert = function(x, y) {\r\n    var yy = y / halfπ, φ = yy * 90, i = Math.min(18, Math.abs(φ / 5)), i0 = Math.max(0, Math.floor(i));\r\n    do {\r\n      var ay = robinsonConstants[i0][1], by = robinsonConstants[i0 + 1][1], cy = robinsonConstants[Math.min(19, i0 + 2)][1], u = cy - ay, v = cy - 2 * by + ay, t = 2 * (Math.abs(yy) - by) / u, c = v / u, di = t * (1 - c * t * (1 - 2 * c * t));\r\n      if (di >= 0 || i0 === 1) {\r\n        φ = (y >= 0 ? 5 : -5) * (di + i);\r\n        var j = 50, δ;\r\n        do {\r\n          i = Math.min(18, Math.abs(φ) / 5);\r\n          i0 = Math.floor(i);\r\n          di = i - i0;\r\n          ay = robinsonConstants[i0][1];\r\n          by = robinsonConstants[i0 + 1][1];\r\n          cy = robinsonConstants[Math.min(19, i0 + 2)][1];\r\n          φ -= (δ = (y >= 0 ? halfπ : -halfπ) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\r\n        } while (Math.abs(δ) > ε2 && --j > 0);\r\n        break;\r\n      }\r\n    } while (--i0 >= 0);\r\n    var ax = robinsonConstants[i0][0], bx = robinsonConstants[i0 + 1][0], cx = robinsonConstants[Math.min(19, i0 + 2)][0];\r\n    return [ x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), φ * radians ];\r\n  };\r\n  (d3.geo.robinson = function() {\r\n    return projection(robinson);\r\n  }).raw = robinson;\r\n  function satelliteVertical(P) {\r\n    function forward(λ, φ) {\r\n      var cosφ = Math.cos(φ), k = (P - 1) / (P - cosφ * Math.cos(λ));\r\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ2 = x * x + y * y, ρ = Math.sqrt(ρ2), sinc = (P - Math.sqrt(1 - ρ2 * (P + 1) / (P - 1))) / ((P - 1) / ρ + ρ / (P - 1));\r\n      return [ Math.atan2(x * sinc, ρ * Math.sqrt(1 - sinc * sinc)), ρ ? asin(y * sinc / ρ) : 0 ];\r\n    };\r\n    return forward;\r\n  }\r\n  function satellite(P, ω) {\r\n    var vertical = satelliteVertical(P);\r\n    if (!ω) return vertical;\r\n    var cosω = Math.cos(ω), sinω = Math.sin(ω);\r\n    function forward(λ, φ) {\r\n      var coordinates = vertical(λ, φ), y = coordinates[1], A = y * sinω / (P - 1) + cosω;\r\n      return [ coordinates[0] * cosω / A, y / A ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var k = (P - 1) / (P - 1 - y * sinω);\r\n      return vertical.invert(k * x, k * y * cosω);\r\n    };\r\n    return forward;\r\n  }\r\n  function satelliteProjection() {\r\n    var P = 1.4, ω = 0, m = projectionMutator(satellite), p = m(P, ω);\r\n    p.distance = function(_) {\r\n      if (!arguments.length) return P;\r\n      return m(P = +_, ω);\r\n    };\r\n    p.tilt = function(_) {\r\n      if (!arguments.length) return ω * 180 / π;\r\n      return m(P, ω = _ * π / 180);\r\n    };\r\n    return p;\r\n  }\r\n  (d3.geo.satellite = satelliteProjection).raw = satellite;\r\n  function times(λ, φ) {\r\n    var t = Math.tan(φ / 2), s = Math.sin(π / 4 * t);\r\n    return [ λ * (.74482 - .34588 * s * s), 1.70711 * t ];\r\n  }\r\n  times.invert = function(x, y) {\r\n    var t = y / 1.70711, s = Math.sin(π / 4 * t);\r\n    return [ x / (.74482 - .34588 * s * s), 2 * Math.atan(t) ];\r\n  };\r\n  (d3.geo.times = function() {\r\n    return projection(times);\r\n  }).raw = times;\r\n  function twoPointEquidistant(z0) {\r\n    if (!z0) return d3.geo.azimuthalEquidistant.raw;\r\n    var λa = -z0 / 2, λb = -λa, z02 = z0 * z0, tanλ0 = Math.tan(λb), S = .5 / Math.sin(λb);\r\n    function forward(λ, φ) {\r\n      var za = acos(Math.cos(φ) * Math.cos(λ - λa)), zb = acos(Math.cos(φ) * Math.cos(λ - λb)), ys = φ < 0 ? -1 : 1;\r\n      za *= za, zb *= zb;\r\n      return [ (za - zb) / (2 * z0), ys * asqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var y2 = y * y, cosza = Math.cos(Math.sqrt(y2 + (t = x + λa) * t)), coszb = Math.cos(Math.sqrt(y2 + (t = x + λb) * t)), t, d;\r\n      return [ Math.atan2(d = cosza - coszb, t = (cosza + coszb) * tanλ0), (y < 0 ? -1 : 1) * acos(Math.sqrt(t * t + d * d) * S) ];\r\n    };\r\n    return forward;\r\n  }\r\n  function twoPointEquidistantProjection() {\r\n    var points = [ [ 0, 0 ], [ 0, 0 ] ], m = projectionMutator(twoPointEquidistant), p = m(0), rotate = p.rotate;\r\n    delete p.rotate;\r\n    p.points = function(_) {\r\n      if (!arguments.length) return points;\r\n      points = _;\r\n      var interpolate = d3.geo.interpolate(_[0], _[1]), origin = interpolate(.5), p = d3.geo.rotation([ -origin[0], -origin[1] ])(_[0]), b = interpolate.distance * .5, γ = -asin(Math.sin(p[1] * radians) / Math.sin(b));\r\n      if (p[0] > 0) γ = π - γ;\r\n      rotate.call(p, [ -origin[0], -origin[1], -γ * degrees ]);\r\n      return m(b * 2);\r\n    };\r\n    return p;\r\n  }\r\n  (d3.geo.twoPointEquidistant = twoPointEquidistantProjection).raw = twoPointEquidistant;\r\n  function twoPointAzimuthal(d) {\r\n    var cosd = Math.cos(d);\r\n    function forward(λ, φ) {\r\n      var coordinates = d3.geo.gnomonic.raw(λ, φ);\r\n      coordinates[0] *= cosd;\r\n      return coordinates;\r\n    }\r\n    forward.invert = function(x, y) {\r\n      return d3.geo.gnomonic.raw.invert(x / cosd, y);\r\n    };\r\n    return forward;\r\n  }\r\n  function twoPointAzimuthalProjection() {\r\n    var points = [ [ 0, 0 ], [ 0, 0 ] ], m = projectionMutator(twoPointAzimuthal), p = m(0), rotate = p.rotate;\r\n    delete p.rotate;\r\n    p.points = function(_) {\r\n      if (!arguments.length) return points;\r\n      points = _;\r\n      var interpolate = d3.geo.interpolate(_[0], _[1]), origin = interpolate(.5), p = d3.geo.rotation([ -origin[0], -origin[1] ])(_[0]), b = interpolate.distance * .5, γ = -asin(Math.sin(p[1] * radians) / Math.sin(b));\r\n      if (p[0] > 0) γ = π - γ;\r\n      rotate.call(p, [ -origin[0], -origin[1], -γ * degrees ]);\r\n      return m(b);\r\n    };\r\n    return p;\r\n  }\r\n  (d3.geo.twoPointAzimuthal = twoPointAzimuthalProjection).raw = twoPointAzimuthal;\r\n  function vanDerGrinten(λ, φ) {\r\n    if (Math.abs(φ) < ε) return [ λ, 0 ];\r\n    var sinθ = Math.abs(φ / halfπ), θ = asin(sinθ);\r\n    if (Math.abs(λ) < ε || Math.abs(Math.abs(φ) - halfπ) < ε) return [ 0, sgn(φ) * π * Math.tan(θ / 2) ];\r\n    var cosθ = Math.cos(θ), A = Math.abs(π / λ - λ / π) / 2, A2 = A * A, G = cosθ / (sinθ + cosθ - 1), P = G * (2 / sinθ - 1), P2 = P * P, P2_A2 = P2 + A2, G_P2 = G - P2, Q = A2 + G;\r\n    return [ sgn(λ) * π * (A * G_P2 + Math.sqrt(A2 * G_P2 * G_P2 - P2_A2 * (G * G - P2))) / P2_A2, sgn(φ) * π * (P * Q - A * Math.sqrt((A2 + 1) * P2_A2 - Q * Q)) / P2_A2 ];\r\n  }\r\n  vanDerGrinten.invert = function(x, y) {\r\n    if (Math.abs(y) < ε) return [ x, 0 ];\r\n    if (Math.abs(x) < ε) return [ 0, halfπ * Math.sin(2 * Math.atan(y / π)) ];\r\n    var x2 = (x /= π) * x, y2 = (y /= π) * y, x2_y2 = x2 + y2, z = x2_y2 * x2_y2, c1 = -Math.abs(y) * (1 + x2_y2), c2 = c1 - 2 * y2 + x2, c3 = -2 * c1 + 1 + 2 * y2 + z, d = y2 / c3 + (2 * c2 * c2 * c2 / (c3 * c3 * c3) - 9 * c1 * c2 / (c3 * c3)) / 27, a1 = (c1 - c2 * c2 / (3 * c3)) / c3, m1 = 2 * Math.sqrt(-a1 / 3), θ1 = acos(3 * d / (a1 * m1)) / 3;\r\n    return [ π * (x2_y2 - 1 + Math.sqrt(1 + 2 * (x2 - y2) + z)) / (2 * x), sgn(y) * π * (-m1 * Math.cos(θ1 + π / 3) - c2 / (3 * c3)) ];\r\n  };\r\n  (d3.geo.vanDerGrinten = function() {\r\n    return projection(vanDerGrinten);\r\n  }).raw = vanDerGrinten;\r\n  function vanDerGrinten2(λ, φ) {\r\n    if (Math.abs(φ) < ε) return [ λ, 0 ];\r\n    var sinθ = Math.abs(φ / halfπ), θ = asin(sinθ);\r\n    if (Math.abs(λ) < ε || Math.abs(Math.abs(φ) - halfπ) < ε) return [ 0, sgn(φ) * π * Math.tan(θ / 2) ];\r\n    var cosθ = Math.cos(θ), A = Math.abs(π / λ - λ / π) / 2, A2 = A * A, x1 = cosθ * (Math.sqrt(1 + A2) - A * cosθ) / (1 + A2 * sinθ * sinθ);\r\n    return [ sgn(λ) * π * x1, sgn(φ) * π * asqrt(1 - x1 * (2 * A + x1)) ];\r\n  }\r\n  vanDerGrinten2.invert = function(x, y) {\r\n    if (!x) return [ 0, halfπ * Math.sin(2 * Math.atan(y / π)) ];\r\n    var x1 = Math.abs(x / π), A = (1 - x1 * x1 - (y /= π) * y) / (2 * x1), A2 = A * A, B = Math.sqrt(A2 + 1);\r\n    return [ sgn(x) * π * (B - A), sgn(y) * halfπ * Math.sin(2 * Math.atan2(Math.sqrt((1 - 2 * A * x1) * (A + B) - x1), Math.sqrt(B + A + x1))) ];\r\n  };\r\n  (d3.geo.vanDerGrinten2 = function() {\r\n    return projection(vanDerGrinten2);\r\n  }).raw = vanDerGrinten2;\r\n  function vanDerGrinten3(λ, φ) {\r\n    if (Math.abs(φ) < ε) return [ λ, 0 ];\r\n    var sinθ = φ / halfπ, θ = asin(sinθ);\r\n    if (Math.abs(λ) < ε || Math.abs(Math.abs(φ) - halfπ) < ε) return [ 0, π * Math.tan(θ / 2) ];\r\n    var A = (π / λ - λ / π) / 2, y1 = sinθ / (1 + Math.cos(θ));\r\n    return [ π * (sgn(λ) * asqrt(A * A + 1 - y1 * y1) - A), π * y1 ];\r\n  }\r\n  vanDerGrinten3.invert = function(x, y) {\r\n    if (!y) return [ x, 0 ];\r\n    var y1 = y / π, A = (π * π * (1 - y1 * y1) - x * x) / (2 * π * x);\r\n    return [ x ? π * (sgn(x) * Math.sqrt(A * A + 1) - A) : 0, halfπ * Math.sin(2 * Math.atan(y1)) ];\r\n  };\r\n  (d3.geo.vanDerGrinten3 = function() {\r\n    return projection(vanDerGrinten3);\r\n  }).raw = vanDerGrinten3;\r\n  function vanDerGrinten4(λ, φ) {\r\n    if (!φ) return [ λ, 0 ];\r\n    var φ0 = Math.abs(φ);\r\n    if (!λ || φ0 === halfπ) return [ 0, φ ];\r\n    var B = φ0 / halfπ, B2 = B * B, C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)), C2 = C * C, BC = B * C, B_C2 = B2 + C2 + 2 * BC, B_3C = B + 3 * C, λ0 = λ / halfπ, λ1 = λ0 + 1 / λ0, D = sgn(Math.abs(λ) - halfπ) * Math.sqrt(λ1 * λ1 - 4), D2 = D * D, F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2), x1 = (D * (B_C2 + C2 - 1) + 2 * asqrt(F)) / (4 * B_C2 + D2);\r\n    return [ sgn(λ) * halfπ * x1, sgn(φ) * halfπ * asqrt(1 + D * Math.abs(x1) - x1 * x1) ];\r\n  }\r\n  vanDerGrinten4.invert = function(x, y) {\r\n    if (!x || !y) return [ x, y ];\r\n    y /= π;\r\n    var x1 = sgn(x) * x / halfπ, D = (x1 * x1 - 1 + 4 * y * y) / Math.abs(x1), D2 = D * D, B = 2 * y, i = 50;\r\n    do {\r\n      var B2 = B * B, C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)), C_ = (3 * B - B2 * B - 10) / (2 * B2 * B), C2 = C * C, BC = B * C, B_C = B + C, B_C2 = B_C * B_C, B_3C = B + 3 * C, F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)), F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)), sqrtF = Math.sqrt(F), f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2), f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\r\n      B -= δ = f / f_;\r\n    } while (δ > ε && --i > 0);\r\n    return [ sgn(x) * (Math.sqrt(D * D + 4) + D) * π / 4, halfπ * B ];\r\n  };\r\n  (d3.geo.vanDerGrinten4 = function() {\r\n    return projection(vanDerGrinten4);\r\n  }).raw = vanDerGrinten4;\r\n  var wagner4 = function() {\r\n    var A = 4 * π + 3 * Math.sqrt(3), B = 2 * Math.sqrt(2 * π * Math.sqrt(3) / A);\r\n    return mollweideBromley(B * Math.sqrt(3) / π, B, A / 6);\r\n  }();\r\n  (d3.geo.wagner4 = function() {\r\n    return projection(wagner4);\r\n  }).raw = wagner4;\r\n  function wagner6(λ, φ) {\r\n    return [ λ * Math.sqrt(1 - 3 * φ * φ / (π * π)), φ ];\r\n  }\r\n  wagner6.invert = function(x, y) {\r\n    return [ x / Math.sqrt(1 - 3 * y * y / (π * π)), y ];\r\n  };\r\n  (d3.geo.wagner6 = function() {\r\n    return projection(wagner6);\r\n  }).raw = wagner6;\r\n  function wagner7(λ, φ) {\r\n    var s = .90631 * Math.sin(φ), c0 = Math.sqrt(1 - s * s), c1 = Math.sqrt(2 / (1 + c0 * Math.cos(λ /= 3)));\r\n    return [ 2.66723 * c0 * c1 * Math.sin(λ), 1.24104 * s * c1 ];\r\n  }\r\n  wagner7.invert = function(x, y) {\r\n    var t1 = x / 2.66723, t2 = y / 1.24104, p = Math.sqrt(t1 * t1 + t2 * t2), c = 2 * asin(p / 2);\r\n    return [ 3 * Math.atan2(x * Math.tan(c), 2.66723 * p), p && asin(y * Math.sin(c) / (1.24104 * .90631 * p)) ];\r\n  };\r\n  (d3.geo.wagner7 = function() {\r\n    return projection(wagner7);\r\n  }).raw = wagner7;\r\n  function wiechel(λ, φ) {\r\n    var cosφ = Math.cos(φ), sinφ = Math.cos(λ) * cosφ, sin1_φ = 1 - sinφ, cosλ = Math.cos(λ = Math.atan2(Math.sin(λ) * cosφ, -Math.sin(φ))), sinλ = Math.sin(λ);\r\n    cosφ = asqrt(1 - sinφ * sinφ);\r\n    return [ sinλ * cosφ - cosλ * sin1_φ, -cosλ * cosφ - sinλ * sin1_φ ];\r\n  }\r\n  wiechel.invert = function(x, y) {\r\n    var w = -.5 * (x * x + y * y), k = Math.sqrt(-w * (2 + w)), b = y * w + x * k, a = x * w - y * k, D = Math.sqrt(a * a + b * b);\r\n    return [ Math.atan2(k * b, D * (1 + w)), D ? -asin(k * a / D) : 0 ];\r\n  };\r\n  (d3.geo.wiechel = function() {\r\n    return projection(wiechel);\r\n  }).raw = wiechel;\r\n  function winkel3(λ, φ) {\r\n    var coordinates = aitoff(λ, φ);\r\n    return [ (coordinates[0] + λ / halfπ) / 2, (coordinates[1] + φ) / 2 ];\r\n  }\r\n  winkel3.invert = function(x, y) {\r\n    var λ = x, φ = y, i = 25;\r\n    do {\r\n      var cosφ = Math.cos(φ), sinφ = Math.sin(φ), sin_2φ = Math.sin(2 * φ), sin2φ = sinφ * sinφ, cos2φ = cosφ * cosφ, sinλ = Math.sin(λ), cosλ_2 = Math.cos(λ / 2), sinλ_2 = Math.sin(λ / 2), sin2λ_2 = sinλ_2 * sinλ_2, C = 1 - cos2φ * cosλ_2 * cosλ_2, E = C ? acos(cosφ * cosλ_2) * Math.sqrt(F = 1 / C) : F = 0, F, fx = .5 * (2 * E * cosφ * sinλ_2 + λ / halfπ) - x, fy = .5 * (E * sinφ + φ) - y, δxδλ = .5 * F * (cos2φ * sin2λ_2 + E * cosφ * cosλ_2 * sin2φ) + .5 / halfπ, δxδφ = F * (sinλ * sin_2φ / 4 - E * sinφ * sinλ_2), δyδλ = .125 * F * (sin_2φ * sinλ_2 - E * sinφ * cos2φ * sinλ), δyδφ = .5 * F * (sin2φ * cosλ_2 + E * sin2λ_2 * cosφ) + .5, denominator = δxδφ * δyδλ - δyδφ * δxδλ, δλ = (fy * δxδφ - fx * δyδφ) / denominator, δφ = (fx * δyδλ - fy * δxδλ) / denominator;\r\n      λ -= δλ, φ -= δφ;\r\n    } while ((Math.abs(δλ) > ε || Math.abs(δφ) > ε) && --i > 0);\r\n    return [ λ, φ ];\r\n  };\r\n  (d3.geo.winkel3 = function() {\r\n    return projection(winkel3);\r\n  }).raw = winkel3;\r\n  function cassini(λ, φ) {\r\n    var cosφ = Math.cos(φ), tanφ = Math.tan(φ), cosλ = Math.cos(λ), sinλ = Math.sin(λ);\r\n    return [ Math.asin(cosφ * sinλ), Math.atan2(tanφ, cosλ) ];\r\n  }\r\n  cassini.invert = function(x, y) {\r\n    return [ Math.asin(Math.cos(x) * Math.sin(y)), Math.atan2(Math.tan(x), Math.cos(y)) ];\r\n  };\r\n  (d3.geo.cassini = function() {\r\n    return projection(cassini);\r\n  }).raw = cassini;  \r\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/d3-celestial/lib/d3.geo.projection.js\n");

/***/ }),

/***/ "./node_modules/d3-celestial/lib/d3.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-celestial/lib/d3.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\r\n  var d3 = {\r\n    version: \"3.5.17\"\r\n  };\r\n  var d3_arraySlice = [].slice, d3_array = function(list) {\r\n    return d3_arraySlice.call(list);\r\n  };\r\n  var d3_document = this.document;\r\n  function d3_documentElement(node) {\r\n    return node && (node.ownerDocument || node.document || node).documentElement;\r\n  }\r\n  function d3_window(node) {\r\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\r\n  }\r\n  if (d3_document) {\r\n    try {\r\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\r\n    } catch (e) {\r\n      d3_array = function(list) {\r\n        var i = list.length, array = new Array(i);\r\n        while (i--) array[i] = list[i];\r\n        return array;\r\n      };\r\n    }\r\n  }\r\n  if (!Date.now) Date.now = function() {\r\n    return +new Date();\r\n  };\r\n  if (d3_document) {\r\n    try {\r\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\r\n    } catch (error) {\r\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\r\n      d3_element_prototype.setAttribute = function(name, value) {\r\n        d3_element_setAttribute.call(this, name, value + \"\");\r\n      };\r\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\r\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\r\n      };\r\n      d3_style_prototype.setProperty = function(name, value, priority) {\r\n        d3_style_setProperty.call(this, name, value + \"\", priority);\r\n      };\r\n    }\r\n  }\r\n  d3.ascending = d3_ascending;\r\n  function d3_ascending(a, b) {\r\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n  }\r\n  d3.descending = function(a, b) {\r\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n  };\r\n  d3.min = function(array, f) {\r\n    var i = -1, n = array.length, a, b;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\r\n        a = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\r\n    } else {\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\r\n        a = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\r\n    }\r\n    return a;\r\n  };\r\n  d3.max = function(array, f) {\r\n    var i = -1, n = array.length, a, b;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\r\n        a = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\r\n    } else {\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\r\n        a = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\r\n    }\r\n    return a;\r\n  };\r\n  d3.extent = function(array, f) {\r\n    var i = -1, n = array.length, a, b, c;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\r\n        a = c = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = array[i]) != null) {\r\n        if (a > b) a = b;\r\n        if (c < b) c = b;\r\n      }\r\n    } else {\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\r\n        a = c = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\r\n        if (a > b) a = b;\r\n        if (c < b) c = b;\r\n      }\r\n    }\r\n    return [ a, c ];\r\n  };\r\n  function d3_number(x) {\r\n    return x === null ? NaN : +x;\r\n  }\r\n  function d3_numeric(x) {\r\n    return !isNaN(x);\r\n  }\r\n  d3.sum = function(array, f) {\r\n    var s = 0, n = array.length, a, i = -1;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\r\n    } else {\r\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\r\n    }\r\n    return s;\r\n  };\r\n  d3.mean = function(array, f) {\r\n    var s = 0, n = array.length, a, i = -1, j = n;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\r\n    } else {\r\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\r\n    }\r\n    if (j) return s / j;\r\n  };\r\n  d3.quantile = function(values, p) {\r\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\r\n    return e ? v + e * (values[h] - v) : v;\r\n  };\r\n  d3.median = function(array, f) {\r\n    var numbers = [], n = array.length, a, i = -1;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\r\n    } else {\r\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\r\n    }\r\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\r\n  };\r\n  d3.variance = function(array, f) {\r\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) {\r\n        if (d3_numeric(a = d3_number(array[i]))) {\r\n          d = a - m;\r\n          m += d / ++j;\r\n          s += d * (a - m);\r\n        }\r\n      }\r\n    } else {\r\n      while (++i < n) {\r\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\r\n          d = a - m;\r\n          m += d / ++j;\r\n          s += d * (a - m);\r\n        }\r\n      }\r\n    }\r\n    if (j > 1) return s / (j - 1);\r\n  };\r\n  d3.deviation = function() {\r\n    var v = d3.variance.apply(this, arguments);\r\n    return v ? Math.sqrt(v) : v;\r\n  };\r\n  function d3_bisector(compare) {\r\n    return {\r\n      left: function(a, x, lo, hi) {\r\n        if (arguments.length < 3) lo = 0;\r\n        if (arguments.length < 4) hi = a.length;\r\n        while (lo < hi) {\r\n          var mid = lo + hi >>> 1;\r\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\r\n        }\r\n        return lo;\r\n      },\r\n      right: function(a, x, lo, hi) {\r\n        if (arguments.length < 3) lo = 0;\r\n        if (arguments.length < 4) hi = a.length;\r\n        while (lo < hi) {\r\n          var mid = lo + hi >>> 1;\r\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\r\n        }\r\n        return lo;\r\n      }\r\n    };\r\n  }\r\n  var d3_bisect = d3_bisector(d3_ascending);\r\n  d3.bisectLeft = d3_bisect.left;\r\n  d3.bisect = d3.bisectRight = d3_bisect.right;\r\n  d3.bisector = function(f) {\r\n    return d3_bisector(f.length === 1 ? function(d, x) {\r\n      return d3_ascending(f(d), x);\r\n    } : f);\r\n  };\r\n  d3.shuffle = function(array, i0, i1) {\r\n    if ((m = arguments.length) < 3) {\r\n      i1 = array.length;\r\n      if (m < 2) i0 = 0;\r\n    }\r\n    var m = i1 - i0, t, i;\r\n    while (m) {\r\n      i = Math.random() * m-- | 0;\r\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\r\n    }\r\n    return array;\r\n  };\r\n  d3.permute = function(array, indexes) {\r\n    var i = indexes.length, permutes = new Array(i);\r\n    while (i--) permutes[i] = array[indexes[i]];\r\n    return permutes;\r\n  };\r\n  d3.pairs = function(array) {\r\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\r\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\r\n    return pairs;\r\n  };\r\n  d3.transpose = function(matrix) {\r\n    if (!(n = matrix.length)) return [];\r\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\r\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\r\n        row[j] = matrix[j][i];\r\n      }\r\n    }\r\n    return transpose;\r\n  };\r\n  function d3_transposeLength(d) {\r\n    return d.length;\r\n  }\r\n  d3.zip = function() {\r\n    return d3.transpose(arguments);\r\n  };\r\n  d3.keys = function(map) {\r\n    var keys = [];\r\n    for (var key in map) keys.push(key);\r\n    return keys;\r\n  };\r\n  d3.values = function(map) {\r\n    var values = [];\r\n    for (var key in map) values.push(map[key]);\r\n    return values;\r\n  };\r\n  d3.entries = function(map) {\r\n    var entries = [];\r\n    for (var key in map) entries.push({\r\n      key: key,\r\n      value: map[key]\r\n    });\r\n    return entries;\r\n  };\r\n  d3.merge = function(arrays) {\r\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\r\n    while (++i < n) j += arrays[i].length;\r\n    merged = new Array(j);\r\n    while (--n >= 0) {\r\n      array = arrays[n];\r\n      m = array.length;\r\n      while (--m >= 0) {\r\n        merged[--j] = array[m];\r\n      }\r\n    }\r\n    return merged;\r\n  };\r\n  var abs = Math.abs;\r\n  d3.range = function(start, stop, step) {\r\n    if (arguments.length < 3) {\r\n      step = 1;\r\n      if (arguments.length < 2) {\r\n        stop = start;\r\n        start = 0;\r\n      }\r\n    }\r\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\r\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\r\n    start *= k, stop *= k, step *= k;\r\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\r\n    return range;\r\n  };\r\n  function d3_range_integerScale(x) {\r\n    var k = 1;\r\n    while (x * k % 1) k *= 10;\r\n    return k;\r\n  }\r\n  function d3_class(ctor, properties) {\r\n    for (var key in properties) {\r\n      Object.defineProperty(ctor.prototype, key, {\r\n        value: properties[key],\r\n        enumerable: false\r\n      });\r\n    }\r\n  }\r\n  d3.map = function(object, f) {\r\n    var map = new d3_Map();\r\n    if (object instanceof d3_Map) {\r\n      object.forEach(function(key, value) {\r\n        map.set(key, value);\r\n      });\r\n    } else if (Array.isArray(object)) {\r\n      var i = -1, n = object.length, o;\r\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\r\n    } else {\r\n      for (var key in object) map.set(key, object[key]);\r\n    }\r\n    return map;\r\n  };\r\n  function d3_Map() {\r\n    this._ = Object.create(null);\r\n  }\r\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\r\n  d3_class(d3_Map, {\r\n    has: d3_map_has,\r\n    get: function(key) {\r\n      return this._[d3_map_escape(key)];\r\n    },\r\n    set: function(key, value) {\r\n      return this._[d3_map_escape(key)] = value;\r\n    },\r\n    remove: d3_map_remove,\r\n    keys: d3_map_keys,\r\n    values: function() {\r\n      var values = [];\r\n      for (var key in this._) values.push(this._[key]);\r\n      return values;\r\n    },\r\n    entries: function() {\r\n      var entries = [];\r\n      for (var key in this._) entries.push({\r\n        key: d3_map_unescape(key),\r\n        value: this._[key]\r\n      });\r\n      return entries;\r\n    },\r\n    size: d3_map_size,\r\n    empty: d3_map_empty,\r\n    forEach: function(f) {\r\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\r\n    }\r\n  });\r\n  function d3_map_escape(key) {\r\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\r\n  }\r\n  function d3_map_unescape(key) {\r\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\r\n  }\r\n  function d3_map_has(key) {\r\n    return d3_map_escape(key) in this._;\r\n  }\r\n  function d3_map_remove(key) {\r\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\r\n  }\r\n  function d3_map_keys() {\r\n    var keys = [];\r\n    for (var key in this._) keys.push(d3_map_unescape(key));\r\n    return keys;\r\n  }\r\n  function d3_map_size() {\r\n    var size = 0;\r\n    for (var key in this._) ++size;\r\n    return size;\r\n  }\r\n  function d3_map_empty() {\r\n    for (var key in this._) return false;\r\n    return true;\r\n  }\r\n  d3.nest = function() {\r\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\r\n    function map(mapType, array, depth) {\r\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\r\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\r\n      while (++i < n) {\r\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\r\n          values.push(object);\r\n        } else {\r\n          valuesByKey.set(keyValue, [ object ]);\r\n        }\r\n      }\r\n      if (mapType) {\r\n        object = mapType();\r\n        setter = function(keyValue, values) {\r\n          object.set(keyValue, map(mapType, values, depth));\r\n        };\r\n      } else {\r\n        object = {};\r\n        setter = function(keyValue, values) {\r\n          object[keyValue] = map(mapType, values, depth);\r\n        };\r\n      }\r\n      valuesByKey.forEach(setter);\r\n      return object;\r\n    }\r\n    function entries(map, depth) {\r\n      if (depth >= keys.length) return map;\r\n      var array = [], sortKey = sortKeys[depth++];\r\n      map.forEach(function(key, keyMap) {\r\n        array.push({\r\n          key: key,\r\n          values: entries(keyMap, depth)\r\n        });\r\n      });\r\n      return sortKey ? array.sort(function(a, b) {\r\n        return sortKey(a.key, b.key);\r\n      }) : array;\r\n    }\r\n    nest.map = function(array, mapType) {\r\n      return map(mapType, array, 0);\r\n    };\r\n    nest.entries = function(array) {\r\n      return entries(map(d3.map, array, 0), 0);\r\n    };\r\n    nest.key = function(d) {\r\n      keys.push(d);\r\n      return nest;\r\n    };\r\n    nest.sortKeys = function(order) {\r\n      sortKeys[keys.length - 1] = order;\r\n      return nest;\r\n    };\r\n    nest.sortValues = function(order) {\r\n      sortValues = order;\r\n      return nest;\r\n    };\r\n    nest.rollup = function(f) {\r\n      rollup = f;\r\n      return nest;\r\n    };\r\n    return nest;\r\n  };\r\n  d3.set = function(array) {\r\n    var set = new d3_Set();\r\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\r\n    return set;\r\n  };\r\n  function d3_Set() {\r\n    this._ = Object.create(null);\r\n  }\r\n  d3_class(d3_Set, {\r\n    has: d3_map_has,\r\n    add: function(key) {\r\n      this._[d3_map_escape(key += \"\")] = true;\r\n      return key;\r\n    },\r\n    remove: d3_map_remove,\r\n    values: d3_map_keys,\r\n    size: d3_map_size,\r\n    empty: d3_map_empty,\r\n    forEach: function(f) {\r\n      for (var key in this._) f.call(this, d3_map_unescape(key));\r\n    }\r\n  });\r\n  d3.behavior = {};\r\n  function d3_identity(d) {\r\n    return d;\r\n  }\r\n  d3.rebind = function(target, source) {\r\n    var i = 1, n = arguments.length, method;\r\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\r\n    return target;\r\n  };\r\n  function d3_rebind(target, source, method) {\r\n    return function() {\r\n      var value = method.apply(source, arguments);\r\n      return value === source ? target : value;\r\n    };\r\n  }\r\n  function d3_vendorSymbol(object, name) {\r\n    if (name in object) return name;\r\n    name = name.charAt(0).toUpperCase() + name.slice(1);\r\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\r\n      var prefixName = d3_vendorPrefixes[i] + name;\r\n      if (prefixName in object) return prefixName;\r\n    }\r\n  }\r\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\r\n  function d3_noop() {}\r\n  d3.dispatch = function() {\r\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\r\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\r\n    return dispatch;\r\n  };\r\n  function d3_dispatch() {}\r\n  d3_dispatch.prototype.on = function(type, listener) {\r\n    var i = type.indexOf(\".\"), name = \"\";\r\n    if (i >= 0) {\r\n      name = type.slice(i + 1);\r\n      type = type.slice(0, i);\r\n    }\r\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\r\n    if (arguments.length === 2) {\r\n      if (listener == null) for (type in this) {\r\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\r\n      }\r\n      return this;\r\n    }\r\n  };\r\n  function d3_dispatch_event(dispatch) {\r\n    var listeners = [], listenerByName = new d3_Map();\r\n    function event() {\r\n      var z = listeners, i = -1, n = z.length, l;\r\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\r\n      return dispatch;\r\n    }\r\n    event.on = function(name, listener) {\r\n      var l = listenerByName.get(name), i;\r\n      if (arguments.length < 2) return l && l.on;\r\n      if (l) {\r\n        l.on = null;\r\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\r\n        listenerByName.remove(name);\r\n      }\r\n      if (listener) listeners.push(listenerByName.set(name, {\r\n        on: listener\r\n      }));\r\n      return dispatch;\r\n    };\r\n    return event;\r\n  }\r\n  d3.event = null;\r\n  function d3_eventPreventDefault() {\r\n    d3.event.preventDefault();\r\n  }\r\n  function d3_eventSource() {\r\n    var e = d3.event, s;\r\n    while (s = e.sourceEvent) e = s;\r\n    return e;\r\n  }\r\n  function d3_eventDispatch(target) {\r\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\r\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\r\n    dispatch.of = function(thiz, argumentz) {\r\n      return function(e1) {\r\n        try {\r\n          var e0 = e1.sourceEvent = d3.event;\r\n          e1.target = target;\r\n          d3.event = e1;\r\n          dispatch[e1.type].apply(thiz, argumentz);\r\n        } finally {\r\n          d3.event = e0;\r\n        }\r\n      };\r\n    };\r\n    return dispatch;\r\n  }\r\n  d3.requote = function(s) {\r\n    return s.replace(d3_requote_re, \"\\\\$&\");\r\n  };\r\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\r\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\r\n    object.__proto__ = prototype;\r\n  } : function(object, prototype) {\r\n    for (var property in prototype) object[property] = prototype[property];\r\n  };\r\n  function d3_selection(groups) {\r\n    d3_subclass(groups, d3_selectionPrototype);\r\n    return groups;\r\n  }\r\n  var d3_select = function(s, n) {\r\n    return n.querySelector(s);\r\n  }, d3_selectAll = function(s, n) {\r\n    return n.querySelectorAll(s);\r\n  }, d3_selectMatches = function(n, s) {\r\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\r\n    d3_selectMatches = function(n, s) {\r\n      return d3_selectMatcher.call(n, s);\r\n    };\r\n    return d3_selectMatches(n, s);\r\n  };\r\n  if (typeof Sizzle === \"function\") {\r\n    d3_select = function(s, n) {\r\n      return Sizzle(s, n)[0] || null;\r\n    };\r\n    d3_selectAll = Sizzle;\r\n    d3_selectMatches = Sizzle.matchesSelector;\r\n  }\r\n  d3.selection = function() {\r\n    return d3.select(d3_document.documentElement);\r\n  };\r\n  var d3_selectionPrototype = d3.selection.prototype = [];\r\n  d3_selectionPrototype.select = function(selector) {\r\n    var subgroups = [], subgroup, subnode, group, node;\r\n    selector = d3_selection_selector(selector);\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      subgroups.push(subgroup = []);\r\n      subgroup.parentNode = (group = this[j]).parentNode;\r\n      for (var i = -1, n = group.length; ++i < n; ) {\r\n        if (node = group[i]) {\r\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\r\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\r\n        } else {\r\n          subgroup.push(null);\r\n        }\r\n      }\r\n    }\r\n    return d3_selection(subgroups);\r\n  };\r\n  function d3_selection_selector(selector) {\r\n    return typeof selector === \"function\" ? selector : function() {\r\n      return d3_select(selector, this);\r\n    };\r\n  }\r\n  d3_selectionPrototype.selectAll = function(selector) {\r\n    var subgroups = [], subgroup, node;\r\n    selector = d3_selection_selectorAll(selector);\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\r\n        if (node = group[i]) {\r\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\r\n          subgroup.parentNode = node;\r\n        }\r\n      }\r\n    }\r\n    return d3_selection(subgroups);\r\n  };\r\n  function d3_selection_selectorAll(selector) {\r\n    return typeof selector === \"function\" ? selector : function() {\r\n      return d3_selectAll(selector, this);\r\n    };\r\n  }\r\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\r\n  var d3_nsPrefix = {\r\n    svg: \"http://www.w3.org/2000/svg\",\r\n    xhtml: d3_nsXhtml,\r\n    xlink: \"http://www.w3.org/1999/xlink\",\r\n    xml: \"http://www.w3.org/XML/1998/namespace\",\r\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\r\n  };\r\n  d3.ns = {\r\n    prefix: d3_nsPrefix,\r\n    qualify: function(name) {\r\n      var i = name.indexOf(\":\"), prefix = name;\r\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\r\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\r\n        space: d3_nsPrefix[prefix],\r\n        local: name\r\n      } : name;\r\n    }\r\n  };\r\n  d3_selectionPrototype.attr = function(name, value) {\r\n    if (arguments.length < 2) {\r\n      if (typeof name === \"string\") {\r\n        var node = this.node();\r\n        name = d3.ns.qualify(name);\r\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\r\n      }\r\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\r\n      return this;\r\n    }\r\n    return this.each(d3_selection_attr(name, value));\r\n  };\r\n  function d3_selection_attr(name, value) {\r\n    name = d3.ns.qualify(name);\r\n    function attrNull() {\r\n      this.removeAttribute(name);\r\n    }\r\n    function attrNullNS() {\r\n      this.removeAttributeNS(name.space, name.local);\r\n    }\r\n    function attrConstant() {\r\n      this.setAttribute(name, value);\r\n    }\r\n    function attrConstantNS() {\r\n      this.setAttributeNS(name.space, name.local, value);\r\n    }\r\n    function attrFunction() {\r\n      var x = value.apply(this, arguments);\r\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\r\n    }\r\n    function attrFunctionNS() {\r\n      var x = value.apply(this, arguments);\r\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\r\n    }\r\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\r\n  }\r\n  function d3_collapse(s) {\r\n    return s.trim().replace(/\\s+/g, \" \");\r\n  }\r\n  d3_selectionPrototype.classed = function(name, value) {\r\n    if (arguments.length < 2) {\r\n      if (typeof name === \"string\") {\r\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\r\n        if (value = node.classList) {\r\n          while (++i < n) if (!value.contains(name[i])) return false;\r\n        } else {\r\n          value = node.getAttribute(\"class\");\r\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\r\n        }\r\n        return true;\r\n      }\r\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\r\n      return this;\r\n    }\r\n    return this.each(d3_selection_classed(name, value));\r\n  };\r\n  function d3_selection_classedRe(name) {\r\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\r\n  }\r\n  function d3_selection_classes(name) {\r\n    return (name + \"\").trim().split(/^|\\s+/);\r\n  }\r\n  function d3_selection_classed(name, value) {\r\n    name = d3_selection_classes(name).map(d3_selection_classedName);\r\n    var n = name.length;\r\n    function classedConstant() {\r\n      var i = -1;\r\n      while (++i < n) name[i](this, value);\r\n    }\r\n    function classedFunction() {\r\n      var i = -1, x = value.apply(this, arguments);\r\n      while (++i < n) name[i](this, x);\r\n    }\r\n    return typeof value === \"function\" ? classedFunction : classedConstant;\r\n  }\r\n  function d3_selection_classedName(name) {\r\n    var re = d3_selection_classedRe(name);\r\n    return function(node, value) {\r\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\r\n      var c = node.getAttribute(\"class\") || \"\";\r\n      if (value) {\r\n        re.lastIndex = 0;\r\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\r\n      } else {\r\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\r\n      }\r\n    };\r\n  }\r\n  d3_selectionPrototype.style = function(name, value, priority) {\r\n    var n = arguments.length;\r\n    if (n < 3) {\r\n      if (typeof name !== \"string\") {\r\n        if (n < 2) value = \"\";\r\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\r\n        return this;\r\n      }\r\n      if (n < 2) {\r\n        var node = this.node();\r\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\r\n      }\r\n      priority = \"\";\r\n    }\r\n    return this.each(d3_selection_style(name, value, priority));\r\n  };\r\n  function d3_selection_style(name, value, priority) {\r\n    function styleNull() {\r\n      this.style.removeProperty(name);\r\n    }\r\n    function styleConstant() {\r\n      this.style.setProperty(name, value, priority);\r\n    }\r\n    function styleFunction() {\r\n      var x = value.apply(this, arguments);\r\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\r\n    }\r\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\r\n  }\r\n  d3_selectionPrototype.property = function(name, value) {\r\n    if (arguments.length < 2) {\r\n      if (typeof name === \"string\") return this.node()[name];\r\n      for (value in name) this.each(d3_selection_property(value, name[value]));\r\n      return this;\r\n    }\r\n    return this.each(d3_selection_property(name, value));\r\n  };\r\n  function d3_selection_property(name, value) {\r\n    function propertyNull() {\r\n      delete this[name];\r\n    }\r\n    function propertyConstant() {\r\n      this[name] = value;\r\n    }\r\n    function propertyFunction() {\r\n      var x = value.apply(this, arguments);\r\n      if (x == null) delete this[name]; else this[name] = x;\r\n    }\r\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\r\n  }\r\n  d3_selectionPrototype.text = function(value) {\r\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\r\n      var v = value.apply(this, arguments);\r\n      this.textContent = v == null ? \"\" : v;\r\n    } : value == null ? function() {\r\n      this.textContent = \"\";\r\n    } : function() {\r\n      this.textContent = value;\r\n    }) : this.node().textContent;\r\n  };\r\n  d3_selectionPrototype.html = function(value) {\r\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\r\n      var v = value.apply(this, arguments);\r\n      this.innerHTML = v == null ? \"\" : v;\r\n    } : value == null ? function() {\r\n      this.innerHTML = \"\";\r\n    } : function() {\r\n      this.innerHTML = value;\r\n    }) : this.node().innerHTML;\r\n  };\r\n  d3_selectionPrototype.append = function(name) {\r\n    name = d3_selection_creator(name);\r\n    return this.select(function() {\r\n      return this.appendChild(name.apply(this, arguments));\r\n    });\r\n  };\r\n  function d3_selection_creator(name) {\r\n    function create() {\r\n      var document = this.ownerDocument, namespace = this.namespaceURI;\r\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\r\n    }\r\n    function createNS() {\r\n      return this.ownerDocument.createElementNS(name.space, name.local);\r\n    }\r\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\r\n  }\r\n  d3_selectionPrototype.insert = function(name, before) {\r\n    name = d3_selection_creator(name);\r\n    before = d3_selection_selector(before);\r\n    return this.select(function() {\r\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\r\n    });\r\n  };\r\n  d3_selectionPrototype.remove = function() {\r\n    return this.each(d3_selectionRemove);\r\n  };\r\n  function d3_selectionRemove() {\r\n    var parent = this.parentNode;\r\n    if (parent) parent.removeChild(this);\r\n  }\r\n  d3_selectionPrototype.data = function(value, key) {\r\n    var i = -1, n = this.length, group, node;\r\n    if (!arguments.length) {\r\n      value = new Array(n = (group = this[0]).length);\r\n      while (++i < n) {\r\n        if (node = group[i]) {\r\n          value[i] = node.__data__;\r\n        }\r\n      }\r\n      return value;\r\n    }\r\n    function bind(group, groupData) {\r\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\r\n      if (key) {\r\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\r\n        for (i = -1; ++i < n; ) {\r\n          if (node = group[i]) {\r\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\r\n              exitNodes[i] = node;\r\n            } else {\r\n              nodeByKeyValue.set(keyValue, node);\r\n            }\r\n            keyValues[i] = keyValue;\r\n          }\r\n        }\r\n        for (i = -1; ++i < m; ) {\r\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\r\n            enterNodes[i] = d3_selection_dataNode(nodeData);\r\n          } else if (node !== true) {\r\n            updateNodes[i] = node;\r\n            node.__data__ = nodeData;\r\n          }\r\n          nodeByKeyValue.set(keyValue, true);\r\n        }\r\n        for (i = -1; ++i < n; ) {\r\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\r\n            exitNodes[i] = group[i];\r\n          }\r\n        }\r\n      } else {\r\n        for (i = -1; ++i < n0; ) {\r\n          node = group[i];\r\n          nodeData = groupData[i];\r\n          if (node) {\r\n            node.__data__ = nodeData;\r\n            updateNodes[i] = node;\r\n          } else {\r\n            enterNodes[i] = d3_selection_dataNode(nodeData);\r\n          }\r\n        }\r\n        for (;i < m; ++i) {\r\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\r\n        }\r\n        for (;i < n; ++i) {\r\n          exitNodes[i] = group[i];\r\n        }\r\n      }\r\n      enterNodes.update = updateNodes;\r\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\r\n      enter.push(enterNodes);\r\n      update.push(updateNodes);\r\n      exit.push(exitNodes);\r\n    }\r\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\r\n    if (typeof value === \"function\") {\r\n      while (++i < n) {\r\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\r\n      }\r\n    } else {\r\n      while (++i < n) {\r\n        bind(group = this[i], value);\r\n      }\r\n    }\r\n    update.enter = function() {\r\n      return enter;\r\n    };\r\n    update.exit = function() {\r\n      return exit;\r\n    };\r\n    return update;\r\n  };\r\n  function d3_selection_dataNode(data) {\r\n    return {\r\n      __data__: data\r\n    };\r\n  }\r\n  d3_selectionPrototype.datum = function(value) {\r\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\r\n  };\r\n  d3_selectionPrototype.filter = function(filter) {\r\n    var subgroups = [], subgroup, group, node;\r\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\r\n    for (var j = 0, m = this.length; j < m; j++) {\r\n      subgroups.push(subgroup = []);\r\n      subgroup.parentNode = (group = this[j]).parentNode;\r\n      for (var i = 0, n = group.length; i < n; i++) {\r\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\r\n          subgroup.push(node);\r\n        }\r\n      }\r\n    }\r\n    return d3_selection(subgroups);\r\n  };\r\n  function d3_selection_filter(selector) {\r\n    return function() {\r\n      return d3_selectMatches(this, selector);\r\n    };\r\n  }\r\n  d3_selectionPrototype.order = function() {\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\r\n        if (node = group[i]) {\r\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\r\n          next = node;\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n  d3_selectionPrototype.sort = function(comparator) {\r\n    comparator = d3_selection_sortComparator.apply(this, arguments);\r\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\r\n    return this.order();\r\n  };\r\n  function d3_selection_sortComparator(comparator) {\r\n    if (!arguments.length) comparator = d3_ascending;\r\n    return function(a, b) {\r\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\r\n    };\r\n  }\r\n  d3_selectionPrototype.each = function(callback) {\r\n    return d3_selection_each(this, function(node, i, j) {\r\n      callback.call(node, node.__data__, i, j);\r\n    });\r\n  };\r\n  function d3_selection_each(groups, callback) {\r\n    for (var j = 0, m = groups.length; j < m; j++) {\r\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\r\n        if (node = group[i]) callback(node, i, j);\r\n      }\r\n    }\r\n    return groups;\r\n  }\r\n  d3_selectionPrototype.call = function(callback) {\r\n    var args = d3_array(arguments);\r\n    callback.apply(args[0] = this, args);\r\n    return this;\r\n  };\r\n  d3_selectionPrototype.empty = function() {\r\n    return !this.node();\r\n  };\r\n  d3_selectionPrototype.node = function() {\r\n    for (var j = 0, m = this.length; j < m; j++) {\r\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\r\n        var node = group[i];\r\n        if (node) return node;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  d3_selectionPrototype.size = function() {\r\n    var n = 0;\r\n    d3_selection_each(this, function() {\r\n      ++n;\r\n    });\r\n    return n;\r\n  };\r\n  function d3_selection_enter(selection) {\r\n    d3_subclass(selection, d3_selection_enterPrototype);\r\n    return selection;\r\n  }\r\n  var d3_selection_enterPrototype = [];\r\n  d3.selection.enter = d3_selection_enter;\r\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\r\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\r\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\r\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\r\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\r\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\r\n  d3_selection_enterPrototype.select = function(selector) {\r\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      upgroup = (group = this[j]).update;\r\n      subgroups.push(subgroup = []);\r\n      subgroup.parentNode = group.parentNode;\r\n      for (var i = -1, n = group.length; ++i < n; ) {\r\n        if (node = group[i]) {\r\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\r\n          subnode.__data__ = node.__data__;\r\n        } else {\r\n          subgroup.push(null);\r\n        }\r\n      }\r\n    }\r\n    return d3_selection(subgroups);\r\n  };\r\n  d3_selection_enterPrototype.insert = function(name, before) {\r\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\r\n    return d3_selectionPrototype.insert.call(this, name, before);\r\n  };\r\n  function d3_selection_enterInsertBefore(enter) {\r\n    var i0, j0;\r\n    return function(d, i, j) {\r\n      var group = enter[j].update, n = group.length, node;\r\n      if (j != j0) j0 = j, i0 = 0;\r\n      if (i >= i0) i0 = i + 1;\r\n      while (!(node = group[i0]) && ++i0 < n) ;\r\n      return node;\r\n    };\r\n  }\r\n  d3.select = function(node) {\r\n    var group;\r\n    if (typeof node === \"string\") {\r\n      group = [ d3_select(node, d3_document) ];\r\n      group.parentNode = d3_document.documentElement;\r\n    } else {\r\n      group = [ node ];\r\n      group.parentNode = d3_documentElement(node);\r\n    }\r\n    return d3_selection([ group ]);\r\n  };\r\n  d3.selectAll = function(nodes) {\r\n    var group;\r\n    if (typeof nodes === \"string\") {\r\n      group = d3_array(d3_selectAll(nodes, d3_document));\r\n      group.parentNode = d3_document.documentElement;\r\n    } else {\r\n      group = d3_array(nodes);\r\n      group.parentNode = null;\r\n    }\r\n    return d3_selection([ group ]);\r\n  };\r\n  d3_selectionPrototype.on = function(type, listener, capture) {\r\n    var n = arguments.length;\r\n    if (n < 3) {\r\n      if (typeof type !== \"string\") {\r\n        if (n < 2) listener = false;\r\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\r\n        return this;\r\n      }\r\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\r\n      capture = false;\r\n    }\r\n    return this.each(d3_selection_on(type, listener, capture));\r\n  };\r\n  function d3_selection_on(type, listener, capture) {\r\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\r\n    if (i > 0) type = type.slice(0, i);\r\n    var filter = d3_selection_onFilters.get(type);\r\n    if (filter) type = filter, wrap = d3_selection_onFilter;\r\n    function onRemove() {\r\n      var l = this[name];\r\n      if (l) {\r\n        this.removeEventListener(type, l, l.$);\r\n        delete this[name];\r\n      }\r\n    }\r\n    function onAdd() {\r\n      var l = wrap(listener, d3_array(arguments));\r\n      onRemove.call(this);\r\n      this.addEventListener(type, this[name] = l, l.$ = capture);\r\n      l._ = listener;\r\n    }\r\n    function removeAll() {\r\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\r\n      for (var name in this) {\r\n        if (match = name.match(re)) {\r\n          var l = this[name];\r\n          this.removeEventListener(match[1], l, l.$);\r\n          delete this[name];\r\n        }\r\n      }\r\n    }\r\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\r\n  }\r\n  var d3_selection_onFilters = d3.map({\r\n    mouseenter: \"mouseover\",\r\n    mouseleave: \"mouseout\"\r\n  });\r\n  if (d3_document) {\r\n    d3_selection_onFilters.forEach(function(k) {\r\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\r\n    });\r\n  }\r\n  function d3_selection_onListener(listener, argumentz) {\r\n    return function(e) {\r\n      var o = d3.event;\r\n      d3.event = e;\r\n      argumentz[0] = this.__data__;\r\n      try {\r\n        listener.apply(this, argumentz);\r\n      } finally {\r\n        d3.event = o;\r\n      }\r\n    };\r\n  }\r\n  function d3_selection_onFilter(listener, argumentz) {\r\n    var l = d3_selection_onListener(listener, argumentz);\r\n    return function(e) {\r\n      var target = this, related = e.relatedTarget;\r\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\r\n        l.call(target, e);\r\n      }\r\n    };\r\n  }\r\n  var d3_event_dragSelect, d3_event_dragId = 0;\r\n  function d3_event_dragSuppress(node) {\r\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\r\n    if (d3_event_dragSelect == null) {\r\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\r\n    }\r\n    if (d3_event_dragSelect) {\r\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\r\n      style[d3_event_dragSelect] = \"none\";\r\n    }\r\n    return function(suppressClick) {\r\n      w.on(name, null);\r\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\r\n      if (suppressClick) {\r\n        var off = function() {\r\n          w.on(click, null);\r\n        };\r\n        w.on(click, function() {\r\n          d3_eventPreventDefault();\r\n          off();\r\n        }, true);\r\n        setTimeout(off, 0);\r\n      }\r\n    };\r\n  }\r\n  d3.mouse = function(container) {\r\n    return d3_mousePoint(container, d3_eventSource());\r\n  };\r\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\r\n  function d3_mousePoint(container, e) {\r\n    if (e.changedTouches) e = e.changedTouches[0];\r\n    var svg = container.ownerSVGElement || container;\r\n    if (svg.createSVGPoint) {\r\n      var point = svg.createSVGPoint();\r\n      if (d3_mouse_bug44083 < 0) {\r\n        var window = d3_window(container);\r\n        if (window.scrollX || window.scrollY) {\r\n          svg = d3.select(\"body\").append(\"svg\").style({\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            margin: 0,\r\n            padding: 0,\r\n            border: \"none\"\r\n          }, \"important\");\r\n          var ctm = svg[0][0].getScreenCTM();\r\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\r\n          svg.remove();\r\n        }\r\n      }\r\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \r\n      point.y = e.clientY;\r\n      point = point.matrixTransform(container.getScreenCTM().inverse());\r\n      return [ point.x, point.y ];\r\n    }\r\n    var rect = container.getBoundingClientRect();\r\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\r\n  }\r\n  d3.touch = function(container, touches, identifier) {\r\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\r\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\r\n      if ((touch = touches[i]).identifier === identifier) {\r\n        return d3_mousePoint(container, touch);\r\n      }\r\n    }\r\n  };\r\n  d3.behavior.drag = function() {\r\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\r\n    function drag() {\r\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\r\n    }\r\n    function dragstart(id, position, subject, move, end) {\r\n      return function() {\r\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\r\n        if (origin) {\r\n          dragOffset = origin.apply(that, arguments);\r\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\r\n        } else {\r\n          dragOffset = [ 0, 0 ];\r\n        }\r\n        dispatch({\r\n          type: \"dragstart\"\r\n        });\r\n        function moved() {\r\n          var position1 = position(parent, dragId), dx, dy;\r\n          if (!position1) return;\r\n          dx = position1[0] - position0[0];\r\n          dy = position1[1] - position0[1];\r\n          dragged |= dx | dy;\r\n          position0 = position1;\r\n          dispatch({\r\n            type: \"drag\",\r\n            x: position1[0] + dragOffset[0],\r\n            y: position1[1] + dragOffset[1],\r\n            dx: dx,\r\n            dy: dy\r\n          });\r\n        }\r\n        function ended() {\r\n          if (!position(parent, dragId)) return;\r\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\r\n          dragRestore(dragged);\r\n          dispatch({\r\n            type: \"dragend\"\r\n          });\r\n        }\r\n      };\r\n    }\r\n    drag.origin = function(x) {\r\n      if (!arguments.length) return origin;\r\n      origin = x;\r\n      return drag;\r\n    };\r\n    return d3.rebind(drag, event, \"on\");\r\n  };\r\n  function d3_behavior_dragTouchId() {\r\n    return d3.event.changedTouches[0].identifier;\r\n  }\r\n  d3.touches = function(container, touches) {\r\n    if (arguments.length < 2) touches = d3_eventSource().touches;\r\n    return touches ? d3_array(touches).map(function(touch) {\r\n      var point = d3_mousePoint(container, touch);\r\n      point.identifier = touch.identifier;\r\n      return point;\r\n    }) : [];\r\n  };\r\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\r\n  function d3_sgn(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\r\n  }\r\n  function d3_cross2d(a, b, c) {\r\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\r\n  }\r\n  function d3_acos(x) {\r\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\r\n  }\r\n  function d3_asin(x) {\r\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\r\n  }\r\n  function d3_sinh(x) {\r\n    return ((x = Math.exp(x)) - 1 / x) / 2;\r\n  }\r\n  function d3_cosh(x) {\r\n    return ((x = Math.exp(x)) + 1 / x) / 2;\r\n  }\r\n  function d3_tanh(x) {\r\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\r\n  }\r\n  function d3_haversin(x) {\r\n    return (x = Math.sin(x / 2)) * x;\r\n  }\r\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\r\n  d3.interpolateZoom = function(p0, p1) {\r\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\r\n    if (d2 < ε2) {\r\n      S = Math.log(w1 / w0) / ρ;\r\n      i = function(t) {\r\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\r\n      };\r\n    } else {\r\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\r\n      S = (r1 - r0) / ρ;\r\n      i = function(t) {\r\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\r\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\r\n      };\r\n    }\r\n    i.duration = S * 1e3;\r\n    return i;\r\n  };\r\n  d3.behavior.zoom = function() {\r\n    var view = {\r\n      x: 0,\r\n      y: 0,\r\n      k: 1\r\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\r\n    if (!d3_behavior_zoomWheel) {\r\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\r\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\r\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\r\n        return d3.event.wheelDelta;\r\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\r\n        return -d3.event.detail;\r\n      }, \"MozMousePixelScroll\");\r\n    }\r\n    function zoom(g) {\r\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\r\n    }\r\n    zoom.event = function(g) {\r\n      g.each(function() {\r\n        var dispatch = event.of(this, arguments), view1 = view;\r\n        if (d3_transitionInheritId) {\r\n          d3.select(this).transition().each(\"start.zoom\", function() {\r\n            view = this.__chart__ || {\r\n              x: 0,\r\n              y: 0,\r\n              k: 1\r\n            };\r\n            zoomstarted(dispatch);\r\n          }).tween(\"zoom:zoom\", function() {\r\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\r\n            return function(t) {\r\n              var l = i(t), k = dx / l[2];\r\n              this.__chart__ = view = {\r\n                x: cx - l[0] * k,\r\n                y: cy - l[1] * k,\r\n                k: k\r\n              };\r\n              zoomed(dispatch);\r\n            };\r\n          }).each(\"interrupt.zoom\", function() {\r\n            zoomended(dispatch);\r\n          }).each(\"end.zoom\", function() {\r\n            zoomended(dispatch);\r\n          });\r\n        } else {\r\n          this.__chart__ = view;\r\n          zoomstarted(dispatch);\r\n          zoomed(dispatch);\r\n          zoomended(dispatch);\r\n        }\r\n      });\r\n    };\r\n    zoom.translate = function(_) {\r\n      if (!arguments.length) return [ view.x, view.y ];\r\n      view = {\r\n        x: +_[0],\r\n        y: +_[1],\r\n        k: view.k\r\n      };\r\n      rescale();\r\n      return zoom;\r\n    };\r\n    zoom.scale = function(_) {\r\n      if (!arguments.length) return view.k;\r\n      view = {\r\n        x: view.x,\r\n        y: view.y,\r\n        k: null\r\n      };\r\n      scaleTo(+_);\r\n      rescale();\r\n      return zoom;\r\n    };\r\n    zoom.scaleExtent = function(_) {\r\n      if (!arguments.length) return scaleExtent;\r\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\r\n      return zoom;\r\n    };\r\n    zoom.center = function(_) {\r\n      if (!arguments.length) return center;\r\n      center = _ && [ +_[0], +_[1] ];\r\n      return zoom;\r\n    };\r\n    zoom.size = function(_) {\r\n      if (!arguments.length) return size;\r\n      size = _ && [ +_[0], +_[1] ];\r\n      return zoom;\r\n    };\r\n    zoom.duration = function(_) {\r\n      if (!arguments.length) return duration;\r\n      duration = +_;\r\n      return zoom;\r\n    };\r\n    zoom.x = function(z) {\r\n      if (!arguments.length) return x1;\r\n      x1 = z;\r\n      x0 = z.copy();\r\n      view = {\r\n        x: 0,\r\n        y: 0,\r\n        k: 1\r\n      };\r\n      return zoom;\r\n    };\r\n    zoom.y = function(z) {\r\n      if (!arguments.length) return y1;\r\n      y1 = z;\r\n      y0 = z.copy();\r\n      view = {\r\n        x: 0,\r\n        y: 0,\r\n        k: 1\r\n      };\r\n      return zoom;\r\n    };\r\n    function location(p) {\r\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\r\n    }\r\n    function point(l) {\r\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\r\n    }\r\n    function scaleTo(s) {\r\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\r\n    }\r\n    function translateTo(p, l) {\r\n      l = point(l);\r\n      view.x += p[0] - l[0];\r\n      view.y += p[1] - l[1];\r\n    }\r\n    function zoomTo(that, p, l, k) {\r\n      that.__chart__ = {\r\n        x: view.x,\r\n        y: view.y,\r\n        k: view.k\r\n      };\r\n      scaleTo(Math.pow(2, k));\r\n      translateTo(center0 = p, l);\r\n      that = d3.select(that);\r\n      if (duration > 0) that = that.transition().duration(duration);\r\n      that.call(zoom.event);\r\n    }\r\n    function rescale() {\r\n      if (x1) x1.domain(x0.range().map(function(x) {\r\n        return (x - view.x) / view.k;\r\n      }).map(x0.invert));\r\n      if (y1) y1.domain(y0.range().map(function(y) {\r\n        return (y - view.y) / view.k;\r\n      }).map(y0.invert));\r\n    }\r\n    function zoomstarted(dispatch) {\r\n      if (!zooming++) dispatch({\r\n        type: \"zoomstart\"\r\n      });\r\n    }\r\n    function zoomed(dispatch) {\r\n      rescale();\r\n      dispatch({\r\n        type: \"zoom\",\r\n        scale: view.k,\r\n        translate: [ view.x, view.y ]\r\n      });\r\n    }\r\n    function zoomended(dispatch) {\r\n      if (!--zooming) dispatch({\r\n        type: \"zoomend\"\r\n      }), center0 = null;\r\n    }\r\n    function mousedowned() {\r\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\r\n      d3_selection_interrupt.call(that);\r\n      zoomstarted(dispatch);\r\n      function moved() {\r\n        dragged = 1;\r\n        translateTo(d3.mouse(that), location0);\r\n        zoomed(dispatch);\r\n      }\r\n      function ended() {\r\n        subject.on(mousemove, null).on(mouseup, null);\r\n        dragRestore(dragged);\r\n        zoomended(dispatch);\r\n      }\r\n    }\r\n    function touchstarted() {\r\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\r\n      started();\r\n      zoomstarted(dispatch);\r\n      subject.on(mousedown, null).on(touchstart, started);\r\n      function relocate() {\r\n        var touches = d3.touches(that);\r\n        scale0 = view.k;\r\n        touches.forEach(function(t) {\r\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\r\n        });\r\n        return touches;\r\n      }\r\n      function started() {\r\n        var target = d3.event.target;\r\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\r\n        targets.push(target);\r\n        var changed = d3.event.changedTouches;\r\n        for (var i = 0, n = changed.length; i < n; ++i) {\r\n          locations0[changed[i].identifier] = null;\r\n        }\r\n        var touches = relocate(), now = Date.now();\r\n        if (touches.length === 1) {\r\n          if (now - touchtime < 500) {\r\n            var p = touches[0];\r\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\r\n            d3_eventPreventDefault();\r\n          }\r\n          touchtime = now;\r\n        } else if (touches.length > 1) {\r\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\r\n          distance0 = dx * dx + dy * dy;\r\n        }\r\n      }\r\n      function moved() {\r\n        var touches = d3.touches(that), p0, l0, p1, l1;\r\n        d3_selection_interrupt.call(that);\r\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\r\n          p1 = touches[i];\r\n          if (l1 = locations0[p1.identifier]) {\r\n            if (l0) break;\r\n            p0 = p1, l0 = l1;\r\n          }\r\n        }\r\n        if (l1) {\r\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\r\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\r\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\r\n          scaleTo(scale1 * scale0);\r\n        }\r\n        touchtime = null;\r\n        translateTo(p0, l0);\r\n        zoomed(dispatch);\r\n      }\r\n      function ended() {\r\n        if (d3.event.touches.length) {\r\n          var changed = d3.event.changedTouches;\r\n          for (var i = 0, n = changed.length; i < n; ++i) {\r\n            delete locations0[changed[i].identifier];\r\n          }\r\n          for (var identifier in locations0) {\r\n            return void relocate();\r\n          }\r\n        }\r\n        d3.selectAll(targets).on(zoomName, null);\r\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\r\n        dragRestore();\r\n        zoomended(dispatch);\r\n      }\r\n    }\r\n    function mousewheeled() {\r\n      var dispatch = event.of(this, arguments);\r\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \r\n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\r\n      mousewheelTimer = setTimeout(function() {\r\n        mousewheelTimer = null;\r\n        zoomended(dispatch);\r\n      }, 50);\r\n      d3_eventPreventDefault();\r\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\r\n      translateTo(center0, translate0);\r\n      zoomed(dispatch);\r\n    }\r\n    function dblclicked() {\r\n      return;\r\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\r\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\r\n    }\r\n    return d3.rebind(zoom, event, \"on\");\r\n  };\r\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\r\n  d3.color = d3_color;\r\n  function d3_color() {}\r\n  d3_color.prototype.toString = function() {\r\n    return this.rgb() + \"\";\r\n  };\r\n  d3.hsl = d3_hsl;\r\n  function d3_hsl(h, s, l) {\r\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\r\n  }\r\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\r\n  d3_hslPrototype.brighter = function(k) {\r\n    k = Math.pow(.7, arguments.length ? k : 1);\r\n    return new d3_hsl(this.h, this.s, this.l / k);\r\n  };\r\n  d3_hslPrototype.darker = function(k) {\r\n    k = Math.pow(.7, arguments.length ? k : 1);\r\n    return new d3_hsl(this.h, this.s, k * this.l);\r\n  };\r\n  d3_hslPrototype.rgb = function() {\r\n    return d3_hsl_rgb(this.h, this.s, this.l);\r\n  };\r\n  function d3_hsl_rgb(h, s, l) {\r\n    var m1, m2;\r\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\r\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\r\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\r\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\r\n    m1 = 2 * l - m2;\r\n    function v(h) {\r\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\r\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\r\n      if (h < 180) return m2;\r\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\r\n      return m1;\r\n    }\r\n    function vv(h) {\r\n      return Math.round(v(h) * 255);\r\n    }\r\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\r\n  }\r\n  d3.hcl = d3_hcl;\r\n  function d3_hcl(h, c, l) {\r\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\r\n  }\r\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\r\n  d3_hclPrototype.brighter = function(k) {\r\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\r\n  };\r\n  d3_hclPrototype.darker = function(k) {\r\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\r\n  };\r\n  d3_hclPrototype.rgb = function() {\r\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\r\n  };\r\n  function d3_hcl_lab(h, c, l) {\r\n    if (isNaN(h)) h = 0;\r\n    if (isNaN(c)) c = 0;\r\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\r\n  }\r\n  d3.lab = d3_lab;\r\n  function d3_lab(l, a, b) {\r\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\r\n  }\r\n  var d3_lab_K = 18;\r\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\r\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\r\n  d3_labPrototype.brighter = function(k) {\r\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\r\n  };\r\n  d3_labPrototype.darker = function(k) {\r\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\r\n  };\r\n  d3_labPrototype.rgb = function() {\r\n    return d3_lab_rgb(this.l, this.a, this.b);\r\n  };\r\n  function d3_lab_rgb(l, a, b) {\r\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\r\n    x = d3_lab_xyz(x) * d3_lab_X;\r\n    y = d3_lab_xyz(y) * d3_lab_Y;\r\n    z = d3_lab_xyz(z) * d3_lab_Z;\r\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\r\n  }\r\n  function d3_lab_hcl(l, a, b) {\r\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\r\n  }\r\n  function d3_lab_xyz(x) {\r\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\r\n  }\r\n  function d3_xyz_lab(x) {\r\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\r\n  }\r\n  function d3_xyz_rgb(r) {\r\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\r\n  }\r\n  d3.rgb = d3_rgb;\r\n  function d3_rgb(r, g, b) {\r\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\r\n  }\r\n  function d3_rgbNumber(value) {\r\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\r\n  }\r\n  function d3_rgbString(value) {\r\n    return d3_rgbNumber(value) + \"\";\r\n  }\r\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\r\n  d3_rgbPrototype.brighter = function(k) {\r\n    k = Math.pow(.7, arguments.length ? k : 1);\r\n    var r = this.r, g = this.g, b = this.b, i = 30;\r\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\r\n    if (r && r < i) r = i;\r\n    if (g && g < i) g = i;\r\n    if (b && b < i) b = i;\r\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\r\n  };\r\n  d3_rgbPrototype.darker = function(k) {\r\n    k = Math.pow(.7, arguments.length ? k : 1);\r\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\r\n  };\r\n  d3_rgbPrototype.hsl = function() {\r\n    return d3_rgb_hsl(this.r, this.g, this.b);\r\n  };\r\n  d3_rgbPrototype.toString = function() {\r\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\r\n  };\r\n  function d3_rgb_hex(v) {\r\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\r\n  }\r\n  function d3_rgb_parse(format, rgb, hsl) {\r\n    var r = 0, g = 0, b = 0, m1, m2, color;\r\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\r\n    if (m1) {\r\n      m2 = m1[2].split(\",\");\r\n      switch (m1[1]) {\r\n       case \"hsl\":\r\n        {\r\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\r\n        }\r\n\r\n       case \"rgb\":\r\n        {\r\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\r\n        }\r\n      }\r\n    }\r\n    if (color = d3_rgb_names.get(format)) {\r\n      return rgb(color.r, color.g, color.b);\r\n    }\r\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\r\n      if (format.length === 4) {\r\n        r = (color & 3840) >> 4;\r\n        r = r >> 4 | r;\r\n        g = color & 240;\r\n        g = g >> 4 | g;\r\n        b = color & 15;\r\n        b = b << 4 | b;\r\n      } else if (format.length === 7) {\r\n        r = (color & 16711680) >> 16;\r\n        g = (color & 65280) >> 8;\r\n        b = color & 255;\r\n      }\r\n    }\r\n    return rgb(r, g, b);\r\n  }\r\n  function d3_rgb_hsl(r, g, b) {\r\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\r\n    if (d) {\r\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\r\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\r\n      h *= 60;\r\n    } else {\r\n      h = NaN;\r\n      s = l > 0 && l < 1 ? 0 : h;\r\n    }\r\n    return new d3_hsl(h, s, l);\r\n  }\r\n  function d3_rgb_lab(r, g, b) {\r\n    r = d3_rgb_xyz(r);\r\n    g = d3_rgb_xyz(g);\r\n    b = d3_rgb_xyz(b);\r\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\r\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\r\n  }\r\n  function d3_rgb_xyz(r) {\r\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\r\n  }\r\n  function d3_rgb_parseNumber(c) {\r\n    var f = parseFloat(c);\r\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\r\n  }\r\n  var d3_rgb_names = d3.map({\r\n    aliceblue: 15792383,\r\n    antiquewhite: 16444375,\r\n    aqua: 65535,\r\n    aquamarine: 8388564,\r\n    azure: 15794175,\r\n    beige: 16119260,\r\n    bisque: 16770244,\r\n    black: 0,\r\n    blanchedalmond: 16772045,\r\n    blue: 255,\r\n    blueviolet: 9055202,\r\n    brown: 10824234,\r\n    burlywood: 14596231,\r\n    cadetblue: 6266528,\r\n    chartreuse: 8388352,\r\n    chocolate: 13789470,\r\n    coral: 16744272,\r\n    cornflowerblue: 6591981,\r\n    cornsilk: 16775388,\r\n    crimson: 14423100,\r\n    cyan: 65535,\r\n    darkblue: 139,\r\n    darkcyan: 35723,\r\n    darkgoldenrod: 12092939,\r\n    darkgray: 11119017,\r\n    darkgreen: 25600,\r\n    darkgrey: 11119017,\r\n    darkkhaki: 12433259,\r\n    darkmagenta: 9109643,\r\n    darkolivegreen: 5597999,\r\n    darkorange: 16747520,\r\n    darkorchid: 10040012,\r\n    darkred: 9109504,\r\n    darksalmon: 15308410,\r\n    darkseagreen: 9419919,\r\n    darkslateblue: 4734347,\r\n    darkslategray: 3100495,\r\n    darkslategrey: 3100495,\r\n    darkturquoise: 52945,\r\n    darkviolet: 9699539,\r\n    deeppink: 16716947,\r\n    deepskyblue: 49151,\r\n    dimgray: 6908265,\r\n    dimgrey: 6908265,\r\n    dodgerblue: 2003199,\r\n    firebrick: 11674146,\r\n    floralwhite: 16775920,\r\n    forestgreen: 2263842,\r\n    fuchsia: 16711935,\r\n    gainsboro: 14474460,\r\n    ghostwhite: 16316671,\r\n    gold: 16766720,\r\n    goldenrod: 14329120,\r\n    gray: 8421504,\r\n    green: 32768,\r\n    greenyellow: 11403055,\r\n    grey: 8421504,\r\n    honeydew: 15794160,\r\n    hotpink: 16738740,\r\n    indianred: 13458524,\r\n    indigo: 4915330,\r\n    ivory: 16777200,\r\n    khaki: 15787660,\r\n    lavender: 15132410,\r\n    lavenderblush: 16773365,\r\n    lawngreen: 8190976,\r\n    lemonchiffon: 16775885,\r\n    lightblue: 11393254,\r\n    lightcoral: 15761536,\r\n    lightcyan: 14745599,\r\n    lightgoldenrodyellow: 16448210,\r\n    lightgray: 13882323,\r\n    lightgreen: 9498256,\r\n    lightgrey: 13882323,\r\n    lightpink: 16758465,\r\n    lightsalmon: 16752762,\r\n    lightseagreen: 2142890,\r\n    lightskyblue: 8900346,\r\n    lightslategray: 7833753,\r\n    lightslategrey: 7833753,\r\n    lightsteelblue: 11584734,\r\n    lightyellow: 16777184,\r\n    lime: 65280,\r\n    limegreen: 3329330,\r\n    linen: 16445670,\r\n    magenta: 16711935,\r\n    maroon: 8388608,\r\n    mediumaquamarine: 6737322,\r\n    mediumblue: 205,\r\n    mediumorchid: 12211667,\r\n    mediumpurple: 9662683,\r\n    mediumseagreen: 3978097,\r\n    mediumslateblue: 8087790,\r\n    mediumspringgreen: 64154,\r\n    mediumturquoise: 4772300,\r\n    mediumvioletred: 13047173,\r\n    midnightblue: 1644912,\r\n    mintcream: 16121850,\r\n    mistyrose: 16770273,\r\n    moccasin: 16770229,\r\n    navajowhite: 16768685,\r\n    navy: 128,\r\n    oldlace: 16643558,\r\n    olive: 8421376,\r\n    olivedrab: 7048739,\r\n    orange: 16753920,\r\n    orangered: 16729344,\r\n    orchid: 14315734,\r\n    palegoldenrod: 15657130,\r\n    palegreen: 10025880,\r\n    paleturquoise: 11529966,\r\n    palevioletred: 14381203,\r\n    papayawhip: 16773077,\r\n    peachpuff: 16767673,\r\n    peru: 13468991,\r\n    pink: 16761035,\r\n    plum: 14524637,\r\n    powderblue: 11591910,\r\n    purple: 8388736,\r\n    rebeccapurple: 6697881,\r\n    red: 16711680,\r\n    rosybrown: 12357519,\r\n    royalblue: 4286945,\r\n    saddlebrown: 9127187,\r\n    salmon: 16416882,\r\n    sandybrown: 16032864,\r\n    seagreen: 3050327,\r\n    seashell: 16774638,\r\n    sienna: 10506797,\r\n    silver: 12632256,\r\n    skyblue: 8900331,\r\n    slateblue: 6970061,\r\n    slategray: 7372944,\r\n    slategrey: 7372944,\r\n    snow: 16775930,\r\n    springgreen: 65407,\r\n    steelblue: 4620980,\r\n    tan: 13808780,\r\n    teal: 32896,\r\n    thistle: 14204888,\r\n    tomato: 16737095,\r\n    turquoise: 4251856,\r\n    violet: 15631086,\r\n    wheat: 16113331,\r\n    white: 16777215,\r\n    whitesmoke: 16119285,\r\n    yellow: 16776960,\r\n    yellowgreen: 10145074\r\n  });\r\n  d3_rgb_names.forEach(function(key, value) {\r\n    d3_rgb_names.set(key, d3_rgbNumber(value));\r\n  });\r\n  function d3_functor(v) {\r\n    return typeof v === \"function\" ? v : function() {\r\n      return v;\r\n    };\r\n  }\r\n  d3.functor = d3_functor;\r\n  d3.xhr = d3_xhrType(d3_identity);\r\n  function d3_xhrType(response) {\r\n    return function(url, mimeType, callback) {\r\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \r\n      mimeType = null;\r\n      return d3_xhr(url, mimeType, response, callback);\r\n    };\r\n  }\r\n  function d3_xhr(url, mimeType, response, callback) {\r\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\r\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\r\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\r\n      request.readyState > 3 && respond();\r\n    };\r\n    function respond() {\r\n      var status = request.status, result;\r\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\r\n        try {\r\n          result = response.call(xhr, request);\r\n        } catch (e) {\r\n          dispatch.error.call(xhr, e);\r\n          return;\r\n        }\r\n        dispatch.load.call(xhr, result);\r\n      } else {\r\n        dispatch.error.call(xhr, request);\r\n      }\r\n    }\r\n    request.onprogress = function(event) {\r\n      var o = d3.event;\r\n      d3.event = event;\r\n      try {\r\n        dispatch.progress.call(xhr, request);\r\n      } finally {\r\n        d3.event = o;\r\n      }\r\n    };\r\n    xhr.header = function(name, value) {\r\n      name = (name + \"\").toLowerCase();\r\n      if (arguments.length < 2) return headers[name];\r\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\r\n      return xhr;\r\n    };\r\n    xhr.mimeType = function(value) {\r\n      if (!arguments.length) return mimeType;\r\n      mimeType = value == null ? null : value + \"\";\r\n      return xhr;\r\n    };\r\n    xhr.responseType = function(value) {\r\n      if (!arguments.length) return responseType;\r\n      responseType = value;\r\n      return xhr;\r\n    };\r\n    xhr.response = function(value) {\r\n      response = value;\r\n      return xhr;\r\n    };\r\n    [ \"get\", \"post\" ].forEach(function(method) {\r\n      xhr[method] = function() {\r\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\r\n      };\r\n    });\r\n    xhr.send = function(method, data, callback) {\r\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\r\n      request.open(method, url, true);\r\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\r\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\r\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\r\n      if (responseType != null) request.responseType = responseType;\r\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\r\n        callback(null, request);\r\n      });\r\n      dispatch.beforesend.call(xhr, request);\r\n      request.send(data == null ? null : data);\r\n      return xhr;\r\n    };\r\n    xhr.abort = function() {\r\n      request.abort();\r\n      return xhr;\r\n    };\r\n    d3.rebind(xhr, dispatch, \"on\");\r\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\r\n  }\r\n  function d3_xhr_fixCallback(callback) {\r\n    return callback.length === 1 ? function(error, request) {\r\n      callback(error == null ? request : null);\r\n    } : callback;\r\n  }\r\n  function d3_xhrHasResponse(request) {\r\n    var type = request.responseType;\r\n    return type && type !== \"text\" ? request.response : request.responseText;\r\n  }\r\n  d3.dsv = function(delimiter, mimeType) {\r\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\r\n    function dsv(url, row, callback) {\r\n      if (arguments.length < 3) callback = row, row = null;\r\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\r\n      xhr.row = function(_) {\r\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\r\n      };\r\n      return xhr;\r\n    }\r\n    function response(request) {\r\n      return dsv.parse(request.responseText);\r\n    }\r\n    function typedResponse(f) {\r\n      return function(request) {\r\n        return dsv.parse(request.responseText, f);\r\n      };\r\n    }\r\n    dsv.parse = function(text, f) {\r\n      var o;\r\n      return dsv.parseRows(text, function(row, i) {\r\n        if (o) return o(row, i - 1);\r\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\r\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\r\n        }).join(\",\") + \"}\");\r\n        o = f ? function(row, i) {\r\n          return f(a(row), i);\r\n        } : a;\r\n      });\r\n    };\r\n    dsv.parseRows = function(text, f) {\r\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\r\n      function token() {\r\n        if (I >= N) return EOF;\r\n        if (eol) return eol = false, EOL;\r\n        var j = I;\r\n        if (text.charCodeAt(j) === 34) {\r\n          var i = j;\r\n          while (i++ < N) {\r\n            if (text.charCodeAt(i) === 34) {\r\n              if (text.charCodeAt(i + 1) !== 34) break;\r\n              ++i;\r\n            }\r\n          }\r\n          I = i + 2;\r\n          var c = text.charCodeAt(i + 1);\r\n          if (c === 13) {\r\n            eol = true;\r\n            if (text.charCodeAt(i + 2) === 10) ++I;\r\n          } else if (c === 10) {\r\n            eol = true;\r\n          }\r\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\r\n        }\r\n        while (I < N) {\r\n          var c = text.charCodeAt(I++), k = 1;\r\n          if (c === 10) eol = true; else if (c === 13) {\r\n            eol = true;\r\n            if (text.charCodeAt(I) === 10) ++I, ++k;\r\n          } else if (c !== delimiterCode) continue;\r\n          return text.slice(j, I - k);\r\n        }\r\n        return text.slice(j);\r\n      }\r\n      while ((t = token()) !== EOF) {\r\n        var a = [];\r\n        while (t !== EOL && t !== EOF) {\r\n          a.push(t);\r\n          t = token();\r\n        }\r\n        if (f && (a = f(a, n++)) == null) continue;\r\n        rows.push(a);\r\n      }\r\n      return rows;\r\n    };\r\n    dsv.format = function(rows) {\r\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\r\n      var fieldSet = new d3_Set(), fields = [];\r\n      rows.forEach(function(row) {\r\n        for (var field in row) {\r\n          if (!fieldSet.has(field)) {\r\n            fields.push(fieldSet.add(field));\r\n          }\r\n        }\r\n      });\r\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\r\n        return fields.map(function(field) {\r\n          return formatValue(row[field]);\r\n        }).join(delimiter);\r\n      })).join(\"\\n\");\r\n    };\r\n    dsv.formatRows = function(rows) {\r\n      return rows.map(formatRow).join(\"\\n\");\r\n    };\r\n    function formatRow(row) {\r\n      return row.map(formatValue).join(delimiter);\r\n    }\r\n    function formatValue(text) {\r\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\r\n    }\r\n    return dsv;\r\n  };\r\n  d3.csv = d3.dsv(\",\", \"text/csv\");\r\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\r\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\r\n    setTimeout(callback, 17);\r\n  };\r\n  d3.timer = function() {\r\n    d3_timer.apply(this, arguments);\r\n  };\r\n  function d3_timer(callback, delay, then) {\r\n    var n = arguments.length;\r\n    if (n < 2) delay = 0;\r\n    if (n < 3) then = Date.now();\r\n    var time = then + delay, timer = {\r\n      c: callback,\r\n      t: time,\r\n      n: null\r\n    };\r\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\r\n    d3_timer_queueTail = timer;\r\n    if (!d3_timer_interval) {\r\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\r\n      d3_timer_interval = 1;\r\n      d3_timer_frame(d3_timer_step);\r\n    }\r\n    return timer;\r\n  }\r\n  function d3_timer_step() {\r\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\r\n    if (delay > 24) {\r\n      if (isFinite(delay)) {\r\n        clearTimeout(d3_timer_timeout);\r\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\r\n      }\r\n      d3_timer_interval = 0;\r\n    } else {\r\n      d3_timer_interval = 1;\r\n      d3_timer_frame(d3_timer_step);\r\n    }\r\n  }\r\n  d3.timer.flush = function() {\r\n    d3_timer_mark();\r\n    d3_timer_sweep();\r\n  };\r\n  function d3_timer_mark() {\r\n    var now = Date.now(), timer = d3_timer_queueHead;\r\n    while (timer) {\r\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\r\n      timer = timer.n;\r\n    }\r\n    return now;\r\n  }\r\n  function d3_timer_sweep() {\r\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\r\n    while (t1) {\r\n      if (t1.c) {\r\n        if (t1.t < time) time = t1.t;\r\n        t1 = (t0 = t1).n;\r\n      } else {\r\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\r\n      }\r\n    }\r\n    d3_timer_queueTail = t0;\r\n    return time;\r\n  }\r\n  function d3_format_precision(x, p) {\r\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\r\n  }\r\n  d3.round = function(x, n) {\r\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\r\n  };\r\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\r\n  d3.formatPrefix = function(value, precision) {\r\n    var i = 0;\r\n    if (value = +value) {\r\n      if (value < 0) value *= -1;\r\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\r\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\r\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\r\n    }\r\n    return d3_formatPrefixes[8 + i / 3];\r\n  };\r\n  function d3_formatPrefix(d, i) {\r\n    var k = Math.pow(10, abs(8 - i) * 3);\r\n    return {\r\n      scale: i > 8 ? function(d) {\r\n        return d / k;\r\n      } : function(d) {\r\n        return d * k;\r\n      },\r\n      symbol: d\r\n    };\r\n  }\r\n  function d3_locale_numberFormat(locale) {\r\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\r\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\r\n      while (i > 0 && g > 0) {\r\n        if (length + g + 1 > width) g = Math.max(1, width - length);\r\n        t.push(value.substring(i -= g, i + g));\r\n        if ((length += g + 1) > width) break;\r\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\r\n      }\r\n      return t.reverse().join(locale_thousands);\r\n    } : d3_identity;\r\n    return function(specifier) {\r\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\r\n      if (precision) precision = +precision.substring(1);\r\n      if (zfill || fill === \"0\" && align === \"=\") {\r\n        zfill = fill = \"0\";\r\n        align = \"=\";\r\n      }\r\n      switch (type) {\r\n       case \"n\":\r\n        comma = true;\r\n        type = \"g\";\r\n        break;\r\n\r\n       case \"%\":\r\n        scale = 100;\r\n        suffix = \"%\";\r\n        type = \"f\";\r\n        break;\r\n\r\n       case \"p\":\r\n        scale = 100;\r\n        suffix = \"%\";\r\n        type = \"r\";\r\n        break;\r\n\r\n       case \"b\":\r\n       case \"o\":\r\n       case \"x\":\r\n       case \"X\":\r\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\r\n\r\n       case \"c\":\r\n        exponent = false;\r\n\r\n       case \"d\":\r\n        integer = true;\r\n        precision = 0;\r\n        break;\r\n\r\n       case \"s\":\r\n        scale = -1;\r\n        type = \"r\";\r\n        break;\r\n      }\r\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\r\n      if (type == \"r\" && !precision) type = \"g\";\r\n      if (precision != null) {\r\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\r\n      }\r\n      type = d3_format_types.get(type) || d3_format_typeDefault;\r\n      var zcomma = zfill && comma;\r\n      return function(value) {\r\n        var fullSuffix = suffix;\r\n        if (integer && value % 1) return \"\";\r\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\r\n        if (scale < 0) {\r\n          var unit = d3.formatPrefix(value, precision);\r\n          value = unit.scale(value);\r\n          fullSuffix = unit.symbol + suffix;\r\n        } else {\r\n          value *= scale;\r\n        }\r\n        value = type(value, precision);\r\n        var i = value.lastIndexOf(\".\"), before, after;\r\n        if (i < 0) {\r\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\r\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\r\n        } else {\r\n          before = value.substring(0, i);\r\n          after = locale_decimal + value.substring(i + 1);\r\n        }\r\n        if (!zfill && comma) before = formatGroup(before, Infinity);\r\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\r\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\r\n        negative += prefix;\r\n        value = before + after;\r\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\r\n      };\r\n    };\r\n  }\r\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\r\n  var d3_format_types = d3.map({\r\n    b: function(x) {\r\n      return x.toString(2);\r\n    },\r\n    c: function(x) {\r\n      return String.fromCharCode(x);\r\n    },\r\n    o: function(x) {\r\n      return x.toString(8);\r\n    },\r\n    x: function(x) {\r\n      return x.toString(16);\r\n    },\r\n    X: function(x) {\r\n      return x.toString(16).toUpperCase();\r\n    },\r\n    g: function(x, p) {\r\n      return x.toPrecision(p);\r\n    },\r\n    e: function(x, p) {\r\n      return x.toExponential(p);\r\n    },\r\n    f: function(x, p) {\r\n      return x.toFixed(p);\r\n    },\r\n    r: function(x, p) {\r\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\r\n    }\r\n  });\r\n  function d3_format_typeDefault(x) {\r\n    return x + \"\";\r\n  }\r\n  var d3_time = d3.time = {}, d3_date = Date;\r\n  function d3_date_utc() {\r\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\r\n  }\r\n  d3_date_utc.prototype = {\r\n    getDate: function() {\r\n      return this._.getUTCDate();\r\n    },\r\n    getDay: function() {\r\n      return this._.getUTCDay();\r\n    },\r\n    getFullYear: function() {\r\n      return this._.getUTCFullYear();\r\n    },\r\n    getHours: function() {\r\n      return this._.getUTCHours();\r\n    },\r\n    getMilliseconds: function() {\r\n      return this._.getUTCMilliseconds();\r\n    },\r\n    getMinutes: function() {\r\n      return this._.getUTCMinutes();\r\n    },\r\n    getMonth: function() {\r\n      return this._.getUTCMonth();\r\n    },\r\n    getSeconds: function() {\r\n      return this._.getUTCSeconds();\r\n    },\r\n    getTime: function() {\r\n      return this._.getTime();\r\n    },\r\n    getTimezoneOffset: function() {\r\n      return 0;\r\n    },\r\n    valueOf: function() {\r\n      return this._.valueOf();\r\n    },\r\n    setDate: function() {\r\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\r\n    },\r\n    setDay: function() {\r\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\r\n    },\r\n    setFullYear: function() {\r\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\r\n    },\r\n    setHours: function() {\r\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\r\n    },\r\n    setMilliseconds: function() {\r\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\r\n    },\r\n    setMinutes: function() {\r\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\r\n    },\r\n    setMonth: function() {\r\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\r\n    },\r\n    setSeconds: function() {\r\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\r\n    },\r\n    setTime: function() {\r\n      d3_time_prototype.setTime.apply(this._, arguments);\r\n    }\r\n  };\r\n  var d3_time_prototype = Date.prototype;\r\n  function d3_time_interval(local, step, number) {\r\n    function round(date) {\r\n      var d0 = local(date), d1 = offset(d0, 1);\r\n      return date - d0 < d1 - date ? d0 : d1;\r\n    }\r\n    function ceil(date) {\r\n      step(date = local(new d3_date(date - 1)), 1);\r\n      return date;\r\n    }\r\n    function offset(date, k) {\r\n      step(date = new d3_date(+date), k);\r\n      return date;\r\n    }\r\n    function range(t0, t1, dt) {\r\n      var time = ceil(t0), times = [];\r\n      if (dt > 1) {\r\n        while (time < t1) {\r\n          if (!(number(time) % dt)) times.push(new Date(+time));\r\n          step(time, 1);\r\n        }\r\n      } else {\r\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\r\n      }\r\n      return times;\r\n    }\r\n    function range_utc(t0, t1, dt) {\r\n      try {\r\n        d3_date = d3_date_utc;\r\n        var utc = new d3_date_utc();\r\n        utc._ = t0;\r\n        return range(utc, t1, dt);\r\n      } finally {\r\n        d3_date = Date;\r\n      }\r\n    }\r\n    local.floor = local;\r\n    local.round = round;\r\n    local.ceil = ceil;\r\n    local.offset = offset;\r\n    local.range = range;\r\n    var utc = local.utc = d3_time_interval_utc(local);\r\n    utc.floor = utc;\r\n    utc.round = d3_time_interval_utc(round);\r\n    utc.ceil = d3_time_interval_utc(ceil);\r\n    utc.offset = d3_time_interval_utc(offset);\r\n    utc.range = range_utc;\r\n    return local;\r\n  }\r\n  function d3_time_interval_utc(method) {\r\n    return function(date, k) {\r\n      try {\r\n        d3_date = d3_date_utc;\r\n        var utc = new d3_date_utc();\r\n        utc._ = date;\r\n        return method(utc, k)._;\r\n      } finally {\r\n        d3_date = Date;\r\n      }\r\n    };\r\n  }\r\n  d3_time.year = d3_time_interval(function(date) {\r\n    date = d3_time.day(date);\r\n    date.setMonth(0, 1);\r\n    return date;\r\n  }, function(date, offset) {\r\n    date.setFullYear(date.getFullYear() + offset);\r\n  }, function(date) {\r\n    return date.getFullYear();\r\n  });\r\n  d3_time.years = d3_time.year.range;\r\n  d3_time.years.utc = d3_time.year.utc.range;\r\n  d3_time.day = d3_time_interval(function(date) {\r\n    var day = new d3_date(2e3, 0);\r\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n    return day;\r\n  }, function(date, offset) {\r\n    date.setDate(date.getDate() + offset);\r\n  }, function(date) {\r\n    return date.getDate() - 1;\r\n  });\r\n  d3_time.days = d3_time.day.range;\r\n  d3_time.days.utc = d3_time.day.utc.range;\r\n  d3_time.dayOfYear = function(date) {\r\n    var year = d3_time.year(date);\r\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\r\n  };\r\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\r\n    i = 7 - i;\r\n    var interval = d3_time[day] = d3_time_interval(function(date) {\r\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\r\n      return date;\r\n    }, function(date, offset) {\r\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\r\n    }, function(date) {\r\n      var day = d3_time.year(date).getDay();\r\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\r\n    });\r\n    d3_time[day + \"s\"] = interval.range;\r\n    d3_time[day + \"s\"].utc = interval.utc.range;\r\n    d3_time[day + \"OfYear\"] = function(date) {\r\n      var day = d3_time.year(date).getDay();\r\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\r\n    };\r\n  });\r\n  d3_time.week = d3_time.sunday;\r\n  d3_time.weeks = d3_time.sunday.range;\r\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\r\n  d3_time.weekOfYear = d3_time.sundayOfYear;\r\n  function d3_locale_timeFormat(locale) {\r\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\r\n    function d3_time_format(template) {\r\n      var n = template.length;\r\n      function format(date) {\r\n        var string = [], i = -1, j = 0, c, p, f;\r\n        while (++i < n) {\r\n          if (template.charCodeAt(i) === 37) {\r\n            string.push(template.slice(j, i));\r\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\r\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\r\n            string.push(c);\r\n            j = i + 1;\r\n          }\r\n        }\r\n        string.push(template.slice(j, i));\r\n        return string.join(\"\");\r\n      }\r\n      format.parse = function(string) {\r\n        var d = {\r\n          y: 1900,\r\n          m: 0,\r\n          d: 1,\r\n          H: 0,\r\n          M: 0,\r\n          S: 0,\r\n          L: 0,\r\n          Z: null\r\n        }, i = d3_time_parse(d, template, string, 0);\r\n        if (i != string.length) return null;\r\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\r\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\r\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\r\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\r\n          date.setFullYear(d.y, 0, 1);\r\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\r\n        } else date.setFullYear(d.y, d.m, d.d);\r\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\r\n        return localZ ? date._ : date;\r\n      };\r\n      format.toString = function() {\r\n        return template;\r\n      };\r\n      return format;\r\n    }\r\n    function d3_time_parse(date, template, string, j) {\r\n      var c, p, t, i = 0, n = template.length, m = string.length;\r\n      while (i < n) {\r\n        if (j >= m) return -1;\r\n        c = template.charCodeAt(i++);\r\n        if (c === 37) {\r\n          t = template.charAt(i++);\r\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\r\n          if (!p || (j = p(date, string, j)) < 0) return -1;\r\n        } else if (c != string.charCodeAt(j++)) {\r\n          return -1;\r\n        }\r\n      }\r\n      return j;\r\n    }\r\n    d3_time_format.utc = function(template) {\r\n      var local = d3_time_format(template);\r\n      function format(date) {\r\n        try {\r\n          d3_date = d3_date_utc;\r\n          var utc = new d3_date();\r\n          utc._ = date;\r\n          return local(utc);\r\n        } finally {\r\n          d3_date = Date;\r\n        }\r\n      }\r\n      format.parse = function(string) {\r\n        try {\r\n          d3_date = d3_date_utc;\r\n          var date = local.parse(string);\r\n          return date && date._;\r\n        } finally {\r\n          d3_date = Date;\r\n        }\r\n      };\r\n      format.toString = local.toString;\r\n      return format;\r\n    };\r\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\r\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\r\n    locale_periods.forEach(function(p, i) {\r\n      d3_time_periodLookup.set(p.toLowerCase(), i);\r\n    });\r\n    var d3_time_formats = {\r\n      a: function(d) {\r\n        return locale_shortDays[d.getDay()];\r\n      },\r\n      A: function(d) {\r\n        return locale_days[d.getDay()];\r\n      },\r\n      b: function(d) {\r\n        return locale_shortMonths[d.getMonth()];\r\n      },\r\n      B: function(d) {\r\n        return locale_months[d.getMonth()];\r\n      },\r\n      c: d3_time_format(locale_dateTime),\r\n      d: function(d, p) {\r\n        return d3_time_formatPad(d.getDate(), p, 2);\r\n      },\r\n      e: function(d, p) {\r\n        return d3_time_formatPad(d.getDate(), p, 2);\r\n      },\r\n      H: function(d, p) {\r\n        return d3_time_formatPad(d.getHours(), p, 2);\r\n      },\r\n      I: function(d, p) {\r\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\r\n      },\r\n      j: function(d, p) {\r\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\r\n      },\r\n      L: function(d, p) {\r\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\r\n      },\r\n      m: function(d, p) {\r\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\r\n      },\r\n      M: function(d, p) {\r\n        return d3_time_formatPad(d.getMinutes(), p, 2);\r\n      },\r\n      p: function(d) {\r\n        return locale_periods[+(d.getHours() >= 12)];\r\n      },\r\n      S: function(d, p) {\r\n        return d3_time_formatPad(d.getSeconds(), p, 2);\r\n      },\r\n      U: function(d, p) {\r\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\r\n      },\r\n      w: function(d) {\r\n        return d.getDay();\r\n      },\r\n      W: function(d, p) {\r\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\r\n      },\r\n      x: d3_time_format(locale_date),\r\n      X: d3_time_format(locale_time),\r\n      y: function(d, p) {\r\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\r\n      },\r\n      Y: function(d, p) {\r\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\r\n      },\r\n      Z: d3_time_zone,\r\n      \"%\": function() {\r\n        return \"%\";\r\n      }\r\n    };\r\n    var d3_time_parsers = {\r\n      a: d3_time_parseWeekdayAbbrev,\r\n      A: d3_time_parseWeekday,\r\n      b: d3_time_parseMonthAbbrev,\r\n      B: d3_time_parseMonth,\r\n      c: d3_time_parseLocaleFull,\r\n      d: d3_time_parseDay,\r\n      e: d3_time_parseDay,\r\n      H: d3_time_parseHour24,\r\n      I: d3_time_parseHour24,\r\n      j: d3_time_parseDayOfYear,\r\n      L: d3_time_parseMilliseconds,\r\n      m: d3_time_parseMonthNumber,\r\n      M: d3_time_parseMinutes,\r\n      p: d3_time_parseAmPm,\r\n      S: d3_time_parseSeconds,\r\n      U: d3_time_parseWeekNumberSunday,\r\n      w: d3_time_parseWeekdayNumber,\r\n      W: d3_time_parseWeekNumberMonday,\r\n      x: d3_time_parseLocaleDate,\r\n      X: d3_time_parseLocaleTime,\r\n      y: d3_time_parseYear,\r\n      Y: d3_time_parseFullYear,\r\n      Z: d3_time_parseZone,\r\n      \"%\": d3_time_parseLiteralPercent\r\n    };\r\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\r\n      d3_time_dayAbbrevRe.lastIndex = 0;\r\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\r\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n    }\r\n    function d3_time_parseWeekday(date, string, i) {\r\n      d3_time_dayRe.lastIndex = 0;\r\n      var n = d3_time_dayRe.exec(string.slice(i));\r\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n    }\r\n    function d3_time_parseMonthAbbrev(date, string, i) {\r\n      d3_time_monthAbbrevRe.lastIndex = 0;\r\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\r\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n    }\r\n    function d3_time_parseMonth(date, string, i) {\r\n      d3_time_monthRe.lastIndex = 0;\r\n      var n = d3_time_monthRe.exec(string.slice(i));\r\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n    }\r\n    function d3_time_parseLocaleFull(date, string, i) {\r\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\r\n    }\r\n    function d3_time_parseLocaleDate(date, string, i) {\r\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\r\n    }\r\n    function d3_time_parseLocaleTime(date, string, i) {\r\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\r\n    }\r\n    function d3_time_parseAmPm(date, string, i) {\r\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\r\n      return n == null ? -1 : (date.p = n, i);\r\n    }\r\n    return d3_time_format;\r\n  }\r\n  var d3_time_formatPads = {\r\n    \"-\": \"\",\r\n    _: \" \",\r\n    \"0\": \"0\"\r\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\r\n  function d3_time_formatPad(value, fill, width) {\r\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\r\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\r\n  }\r\n  function d3_time_formatRe(names) {\r\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\r\n  }\r\n  function d3_time_formatLookup(names) {\r\n    var map = new d3_Map(), i = -1, n = names.length;\r\n    while (++i < n) map.set(names[i].toLowerCase(), i);\r\n    return map;\r\n  }\r\n  function d3_time_parseWeekdayNumber(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\r\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseWeekNumberSunday(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i));\r\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseWeekNumberMonday(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i));\r\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseFullYear(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\r\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseYear(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseZone(date, string, i) {\r\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \r\n    i + 5) : -1;\r\n  }\r\n  function d3_time_expandYear(d) {\r\n    return d + (d > 68 ? 1900 : 2e3);\r\n  }\r\n  function d3_time_parseMonthNumber(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseDay(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseDayOfYear(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\r\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseHour24(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseMinutes(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseSeconds(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseMilliseconds(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\r\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_zone(d) {\r\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\r\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\r\n  }\r\n  function d3_time_parseLiteralPercent(date, string, i) {\r\n    d3_time_percentRe.lastIndex = 0;\r\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\r\n    return n ? i + n[0].length : -1;\r\n  }\r\n  function d3_time_formatMulti(formats) {\r\n    var n = formats.length, i = -1;\r\n    while (++i < n) formats[i][0] = this(formats[i][0]);\r\n    return function(date) {\r\n      var i = 0, f = formats[i];\r\n      while (!f[1](date)) f = formats[++i];\r\n      return f[0](date);\r\n    };\r\n  }\r\n  d3.locale = function(locale) {\r\n    return {\r\n      numberFormat: d3_locale_numberFormat(locale),\r\n      timeFormat: d3_locale_timeFormat(locale)\r\n    };\r\n  };\r\n  var d3_locale_enUS = d3.locale({\r\n    decimal: \".\",\r\n    thousands: \",\",\r\n    grouping: [ 3 ],\r\n    currency: [ \"$\", \"\" ],\r\n    dateTime: \"%a %b %e %X %Y\",\r\n    date: \"%m/%d/%Y\",\r\n    time: \"%H:%M:%S\",\r\n    periods: [ \"AM\", \"PM\" ],\r\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\r\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\r\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\r\n  });\r\n  d3.format = d3_locale_enUS.numberFormat;\r\n  d3.geo = {};\r\n  function d3_adder() {}\r\n  d3_adder.prototype = {\r\n    s: 0,\r\n    t: 0,\r\n    add: function(y) {\r\n      d3_adderSum(y, this.t, d3_adderTemp);\r\n      d3_adderSum(d3_adderTemp.s, this.s, this);\r\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\r\n    },\r\n    reset: function() {\r\n      this.s = this.t = 0;\r\n    },\r\n    valueOf: function() {\r\n      return this.s;\r\n    }\r\n  };\r\n  var d3_adderTemp = new d3_adder();\r\n  function d3_adderSum(a, b, o) {\r\n    var x = o.s = a + b, bv = x - a, av = x - bv;\r\n    o.t = a - av + (b - bv);\r\n  }\r\n  d3.geo.stream = function(object, listener) {\r\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\r\n      d3_geo_streamObjectType[object.type](object, listener);\r\n    } else {\r\n      d3_geo_streamGeometry(object, listener);\r\n    }\r\n  };\r\n  function d3_geo_streamGeometry(geometry, listener) {\r\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\r\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\r\n    }\r\n  }\r\n  var d3_geo_streamObjectType = {\r\n    Feature: function(feature, listener) {\r\n      d3_geo_streamGeometry(feature.geometry, listener);\r\n    },\r\n    FeatureCollection: function(object, listener) {\r\n      var features = object.features, i = -1, n = features.length;\r\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\r\n    }\r\n  };\r\n  var d3_geo_streamGeometryType = {\r\n    Sphere: function(object, listener) {\r\n      listener.sphere();\r\n    },\r\n    Point: function(object, listener) {\r\n      object = object.coordinates;\r\n      listener.point(object[0], object[1], object[2]);\r\n    },\r\n    MultiPoint: function(object, listener) {\r\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\r\n    },\r\n    LineString: function(object, listener) {\r\n      d3_geo_streamLine(object.coordinates, listener, 0);\r\n    },\r\n    MultiLineString: function(object, listener) {\r\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\r\n    },\r\n    Polygon: function(object, listener) {\r\n      d3_geo_streamPolygon(object.coordinates, listener);\r\n    },\r\n    MultiPolygon: function(object, listener) {\r\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\r\n    },\r\n    GeometryCollection: function(object, listener) {\r\n      var geometries = object.geometries, i = -1, n = geometries.length;\r\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\r\n    }\r\n  };\r\n  function d3_geo_streamLine(coordinates, listener, closed) {\r\n    var i = -1, n = coordinates.length - closed, coordinate;\r\n    listener.lineStart();\r\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\r\n    listener.lineEnd();\r\n  }\r\n  function d3_geo_streamPolygon(coordinates, listener) {\r\n    var i = -1, n = coordinates.length;\r\n    listener.polygonStart();\r\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\r\n    listener.polygonEnd();\r\n  }\r\n  d3.geo.area = function(object) {\r\n    d3_geo_areaSum = 0;\r\n    d3.geo.stream(object, d3_geo_area);\r\n    return d3_geo_areaSum;\r\n  };\r\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\r\n  var d3_geo_area = {\r\n    sphere: function() {\r\n      d3_geo_areaSum += 4 * π;\r\n    },\r\n    point: d3_noop,\r\n    lineStart: d3_noop,\r\n    lineEnd: d3_noop,\r\n    polygonStart: function() {\r\n      d3_geo_areaRingSum.reset();\r\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\r\n    },\r\n    polygonEnd: function() {\r\n      var area = 2 * d3_geo_areaRingSum;\r\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\r\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\r\n    }\r\n  };\r\n  function d3_geo_areaRingStart() {\r\n    var λ00, φ00, λ0, cosφ0, sinφ0;\r\n    d3_geo_area.point = function(λ, φ) {\r\n      d3_geo_area.point = nextPoint;\r\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \r\n      sinφ0 = Math.sin(φ);\r\n    };\r\n    function nextPoint(λ, φ) {\r\n      λ *= d3_radians;\r\n      φ = φ * d3_radians / 2 + π / 4;\r\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\r\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\r\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\r\n    }\r\n    d3_geo_area.lineEnd = function() {\r\n      nextPoint(λ00, φ00);\r\n    };\r\n  }\r\n  function d3_geo_cartesian(spherical) {\r\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\r\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\r\n  }\r\n  function d3_geo_cartesianDot(a, b) {\r\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n  }\r\n  function d3_geo_cartesianCross(a, b) {\r\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\r\n  }\r\n  function d3_geo_cartesianAdd(a, b) {\r\n    a[0] += b[0];\r\n    a[1] += b[1];\r\n    a[2] += b[2];\r\n  }\r\n  function d3_geo_cartesianScale(vector, k) {\r\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\r\n  }\r\n  function d3_geo_cartesianNormalize(d) {\r\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\r\n    d[0] /= l;\r\n    d[1] /= l;\r\n    d[2] /= l;\r\n  }\r\n  function d3_geo_spherical(cartesian) {\r\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\r\n  }\r\n  function d3_geo_sphericalEqual(a, b) {\r\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\r\n  }\r\n  d3.geo.bounds = function() {\r\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\r\n    var bound = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() {\r\n        bound.point = ringPoint;\r\n        bound.lineStart = ringStart;\r\n        bound.lineEnd = ringEnd;\r\n        dλSum = 0;\r\n        d3_geo_area.polygonStart();\r\n      },\r\n      polygonEnd: function() {\r\n        d3_geo_area.polygonEnd();\r\n        bound.point = point;\r\n        bound.lineStart = lineStart;\r\n        bound.lineEnd = lineEnd;\r\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\r\n        range[0] = λ0, range[1] = λ1;\r\n      }\r\n    };\r\n    function point(λ, φ) {\r\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\r\n      if (φ < φ0) φ0 = φ;\r\n      if (φ > φ1) φ1 = φ;\r\n    }\r\n    function linePoint(λ, φ) {\r\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\r\n      if (p0) {\r\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\r\n        d3_geo_cartesianNormalize(inflection);\r\n        inflection = d3_geo_spherical(inflection);\r\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\r\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\r\n          var φi = inflection[1] * d3_degrees;\r\n          if (φi > φ1) φ1 = φi;\r\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\r\n          var φi = -inflection[1] * d3_degrees;\r\n          if (φi < φ0) φ0 = φi;\r\n        } else {\r\n          if (φ < φ0) φ0 = φ;\r\n          if (φ > φ1) φ1 = φ;\r\n        }\r\n        if (antimeridian) {\r\n          if (λ < λ_) {\r\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\r\n          } else {\r\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\r\n          }\r\n        } else {\r\n          if (λ1 >= λ0) {\r\n            if (λ < λ0) λ0 = λ;\r\n            if (λ > λ1) λ1 = λ;\r\n          } else {\r\n            if (λ > λ_) {\r\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\r\n            } else {\r\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        point(λ, φ);\r\n      }\r\n      p0 = p, λ_ = λ;\r\n    }\r\n    function lineStart() {\r\n      bound.point = linePoint;\r\n    }\r\n    function lineEnd() {\r\n      range[0] = λ0, range[1] = λ1;\r\n      bound.point = point;\r\n      p0 = null;\r\n    }\r\n    function ringPoint(λ, φ) {\r\n      if (p0) {\r\n        var dλ = λ - λ_;\r\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\r\n      } else λ__ = λ, φ__ = φ;\r\n      d3_geo_area.point(λ, φ);\r\n      linePoint(λ, φ);\r\n    }\r\n    function ringStart() {\r\n      d3_geo_area.lineStart();\r\n    }\r\n    function ringEnd() {\r\n      ringPoint(λ__, φ__);\r\n      d3_geo_area.lineEnd();\r\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\r\n      range[0] = λ0, range[1] = λ1;\r\n      p0 = null;\r\n    }\r\n    function angle(λ0, λ1) {\r\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\r\n    }\r\n    function compareRanges(a, b) {\r\n      return a[0] - b[0];\r\n    }\r\n    function withinRange(x, range) {\r\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\r\n    }\r\n    return function(feature) {\r\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\r\n      ranges = [];\r\n      d3.geo.stream(feature, bound);\r\n      var n = ranges.length;\r\n      if (n) {\r\n        ranges.sort(compareRanges);\r\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\r\n          b = ranges[i];\r\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\r\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\r\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\r\n          } else {\r\n            merged.push(a = b);\r\n          }\r\n        }\r\n        var best = -Infinity, dλ;\r\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\r\n          b = merged[i];\r\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\r\n        }\r\n      }\r\n      ranges = range = null;\r\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\r\n    };\r\n  }();\r\n  d3.geo.centroid = function(object) {\r\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\r\n    d3.geo.stream(object, d3_geo_centroid);\r\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\r\n    if (m < ε2) {\r\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\r\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\r\n      m = x * x + y * y + z * z;\r\n      if (m < ε2) return [ NaN, NaN ];\r\n    }\r\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\r\n  };\r\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\r\n  var d3_geo_centroid = {\r\n    sphere: d3_noop,\r\n    point: d3_geo_centroidPoint,\r\n    lineStart: d3_geo_centroidLineStart,\r\n    lineEnd: d3_geo_centroidLineEnd,\r\n    polygonStart: function() {\r\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\r\n    },\r\n    polygonEnd: function() {\r\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\r\n    }\r\n  };\r\n  function d3_geo_centroidPoint(λ, φ) {\r\n    λ *= d3_radians;\r\n    var cosφ = Math.cos(φ *= d3_radians);\r\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\r\n  }\r\n  function d3_geo_centroidPointXYZ(x, y, z) {\r\n    ++d3_geo_centroidW0;\r\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\r\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\r\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\r\n  }\r\n  function d3_geo_centroidLineStart() {\r\n    var x0, y0, z0;\r\n    d3_geo_centroid.point = function(λ, φ) {\r\n      λ *= d3_radians;\r\n      var cosφ = Math.cos(φ *= d3_radians);\r\n      x0 = cosφ * Math.cos(λ);\r\n      y0 = cosφ * Math.sin(λ);\r\n      z0 = Math.sin(φ);\r\n      d3_geo_centroid.point = nextPoint;\r\n      d3_geo_centroidPointXYZ(x0, y0, z0);\r\n    };\r\n    function nextPoint(λ, φ) {\r\n      λ *= d3_radians;\r\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\r\n      d3_geo_centroidW1 += w;\r\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\r\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\r\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\r\n      d3_geo_centroidPointXYZ(x0, y0, z0);\r\n    }\r\n  }\r\n  function d3_geo_centroidLineEnd() {\r\n    d3_geo_centroid.point = d3_geo_centroidPoint;\r\n  }\r\n  function d3_geo_centroidRingStart() {\r\n    var λ00, φ00, x0, y0, z0;\r\n    d3_geo_centroid.point = function(λ, φ) {\r\n      λ00 = λ, φ00 = φ;\r\n      d3_geo_centroid.point = nextPoint;\r\n      λ *= d3_radians;\r\n      var cosφ = Math.cos(φ *= d3_radians);\r\n      x0 = cosφ * Math.cos(λ);\r\n      y0 = cosφ * Math.sin(λ);\r\n      z0 = Math.sin(φ);\r\n      d3_geo_centroidPointXYZ(x0, y0, z0);\r\n    };\r\n    d3_geo_centroid.lineEnd = function() {\r\n      nextPoint(λ00, φ00);\r\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\r\n      d3_geo_centroid.point = d3_geo_centroidPoint;\r\n    };\r\n    function nextPoint(λ, φ) {\r\n      λ *= d3_radians;\r\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\r\n      d3_geo_centroidX2 += v * cx;\r\n      d3_geo_centroidY2 += v * cy;\r\n      d3_geo_centroidZ2 += v * cz;\r\n      d3_geo_centroidW1 += w;\r\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\r\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\r\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\r\n      d3_geo_centroidPointXYZ(x0, y0, z0);\r\n    }\r\n  }\r\n  function d3_geo_compose(a, b) {\r\n    function compose(x, y) {\r\n      return x = a(x, y), b(x[0], x[1]);\r\n    }\r\n    if (a.invert && b.invert) compose.invert = function(x, y) {\r\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\r\n    };\r\n    return compose;\r\n  }\r\n  function d3_true() {\r\n    return true;\r\n  }\r\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\r\n    var subject = [], clip = [];\r\n    segments.forEach(function(segment) {\r\n      if ((n = segment.length - 1) <= 0) return;\r\n      var n, p0 = segment[0], p1 = segment[n];\r\n      if (d3_geo_sphericalEqual(p0, p1)) {\r\n        listener.lineStart();\r\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\r\n        listener.lineEnd();\r\n        return;\r\n      }\r\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\r\n      a.o = b;\r\n      subject.push(a);\r\n      clip.push(b);\r\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\r\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\r\n      a.o = b;\r\n      subject.push(a);\r\n      clip.push(b);\r\n    });\r\n    clip.sort(compare);\r\n    d3_geo_clipPolygonLinkCircular(subject);\r\n    d3_geo_clipPolygonLinkCircular(clip);\r\n    if (!subject.length) return;\r\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\r\n      clip[i].e = entry = !entry;\r\n    }\r\n    var start = subject[0], points, point;\r\n    while (1) {\r\n      var current = start, isSubject = true;\r\n      while (current.v) if ((current = current.n) === start) return;\r\n      points = current.z;\r\n      listener.lineStart();\r\n      do {\r\n        current.v = current.o.v = true;\r\n        if (current.e) {\r\n          if (isSubject) {\r\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\r\n          } else {\r\n            interpolate(current.x, current.n.x, 1, listener);\r\n          }\r\n          current = current.n;\r\n        } else {\r\n          if (isSubject) {\r\n            points = current.p.z;\r\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\r\n          } else {\r\n            interpolate(current.x, current.p.x, -1, listener);\r\n          }\r\n          current = current.p;\r\n        }\r\n        current = current.o;\r\n        points = current.z;\r\n        isSubject = !isSubject;\r\n      } while (!current.v);\r\n      listener.lineEnd();\r\n    }\r\n  }\r\n  function d3_geo_clipPolygonLinkCircular(array) {\r\n    if (!(n = array.length)) return;\r\n    var n, i = 0, a = array[0], b;\r\n    while (++i < n) {\r\n      a.n = b = array[i];\r\n      b.p = a;\r\n      a = b;\r\n    }\r\n    a.n = b = array[0];\r\n    b.p = a;\r\n  }\r\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\r\n    this.x = point;\r\n    this.z = points;\r\n    this.o = other;\r\n    this.e = entry;\r\n    this.v = false;\r\n    this.n = this.p = null;\r\n  }\r\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\r\n    return function(rotate, listener) {\r\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\r\n      var clip = {\r\n        point: point,\r\n        lineStart: lineStart,\r\n        lineEnd: lineEnd,\r\n        polygonStart: function() {\r\n          clip.point = pointRing;\r\n          clip.lineStart = ringStart;\r\n          clip.lineEnd = ringEnd;\r\n          segments = [];\r\n          polygon = [];\r\n        },\r\n        polygonEnd: function() {\r\n          clip.point = point;\r\n          clip.lineStart = lineStart;\r\n          clip.lineEnd = lineEnd;\r\n          segments = d3.merge(segments);\r\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\r\n          if (segments.length) {\r\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\r\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\r\n          } else if (clipStartInside) {\r\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\r\n            listener.lineStart();\r\n            interpolate(null, null, 1, listener);\r\n            listener.lineEnd();\r\n          }\r\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\r\n          segments = polygon = null;\r\n        },\r\n        sphere: function() {\r\n          listener.polygonStart();\r\n          listener.lineStart();\r\n          interpolate(null, null, 1, listener);\r\n          listener.lineEnd();\r\n          listener.polygonEnd();\r\n        }\r\n      };\r\n      function point(λ, φ) {\r\n        var point = rotate(λ, φ);\r\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\r\n      }\r\n      function pointLine(λ, φ) {\r\n        var point = rotate(λ, φ);\r\n        line.point(point[0], point[1]);\r\n      }\r\n      function lineStart() {\r\n        clip.point = pointLine;\r\n        line.lineStart();\r\n      }\r\n      function lineEnd() {\r\n        clip.point = point;\r\n        line.lineEnd();\r\n      }\r\n      var segments;\r\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\r\n      function pointRing(λ, φ) {\r\n        ring.push([ λ, φ ]);\r\n        var point = rotate(λ, φ);\r\n        ringListener.point(point[0], point[1]);\r\n      }\r\n      function ringStart() {\r\n        ringListener.lineStart();\r\n        ring = [];\r\n      }\r\n      function ringEnd() {\r\n        pointRing(ring[0][0], ring[0][1]);\r\n        ringListener.lineEnd();\r\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\r\n        ring.pop();\r\n        polygon.push(ring);\r\n        ring = null;\r\n        if (!n) return;\r\n        if (clean & 1) {\r\n          segment = ringSegments[0];\r\n          var n = segment.length - 1, i = -1, point;\r\n          if (n > 0) {\r\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\r\n            listener.lineStart();\r\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\r\n            listener.lineEnd();\r\n          }\r\n          return;\r\n        }\r\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\r\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\r\n      }\r\n      return clip;\r\n    };\r\n  }\r\n  function d3_geo_clipSegmentLength1(segment) {\r\n    return segment.length > 1;\r\n  }\r\n  function d3_geo_clipBufferListener() {\r\n    var lines = [], line;\r\n    return {\r\n      lineStart: function() {\r\n        lines.push(line = []);\r\n      },\r\n      point: function(λ, φ) {\r\n        line.push([ λ, φ ]);\r\n      },\r\n      lineEnd: d3_noop,\r\n      buffer: function() {\r\n        var buffer = lines;\r\n        lines = [];\r\n        line = null;\r\n        return buffer;\r\n      },\r\n      rejoin: function() {\r\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\r\n      }\r\n    };\r\n  }\r\n  function d3_geo_clipSort(a, b) {\r\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\r\n  }\r\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\r\n  function d3_geo_clipAntimeridianLine(listener) {\r\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\r\n    return {\r\n      lineStart: function() {\r\n        listener.lineStart();\r\n        clean = 1;\r\n      },\r\n      point: function(λ1, φ1) {\r\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\r\n        if (abs(dλ - π) < ε) {\r\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\r\n          listener.point(sλ0, φ0);\r\n          listener.lineEnd();\r\n          listener.lineStart();\r\n          listener.point(sλ1, φ0);\r\n          listener.point(λ1, φ0);\r\n          clean = 0;\r\n        } else if (sλ0 !== sλ1 && dλ >= π) {\r\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\r\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\r\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\r\n          listener.point(sλ0, φ0);\r\n          listener.lineEnd();\r\n          listener.lineStart();\r\n          listener.point(sλ1, φ0);\r\n          clean = 0;\r\n        }\r\n        listener.point(λ0 = λ1, φ0 = φ1);\r\n        sλ0 = sλ1;\r\n      },\r\n      lineEnd: function() {\r\n        listener.lineEnd();\r\n        λ0 = φ0 = NaN;\r\n      },\r\n      clean: function() {\r\n        return 2 - clean;\r\n      }\r\n    };\r\n  }\r\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\r\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\r\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\r\n  }\r\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\r\n    var φ;\r\n    if (from == null) {\r\n      φ = direction * halfπ;\r\n      listener.point(-π, φ);\r\n      listener.point(0, φ);\r\n      listener.point(π, φ);\r\n      listener.point(π, 0);\r\n      listener.point(π, -φ);\r\n      listener.point(0, -φ);\r\n      listener.point(-π, -φ);\r\n      listener.point(-π, 0);\r\n      listener.point(-π, φ);\r\n    } else if (abs(from[0] - to[0]) > ε) {\r\n      var s = from[0] < to[0] ? π : -π;\r\n      φ = direction * s / 2;\r\n      listener.point(-s, φ);\r\n      listener.point(0, φ);\r\n      listener.point(s, φ);\r\n    } else {\r\n      listener.point(to[0], to[1]);\r\n    }\r\n  }\r\n  function d3_geo_pointInPolygon(point, polygon) {\r\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\r\n    d3_geo_areaRingSum.reset();\r\n    for (var i = 0, n = polygon.length; i < n; ++i) {\r\n      var ring = polygon[i], m = ring.length;\r\n      if (!m) continue;\r\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\r\n      while (true) {\r\n        if (j === m) j = 0;\r\n        point = ring[j];\r\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\r\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\r\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\r\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\r\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\r\n          d3_geo_cartesianNormalize(arc);\r\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\r\n          d3_geo_cartesianNormalize(intersection);\r\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\r\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\r\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\r\n          }\r\n        }\r\n        if (!j++) break;\r\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\r\n      }\r\n    }\r\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\r\n  }\r\n  function d3_geo_clipCircle(radius) {\r\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\r\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\r\n    function visible(λ, φ) {\r\n      return Math.cos(λ) * Math.cos(φ) > cr;\r\n    }\r\n    function clipLine(listener) {\r\n      var point0, c0, v0, v00, clean;\r\n      return {\r\n        lineStart: function() {\r\n          v00 = v0 = false;\r\n          clean = 1;\r\n        },\r\n        point: function(λ, φ) {\r\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\r\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\r\n          if (v !== v0) {\r\n            point2 = intersect(point0, point1);\r\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\r\n              point1[0] += ε;\r\n              point1[1] += ε;\r\n              v = visible(point1[0], point1[1]);\r\n            }\r\n          }\r\n          if (v !== v0) {\r\n            clean = 0;\r\n            if (v) {\r\n              listener.lineStart();\r\n              point2 = intersect(point1, point0);\r\n              listener.point(point2[0], point2[1]);\r\n            } else {\r\n              point2 = intersect(point0, point1);\r\n              listener.point(point2[0], point2[1]);\r\n              listener.lineEnd();\r\n            }\r\n            point0 = point2;\r\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\r\n            var t;\r\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\r\n              clean = 0;\r\n              if (smallRadius) {\r\n                listener.lineStart();\r\n                listener.point(t[0][0], t[0][1]);\r\n                listener.point(t[1][0], t[1][1]);\r\n                listener.lineEnd();\r\n              } else {\r\n                listener.point(t[1][0], t[1][1]);\r\n                listener.lineEnd();\r\n                listener.lineStart();\r\n                listener.point(t[0][0], t[0][1]);\r\n              }\r\n            }\r\n          }\r\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\r\n            listener.point(point1[0], point1[1]);\r\n          }\r\n          point0 = point1, v0 = v, c0 = c;\r\n        },\r\n        lineEnd: function() {\r\n          if (v0) listener.lineEnd();\r\n          point0 = null;\r\n        },\r\n        clean: function() {\r\n          return clean | (v00 && v0) << 1;\r\n        }\r\n      };\r\n    }\r\n    function intersect(a, b, two) {\r\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\r\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\r\n      if (!determinant) return !two && a;\r\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\r\n      d3_geo_cartesianAdd(A, B);\r\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\r\n      if (t2 < 0) return;\r\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\r\n      d3_geo_cartesianAdd(q, A);\r\n      q = d3_geo_spherical(q);\r\n      if (!two) return q;\r\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\r\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\r\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\r\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\r\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\r\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\r\n        d3_geo_cartesianAdd(q1, A);\r\n        return [ q, d3_geo_spherical(q1) ];\r\n      }\r\n    }\r\n    function code(λ, φ) {\r\n      var r = smallRadius ? radius : π - radius, code = 0;\r\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\r\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\r\n      return code;\r\n    }\r\n  }\r\n  function d3_geom_clipLine(x0, y0, x1, y1) {\r\n    return function(line) {\r\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\r\n      r = x0 - ax;\r\n      if (!dx && r > 0) return;\r\n      r /= dx;\r\n      if (dx < 0) {\r\n        if (r < t0) return;\r\n        if (r < t1) t1 = r;\r\n      } else if (dx > 0) {\r\n        if (r > t1) return;\r\n        if (r > t0) t0 = r;\r\n      }\r\n      r = x1 - ax;\r\n      if (!dx && r < 0) return;\r\n      r /= dx;\r\n      if (dx < 0) {\r\n        if (r > t1) return;\r\n        if (r > t0) t0 = r;\r\n      } else if (dx > 0) {\r\n        if (r < t0) return;\r\n        if (r < t1) t1 = r;\r\n      }\r\n      r = y0 - ay;\r\n      if (!dy && r > 0) return;\r\n      r /= dy;\r\n      if (dy < 0) {\r\n        if (r < t0) return;\r\n        if (r < t1) t1 = r;\r\n      } else if (dy > 0) {\r\n        if (r > t1) return;\r\n        if (r > t0) t0 = r;\r\n      }\r\n      r = y1 - ay;\r\n      if (!dy && r < 0) return;\r\n      r /= dy;\r\n      if (dy < 0) {\r\n        if (r > t1) return;\r\n        if (r > t0) t0 = r;\r\n      } else if (dy > 0) {\r\n        if (r < t0) return;\r\n        if (r < t1) t1 = r;\r\n      }\r\n      if (t0 > 0) line.a = {\r\n        x: ax + t0 * dx,\r\n        y: ay + t0 * dy\r\n      };\r\n      if (t1 < 1) line.b = {\r\n        x: ax + t1 * dx,\r\n        y: ay + t1 * dy\r\n      };\r\n      return line;\r\n    };\r\n  }\r\n  var d3_geo_clipExtentMAX = 1e9;\r\n  d3.geo.clipExtent = function() {\r\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\r\n      stream: function(output) {\r\n        if (stream) stream.valid = false;\r\n        stream = clip(output);\r\n        stream.valid = true;\r\n        return stream;\r\n      },\r\n      extent: function(_) {\r\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\r\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\r\n        if (stream) stream.valid = false, stream = null;\r\n        return clipExtent;\r\n      }\r\n    };\r\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\r\n  };\r\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\r\n    return function(listener) {\r\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\r\n      var clip = {\r\n        point: point,\r\n        lineStart: lineStart,\r\n        lineEnd: lineEnd,\r\n        polygonStart: function() {\r\n          listener = bufferListener;\r\n          segments = [];\r\n          polygon = [];\r\n          clean = true;\r\n        },\r\n        polygonEnd: function() {\r\n          listener = listener_;\r\n          segments = d3.merge(segments);\r\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\r\n          if (inside || visible) {\r\n            listener.polygonStart();\r\n            if (inside) {\r\n              listener.lineStart();\r\n              interpolate(null, null, 1, listener);\r\n              listener.lineEnd();\r\n            }\r\n            if (visible) {\r\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\r\n            }\r\n            listener.polygonEnd();\r\n          }\r\n          segments = polygon = ring = null;\r\n        }\r\n      };\r\n      function insidePolygon(p) {\r\n        var wn = 0, n = polygon.length, y = p[1];\r\n        for (var i = 0; i < n; ++i) {\r\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\r\n            b = v[j];\r\n            if (a[1] <= y) {\r\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\r\n            } else {\r\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\r\n            }\r\n            a = b;\r\n          }\r\n        }\r\n        return wn !== 0;\r\n      }\r\n      function interpolate(from, to, direction, listener) {\r\n        var a = 0, a1 = 0;\r\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\r\n          do {\r\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\r\n          } while ((a = (a + direction + 4) % 4) !== a1);\r\n        } else {\r\n          listener.point(to[0], to[1]);\r\n        }\r\n      }\r\n      function pointVisible(x, y) {\r\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\r\n      }\r\n      function point(x, y) {\r\n        if (pointVisible(x, y)) listener.point(x, y);\r\n      }\r\n      var x__, y__, v__, x_, y_, v_, first, clean;\r\n      function lineStart() {\r\n        clip.point = linePoint;\r\n        if (polygon) polygon.push(ring = []);\r\n        first = true;\r\n        v_ = false;\r\n        x_ = y_ = NaN;\r\n      }\r\n      function lineEnd() {\r\n        if (segments) {\r\n          linePoint(x__, y__);\r\n          if (v__ && v_) bufferListener.rejoin();\r\n          segments.push(bufferListener.buffer());\r\n        }\r\n        clip.point = point;\r\n        if (v_) listener.lineEnd();\r\n      }\r\n      function linePoint(x, y) {\r\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\r\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\r\n        var v = pointVisible(x, y);\r\n        if (polygon) ring.push([ x, y ]);\r\n        if (first) {\r\n          x__ = x, y__ = y, v__ = v;\r\n          first = false;\r\n          if (v) {\r\n            listener.lineStart();\r\n            listener.point(x, y);\r\n          }\r\n        } else {\r\n          if (v && v_) listener.point(x, y); else {\r\n            var l = {\r\n              a: {\r\n                x: x_,\r\n                y: y_\r\n              },\r\n              b: {\r\n                x: x,\r\n                y: y\r\n              }\r\n            };\r\n            if (clipLine(l)) {\r\n              if (!v_) {\r\n                listener.lineStart();\r\n                listener.point(l.a.x, l.a.y);\r\n              }\r\n              listener.point(l.b.x, l.b.y);\r\n              if (!v) listener.lineEnd();\r\n              clean = false;\r\n            } else if (v) {\r\n              listener.lineStart();\r\n              listener.point(x, y);\r\n              clean = false;\r\n            }\r\n          }\r\n        }\r\n        x_ = x, y_ = y, v_ = v;\r\n      }\r\n      return clip;\r\n    };\r\n    function corner(p, direction) {\r\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\r\n    }\r\n    function compare(a, b) {\r\n      return comparePoints(a.x, b.x);\r\n    }\r\n    function comparePoints(a, b) {\r\n      var ca = corner(a, 1), cb = corner(b, 1);\r\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\r\n    }\r\n  }\r\n  function d3_geo_conic(projectAt) {\r\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\r\n    p.parallels = function(_) {\r\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\r\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\r\n    };\r\n    return p;\r\n  }\r\n  function d3_geo_conicEqualArea(φ0, φ1) {\r\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\r\n    function forward(λ, φ) {\r\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\r\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ0_y = ρ0 - y;\r\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.conicEqualArea = function() {\r\n    return d3_geo_conic(d3_geo_conicEqualArea);\r\n  }).raw = d3_geo_conicEqualArea;\r\n  d3.geo.albers = function() {\r\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\r\n  };\r\n  d3.geo.albersUsa = function() {\r\n    var lower48 = d3.geo.albers();\r\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\r\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\r\n    var point, pointStream = {\r\n      point: function(x, y) {\r\n        point = [ x, y ];\r\n      }\r\n    }, lower48Point, alaskaPoint, hawaiiPoint;\r\n    function albersUsa(coordinates) {\r\n      var x = coordinates[0], y = coordinates[1];\r\n      point = null;\r\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\r\n      return point;\r\n    }\r\n    albersUsa.invert = function(coordinates) {\r\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\r\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\r\n    };\r\n    albersUsa.stream = function(stream) {\r\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\r\n      return {\r\n        point: function(x, y) {\r\n          lower48Stream.point(x, y);\r\n          alaskaStream.point(x, y);\r\n          hawaiiStream.point(x, y);\r\n        },\r\n        sphere: function() {\r\n          lower48Stream.sphere();\r\n          alaskaStream.sphere();\r\n          hawaiiStream.sphere();\r\n        },\r\n        lineStart: function() {\r\n          lower48Stream.lineStart();\r\n          alaskaStream.lineStart();\r\n          hawaiiStream.lineStart();\r\n        },\r\n        lineEnd: function() {\r\n          lower48Stream.lineEnd();\r\n          alaskaStream.lineEnd();\r\n          hawaiiStream.lineEnd();\r\n        },\r\n        polygonStart: function() {\r\n          lower48Stream.polygonStart();\r\n          alaskaStream.polygonStart();\r\n          hawaiiStream.polygonStart();\r\n        },\r\n        polygonEnd: function() {\r\n          lower48Stream.polygonEnd();\r\n          alaskaStream.polygonEnd();\r\n          hawaiiStream.polygonEnd();\r\n        }\r\n      };\r\n    };\r\n    albersUsa.precision = function(_) {\r\n      if (!arguments.length) return lower48.precision();\r\n      lower48.precision(_);\r\n      alaska.precision(_);\r\n      hawaii.precision(_);\r\n      return albersUsa;\r\n    };\r\n    albersUsa.scale = function(_) {\r\n      if (!arguments.length) return lower48.scale();\r\n      lower48.scale(_);\r\n      alaska.scale(_ * .35);\r\n      hawaii.scale(_);\r\n      return albersUsa.translate(lower48.translate());\r\n    };\r\n    albersUsa.translate = function(_) {\r\n      if (!arguments.length) return lower48.translate();\r\n      var k = lower48.scale(), x = +_[0], y = +_[1];\r\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\r\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\r\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\r\n      return albersUsa;\r\n    };\r\n    return albersUsa.scale(1070);\r\n  };\r\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\r\n    point: d3_noop,\r\n    lineStart: d3_noop,\r\n    lineEnd: d3_noop,\r\n    polygonStart: function() {\r\n      d3_geo_pathAreaPolygon = 0;\r\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\r\n    },\r\n    polygonEnd: function() {\r\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\r\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\r\n    }\r\n  };\r\n  function d3_geo_pathAreaRingStart() {\r\n    var x00, y00, x0, y0;\r\n    d3_geo_pathArea.point = function(x, y) {\r\n      d3_geo_pathArea.point = nextPoint;\r\n      x00 = x0 = x, y00 = y0 = y;\r\n    };\r\n    function nextPoint(x, y) {\r\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\r\n      x0 = x, y0 = y;\r\n    }\r\n    d3_geo_pathArea.lineEnd = function() {\r\n      nextPoint(x00, y00);\r\n    };\r\n  }\r\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\r\n  var d3_geo_pathBounds = {\r\n    point: d3_geo_pathBoundsPoint,\r\n    lineStart: d3_noop,\r\n    lineEnd: d3_noop,\r\n    polygonStart: d3_noop,\r\n    polygonEnd: d3_noop\r\n  };\r\n  function d3_geo_pathBoundsPoint(x, y) {\r\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\r\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\r\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\r\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\r\n  }\r\n  function d3_geo_pathBuffer() {\r\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\r\n    var stream = {\r\n      point: point,\r\n      lineStart: function() {\r\n        stream.point = pointLineStart;\r\n      },\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() {\r\n        stream.lineEnd = lineEndPolygon;\r\n      },\r\n      polygonEnd: function() {\r\n        stream.lineEnd = lineEnd;\r\n        stream.point = point;\r\n      },\r\n      pointRadius: function(_) {\r\n        pointCircle = d3_geo_pathBufferCircle(_);\r\n        return stream;\r\n      },\r\n      result: function() {\r\n        if (buffer.length) {\r\n          var result = buffer.join(\"\");\r\n          buffer = [];\r\n          return result;\r\n        }\r\n      }\r\n    };\r\n    function point(x, y) {\r\n      buffer.push(\"M\", x, \",\", y, pointCircle);\r\n    }\r\n    function pointLineStart(x, y) {\r\n      buffer.push(\"M\", x, \",\", y);\r\n      stream.point = pointLine;\r\n    }\r\n    function pointLine(x, y) {\r\n      buffer.push(\"L\", x, \",\", y);\r\n    }\r\n    function lineEnd() {\r\n      stream.point = point;\r\n    }\r\n    function lineEndPolygon() {\r\n      buffer.push(\"Z\");\r\n    }\r\n    return stream;\r\n  }\r\n  function d3_geo_pathBufferCircle(radius) {\r\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\r\n  }\r\n  var d3_geo_pathCentroid = {\r\n    point: d3_geo_pathCentroidPoint,\r\n    lineStart: d3_geo_pathCentroidLineStart,\r\n    lineEnd: d3_geo_pathCentroidLineEnd,\r\n    polygonStart: function() {\r\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\r\n    },\r\n    polygonEnd: function() {\r\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\r\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\r\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\r\n    }\r\n  };\r\n  function d3_geo_pathCentroidPoint(x, y) {\r\n    d3_geo_centroidX0 += x;\r\n    d3_geo_centroidY0 += y;\r\n    ++d3_geo_centroidZ0;\r\n  }\r\n  function d3_geo_pathCentroidLineStart() {\r\n    var x0, y0;\r\n    d3_geo_pathCentroid.point = function(x, y) {\r\n      d3_geo_pathCentroid.point = nextPoint;\r\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\r\n    };\r\n    function nextPoint(x, y) {\r\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\r\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\r\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\r\n      d3_geo_centroidZ1 += z;\r\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\r\n    }\r\n  }\r\n  function d3_geo_pathCentroidLineEnd() {\r\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\r\n  }\r\n  function d3_geo_pathCentroidRingStart() {\r\n    var x00, y00, x0, y0;\r\n    d3_geo_pathCentroid.point = function(x, y) {\r\n      d3_geo_pathCentroid.point = nextPoint;\r\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\r\n    };\r\n    function nextPoint(x, y) {\r\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\r\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\r\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\r\n      d3_geo_centroidZ1 += z;\r\n      z = y0 * x - x0 * y;\r\n      d3_geo_centroidX2 += z * (x0 + x);\r\n      d3_geo_centroidY2 += z * (y0 + y);\r\n      d3_geo_centroidZ2 += z * 3;\r\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\r\n    }\r\n    d3_geo_pathCentroid.lineEnd = function() {\r\n      nextPoint(x00, y00);\r\n    };\r\n  }\r\n  function d3_geo_pathContext(context) {\r\n    var pointRadius = 4.5;\r\n    var stream = {\r\n      point: point,\r\n      lineStart: function() {\r\n        stream.point = pointLineStart;\r\n      },\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() {\r\n        stream.lineEnd = lineEndPolygon;\r\n      },\r\n      polygonEnd: function() {\r\n        stream.lineEnd = lineEnd;\r\n        stream.point = point;\r\n      },\r\n      pointRadius: function(_) {\r\n        pointRadius = _;\r\n        return stream;\r\n      },\r\n      result: d3_noop\r\n    };\r\n    function point(x, y) {\r\n      context.moveTo(x + pointRadius, y);\r\n      context.arc(x, y, pointRadius, 0, τ);\r\n    }\r\n    function pointLineStart(x, y) {\r\n      context.moveTo(x, y);\r\n      stream.point = pointLine;\r\n    }\r\n    function pointLine(x, y) {\r\n      context.lineTo(x, y);\r\n    }\r\n    function lineEnd() {\r\n      stream.point = point;\r\n    }\r\n    function lineEndPolygon() {\r\n      context.closePath();\r\n    }\r\n    return stream;\r\n  }\r\n  function d3_geo_resample(project) {\r\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\r\n    function resample(stream) {\r\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\r\n    }\r\n    function resampleNone(stream) {\r\n      return d3_geo_transformPoint(stream, function(x, y) {\r\n        x = project(x, y);\r\n        stream.point(x[0], x[1]);\r\n      });\r\n    }\r\n    function resampleRecursive(stream) {\r\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\r\n      var resample = {\r\n        point: point,\r\n        lineStart: lineStart,\r\n        lineEnd: lineEnd,\r\n        polygonStart: function() {\r\n          stream.polygonStart();\r\n          resample.lineStart = ringStart;\r\n        },\r\n        polygonEnd: function() {\r\n          stream.polygonEnd();\r\n          resample.lineStart = lineStart;\r\n        }\r\n      };\r\n      function point(x, y) {\r\n        x = project(x, y);\r\n        stream.point(x[0], x[1]);\r\n      }\r\n      function lineStart() {\r\n        x0 = NaN;\r\n        resample.point = linePoint;\r\n        stream.lineStart();\r\n      }\r\n      function linePoint(λ, φ) {\r\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\r\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\r\n        stream.point(x0, y0);\r\n      }\r\n      function lineEnd() {\r\n        resample.point = point;\r\n        stream.lineEnd();\r\n      }\r\n      function ringStart() {\r\n        lineStart();\r\n        resample.point = ringPoint;\r\n        resample.lineEnd = ringEnd;\r\n      }\r\n      function ringPoint(λ, φ) {\r\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\r\n        resample.point = linePoint;\r\n      }\r\n      function ringEnd() {\r\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\r\n        resample.lineEnd = lineEnd;\r\n        lineEnd();\r\n      }\r\n      return resample;\r\n    }\r\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\r\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\r\n      if (d2 > 4 * δ2 && depth--) {\r\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\r\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\r\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\r\n          stream.point(x2, y2);\r\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\r\n        }\r\n      }\r\n    }\r\n    resample.precision = function(_) {\r\n      if (!arguments.length) return Math.sqrt(δ2);\r\n      maxDepth = (δ2 = _ * _) > 0 && 16;\r\n      return resample;\r\n    };\r\n    return resample;\r\n  }\r\n  d3.geo.path = function() {\r\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\r\n    function path(object) {\r\n      if (object) {\r\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\r\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\r\n        d3.geo.stream(object, cacheStream);\r\n      }\r\n      return contextStream.result();\r\n    }\r\n    path.area = function(object) {\r\n      d3_geo_pathAreaSum = 0;\r\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\r\n      return d3_geo_pathAreaSum;\r\n    };\r\n    path.centroid = function(object) {\r\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\r\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\r\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\r\n    };\r\n    path.bounds = function(object) {\r\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\r\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\r\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\r\n    };\r\n    path.projection = function(_) {\r\n      if (!arguments.length) return projection;\r\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\r\n      return reset();\r\n    };\r\n    path.context = function(_) {\r\n      if (!arguments.length) return context;\r\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\r\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\r\n      return reset();\r\n    };\r\n    path.pointRadius = function(_) {\r\n      if (!arguments.length) return pointRadius;\r\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\r\n      return path;\r\n    };\r\n    function reset() {\r\n      cacheStream = null;\r\n      return path;\r\n    }\r\n    return path.projection(d3.geo.albersUsa()).context(null);\r\n  };\r\n  function d3_geo_pathProjectStream(project) {\r\n    var resample = d3_geo_resample(function(x, y) {\r\n      return project([ x * d3_degrees, y * d3_degrees ]);\r\n    });\r\n    return function(stream) {\r\n      return d3_geo_projectionRadians(resample(stream));\r\n    };\r\n  }\r\n  d3.geo.transform = function(methods) {\r\n    return {\r\n      stream: function(stream) {\r\n        var transform = new d3_geo_transform(stream);\r\n        for (var k in methods) transform[k] = methods[k];\r\n        return transform;\r\n      }\r\n    };\r\n  };\r\n  function d3_geo_transform(stream) {\r\n    this.stream = stream;\r\n  }\r\n  d3_geo_transform.prototype = {\r\n    point: function(x, y) {\r\n      this.stream.point(x, y);\r\n    },\r\n    sphere: function() {\r\n      this.stream.sphere();\r\n    },\r\n    lineStart: function() {\r\n      this.stream.lineStart();\r\n    },\r\n    lineEnd: function() {\r\n      this.stream.lineEnd();\r\n    },\r\n    polygonStart: function() {\r\n      this.stream.polygonStart();\r\n    },\r\n    polygonEnd: function() {\r\n      this.stream.polygonEnd();\r\n    }\r\n  };\r\n  function d3_geo_transformPoint(stream, point) {\r\n    return {\r\n      point: point,\r\n      sphere: function() {\r\n        stream.sphere();\r\n      },\r\n      lineStart: function() {\r\n        stream.lineStart();\r\n      },\r\n      lineEnd: function() {\r\n        stream.lineEnd();\r\n      },\r\n      polygonStart: function() {\r\n        stream.polygonStart();\r\n      },\r\n      polygonEnd: function() {\r\n        stream.polygonEnd();\r\n      }\r\n    };\r\n  }\r\n  d3.geo.projection = d3_geo_projection;\r\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\r\n  function d3_geo_projection(project) {\r\n    return d3_geo_projectionMutator(function() {\r\n      return project;\r\n    })();\r\n  }\r\n  function d3_geo_projectionMutator(projectAt) {\r\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\r\n      x = project(x, y);\r\n      return [ x[0] * k + δx, δy - x[1] * k ];\r\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\r\n    function projection(point) {\r\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\r\n      return [ point[0] * k + δx, δy - point[1] * k ];\r\n    }\r\n    function invert(point) {\r\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\r\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\r\n    }\r\n    projection.stream = function(output) {\r\n      if (stream) stream.valid = false;\r\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\r\n      stream.valid = true;\r\n      return stream;\r\n    };\r\n    projection.clipAngle = function(_) {\r\n      if (!arguments.length) return clipAngle;\r\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\r\n      return invalidate();\r\n    };\r\n    projection.clipExtent = function(_) {\r\n      if (!arguments.length) return clipExtent;\r\n      clipExtent = _;\r\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\r\n      return invalidate();\r\n    };\r\n    projection.scale = function(_) {\r\n      if (!arguments.length) return k;\r\n      k = +_;\r\n      return reset();\r\n    };\r\n    projection.translate = function(_) {\r\n      if (!arguments.length) return [ x, y ];\r\n      x = +_[0];\r\n      y = +_[1];\r\n      return reset();\r\n    };\r\n    projection.center = function(_) {\r\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\r\n      λ = _[0] % 360 * d3_radians;\r\n      φ = _[1] % 360 * d3_radians;\r\n      return reset();\r\n    };\r\n    projection.rotate = function(_) {\r\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\r\n      δλ = _[0] % 360 * d3_radians;\r\n      δφ = _[1] % 360 * d3_radians;\r\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\r\n      return reset();\r\n    };\r\n    d3.rebind(projection, projectResample, \"precision\");\r\n    function reset() {\r\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\r\n      var center = project(λ, φ);\r\n      δx = x - center[0] * k;\r\n      δy = y + center[1] * k;\r\n      return invalidate();\r\n    }\r\n    function invalidate() {\r\n      if (stream) stream.valid = false, stream = null;\r\n      return projection;\r\n    }\r\n    return function() {\r\n      project = projectAt.apply(this, arguments);\r\n      projection.invert = project.invert && invert;\r\n      return reset();\r\n    };\r\n  }\r\n  function d3_geo_projectionRadians(stream) {\r\n    return d3_geo_transformPoint(stream, function(x, y) {\r\n      stream.point(x * d3_radians, y * d3_radians);\r\n    });\r\n  }\r\n  function d3_geo_equirectangular(λ, φ) {\r\n    return [ λ, φ ];\r\n  }\r\n  (d3.geo.equirectangular = function() {\r\n    return d3_geo_projection(d3_geo_equirectangular);\r\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\r\n  d3.geo.rotation = function(rotate) {\r\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\r\n    function forward(coordinates) {\r\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\r\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\r\n    }\r\n    forward.invert = function(coordinates) {\r\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\r\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\r\n    };\r\n    return forward;\r\n  };\r\n  function d3_geo_identityRotation(λ, φ) {\r\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\r\n  }\r\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\r\n  function d3_geo_rotation(δλ, δφ, δγ) {\r\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\r\n  }\r\n  function d3_geo_forwardRotationλ(δλ) {\r\n    return function(λ, φ) {\r\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\r\n    };\r\n  }\r\n  function d3_geo_rotationλ(δλ) {\r\n    var rotation = d3_geo_forwardRotationλ(δλ);\r\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\r\n    return rotation;\r\n  }\r\n  function d3_geo_rotationφγ(δφ, δγ) {\r\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\r\n    function rotation(λ, φ) {\r\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\r\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\r\n    }\r\n    rotation.invert = function(λ, φ) {\r\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\r\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\r\n    };\r\n    return rotation;\r\n  }\r\n  d3.geo.circle = function() {\r\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\r\n    function circle() {\r\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\r\n      interpolate(null, null, 1, {\r\n        point: function(x, y) {\r\n          ring.push(x = rotate(x, y));\r\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\r\n        }\r\n      });\r\n      return {\r\n        type: \"Polygon\",\r\n        coordinates: [ ring ]\r\n      };\r\n    }\r\n    circle.origin = function(x) {\r\n      if (!arguments.length) return origin;\r\n      origin = x;\r\n      return circle;\r\n    };\r\n    circle.angle = function(x) {\r\n      if (!arguments.length) return angle;\r\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\r\n      return circle;\r\n    };\r\n    circle.precision = function(_) {\r\n      if (!arguments.length) return precision;\r\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\r\n      return circle;\r\n    };\r\n    return circle.angle(90);\r\n  };\r\n  function d3_geo_circleInterpolate(radius, precision) {\r\n    var cr = Math.cos(radius), sr = Math.sin(radius);\r\n    return function(from, to, direction, listener) {\r\n      var step = direction * precision;\r\n      if (from != null) {\r\n        from = d3_geo_circleAngle(cr, from);\r\n        to = d3_geo_circleAngle(cr, to);\r\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\r\n      } else {\r\n        from = radius + direction * τ;\r\n        to = radius - .5 * step;\r\n      }\r\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\r\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\r\n      }\r\n    };\r\n  }\r\n  function d3_geo_circleAngle(cr, point) {\r\n    var a = d3_geo_cartesian(point);\r\n    a[0] -= cr;\r\n    d3_geo_cartesianNormalize(a);\r\n    var angle = d3_acos(-a[1]);\r\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\r\n  }\r\n  d3.geo.distance = function(a, b) {\r\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\r\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\r\n  };\r\n  d3.geo.graticule = function() {\r\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\r\n    function graticule() {\r\n      return {\r\n        type: \"MultiLineString\",\r\n        coordinates: lines()\r\n      };\r\n    }\r\n    function lines() {\r\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\r\n        return abs(x % DX) > ε;\r\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\r\n        return abs(y % DY) > ε;\r\n      }).map(y));\r\n    }\r\n    graticule.lines = function() {\r\n      return lines().map(function(coordinates) {\r\n        return {\r\n          type: \"LineString\",\r\n          coordinates: coordinates\r\n        };\r\n      });\r\n    };\r\n    graticule.outline = function() {\r\n      return {\r\n        type: \"Polygon\",\r\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\r\n      };\r\n    };\r\n    graticule.extent = function(_) {\r\n      if (!arguments.length) return graticule.minorExtent();\r\n      return graticule.majorExtent(_).minorExtent(_);\r\n    };\r\n    graticule.majorExtent = function(_) {\r\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\r\n      X0 = +_[0][0], X1 = +_[1][0];\r\n      Y0 = +_[0][1], Y1 = +_[1][1];\r\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\r\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\r\n      return graticule.precision(precision);\r\n    };\r\n    graticule.minorExtent = function(_) {\r\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\r\n      x0 = +_[0][0], x1 = +_[1][0];\r\n      y0 = +_[0][1], y1 = +_[1][1];\r\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\r\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\r\n      return graticule.precision(precision);\r\n    };\r\n    graticule.step = function(_) {\r\n      if (!arguments.length) return graticule.minorStep();\r\n      return graticule.majorStep(_).minorStep(_);\r\n    };\r\n    graticule.majorStep = function(_) {\r\n      if (!arguments.length) return [ DX, DY ];\r\n      DX = +_[0], DY = +_[1];\r\n      return graticule;\r\n    };\r\n    graticule.minorStep = function(_) {\r\n      if (!arguments.length) return [ dx, dy ];\r\n      dx = +_[0], dy = +_[1];\r\n      return graticule;\r\n    };\r\n    graticule.precision = function(_) {\r\n      if (!arguments.length) return precision;\r\n      precision = +_;\r\n      x = d3_geo_graticuleX(y0, y1, 90);\r\n      y = d3_geo_graticuleY(x0, x1, precision);\r\n      X = d3_geo_graticuleX(Y0, Y1, 90);\r\n      Y = d3_geo_graticuleY(X0, X1, precision);\r\n      return graticule;\r\n    };\r\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\r\n  };\r\n  function d3_geo_graticuleX(y0, y1, dy) {\r\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\r\n    return function(x) {\r\n      return y.map(function(y) {\r\n        return [ x, y ];\r\n      });\r\n    };\r\n  }\r\n  function d3_geo_graticuleY(x0, x1, dx) {\r\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\r\n    return function(y) {\r\n      return x.map(function(x) {\r\n        return [ x, y ];\r\n      });\r\n    };\r\n  }\r\n  function d3_source(d) {\r\n    return d.source;\r\n  }\r\n  function d3_target(d) {\r\n    return d.target;\r\n  }\r\n  d3.geo.greatArc = function() {\r\n    var source = d3_source, source_, target = d3_target, target_;\r\n    function greatArc() {\r\n      return {\r\n        type: \"LineString\",\r\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\r\n      };\r\n    }\r\n    greatArc.distance = function() {\r\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\r\n    };\r\n    greatArc.source = function(_) {\r\n      if (!arguments.length) return source;\r\n      source = _, source_ = typeof _ === \"function\" ? null : _;\r\n      return greatArc;\r\n    };\r\n    greatArc.target = function(_) {\r\n      if (!arguments.length) return target;\r\n      target = _, target_ = typeof _ === \"function\" ? null : _;\r\n      return greatArc;\r\n    };\r\n    greatArc.precision = function() {\r\n      return arguments.length ? greatArc : 0;\r\n    };\r\n    return greatArc;\r\n  };\r\n  d3.geo.interpolate = function(source, target) {\r\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\r\n  };\r\n  function d3_geo_interpolate(x0, y0, x1, y1) {\r\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\r\n    var interpolate = d ? function(t) {\r\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\r\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\r\n    } : function() {\r\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\r\n    };\r\n    interpolate.distance = d;\r\n    return interpolate;\r\n  }\r\n  d3.geo.length = function(object) {\r\n    d3_geo_lengthSum = 0;\r\n    d3.geo.stream(object, d3_geo_length);\r\n    return d3_geo_lengthSum;\r\n  };\r\n  var d3_geo_lengthSum;\r\n  var d3_geo_length = {\r\n    sphere: d3_noop,\r\n    point: d3_noop,\r\n    lineStart: d3_geo_lengthLineStart,\r\n    lineEnd: d3_noop,\r\n    polygonStart: d3_noop,\r\n    polygonEnd: d3_noop\r\n  };\r\n  function d3_geo_lengthLineStart() {\r\n    var λ0, sinφ0, cosφ0;\r\n    d3_geo_length.point = function(λ, φ) {\r\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\r\n      d3_geo_length.point = nextPoint;\r\n    };\r\n    d3_geo_length.lineEnd = function() {\r\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\r\n    };\r\n    function nextPoint(λ, φ) {\r\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\r\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\r\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\r\n    }\r\n  }\r\n  function d3_geo_azimuthal(scale, angle) {\r\n    function azimuthal(λ, φ) {\r\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\r\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\r\n    }\r\n    azimuthal.invert = function(x, y) {\r\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\r\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\r\n    };\r\n    return azimuthal;\r\n  }\r\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\r\n    return Math.sqrt(2 / (1 + cosλcosφ));\r\n  }, function(ρ) {\r\n    return 2 * Math.asin(ρ / 2);\r\n  });\r\n  (d3.geo.azimuthalEqualArea = function() {\r\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\r\n  }).raw = d3_geo_azimuthalEqualArea;\r\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\r\n    var c = Math.acos(cosλcosφ);\r\n    return c && c / Math.sin(c);\r\n  }, d3_identity);\r\n  (d3.geo.azimuthalEquidistant = function() {\r\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\r\n  }).raw = d3_geo_azimuthalEquidistant;\r\n  function d3_geo_conicConformal(φ0, φ1) {\r\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\r\n      return Math.tan(π / 4 + φ / 2);\r\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\r\n    if (!n) return d3_geo_mercator;\r\n    function forward(λ, φ) {\r\n      if (F > 0) {\r\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\r\n      } else {\r\n        if (φ > halfπ - ε) φ = halfπ - ε;\r\n      }\r\n      var ρ = F / Math.pow(t(φ), n);\r\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\r\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.conicConformal = function() {\r\n    return d3_geo_conic(d3_geo_conicConformal);\r\n  }).raw = d3_geo_conicConformal;\r\n  function d3_geo_conicEquidistant(φ0, φ1) {\r\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\r\n    if (abs(n) < ε) return d3_geo_equirectangular;\r\n    function forward(λ, φ) {\r\n      var ρ = G - φ;\r\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ0_y = G - y;\r\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.conicEquidistant = function() {\r\n    return d3_geo_conic(d3_geo_conicEquidistant);\r\n  }).raw = d3_geo_conicEquidistant;\r\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\r\n    return 1 / cosλcosφ;\r\n  }, Math.atan);\r\n  (d3.geo.gnomonic = function() {\r\n    return d3_geo_projection(d3_geo_gnomonic);\r\n  }).raw = d3_geo_gnomonic;\r\n  function d3_geo_mercator(λ, φ) {\r\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\r\n  }\r\n  d3_geo_mercator.invert = function(x, y) {\r\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\r\n  };\r\n  function d3_geo_mercatorProjection(project) {\r\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\r\n    m.scale = function() {\r\n      var v = scale.apply(m, arguments);\r\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\r\n    };\r\n    m.translate = function() {\r\n      var v = translate.apply(m, arguments);\r\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\r\n    };\r\n    m.clipExtent = function(_) {\r\n      var v = clipExtent.apply(m, arguments);\r\n      if (v === m) {\r\n        if (clipAuto = _ == null) {\r\n          var k = π * scale(), t = translate();\r\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\r\n        }\r\n      } else if (clipAuto) {\r\n        v = null;\r\n      }\r\n      return v;\r\n    };\r\n    return m.clipExtent(null);\r\n  }\r\n  (d3.geo.mercator = function() {\r\n    return d3_geo_mercatorProjection(d3_geo_mercator);\r\n  }).raw = d3_geo_mercator;\r\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\r\n    return 1;\r\n  }, Math.asin);\r\n  (d3.geo.orthographic = function() {\r\n    return d3_geo_projection(d3_geo_orthographic);\r\n  }).raw = d3_geo_orthographic;\r\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\r\n    return 1 / (1 + cosλcosφ);\r\n  }, function(ρ) {\r\n    return 2 * Math.atan(ρ);\r\n  });\r\n  (d3.geo.stereographic = function() {\r\n    return d3_geo_projection(d3_geo_stereographic);\r\n  }).raw = d3_geo_stereographic;\r\n  function d3_geo_transverseMercator(λ, φ) {\r\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\r\n  }\r\n  d3_geo_transverseMercator.invert = function(x, y) {\r\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\r\n  };\r\n  (d3.geo.transverseMercator = function() {\r\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\r\n    projection.center = function(_) {\r\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\r\n    };\r\n    projection.rotate = function(_) {\r\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \r\n      [ _[0], _[1], _[2] - 90 ]);\r\n    };\r\n    return rotate([ 0, 0, 90 ]);\r\n  }).raw = d3_geo_transverseMercator;\r\n  d3.geom = {};\r\n  function d3_geom_pointX(d) {\r\n    return d[0];\r\n  }\r\n  function d3_geom_pointY(d) {\r\n    return d[1];\r\n  }\r\n  d3.geom.hull = function(vertices) {\r\n    var x = d3_geom_pointX, y = d3_geom_pointY;\r\n    if (arguments.length) return hull(vertices);\r\n    function hull(data) {\r\n      if (data.length < 3) return [];\r\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\r\n      for (i = 0; i < n; i++) {\r\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\r\n      }\r\n      points.sort(d3_geom_hullOrder);\r\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\r\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\r\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\r\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\r\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\r\n      return polygon;\r\n    }\r\n    hull.x = function(_) {\r\n      return arguments.length ? (x = _, hull) : x;\r\n    };\r\n    hull.y = function(_) {\r\n      return arguments.length ? (y = _, hull) : y;\r\n    };\r\n    return hull;\r\n  };\r\n  function d3_geom_hullUpper(points) {\r\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\r\n    for (var i = 2; i < n; i++) {\r\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\r\n      hull[hs++] = i;\r\n    }\r\n    return hull.slice(0, hs);\r\n  }\r\n  function d3_geom_hullOrder(a, b) {\r\n    return a[0] - b[0] || a[1] - b[1];\r\n  }\r\n  d3.geom.polygon = function(coordinates) {\r\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\r\n    return coordinates;\r\n  };\r\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\r\n  d3_geom_polygonPrototype.area = function() {\r\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\r\n    while (++i < n) {\r\n      a = b;\r\n      b = this[i];\r\n      area += a[1] * b[0] - a[0] * b[1];\r\n    }\r\n    return area * .5;\r\n  };\r\n  d3_geom_polygonPrototype.centroid = function(k) {\r\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\r\n    if (!arguments.length) k = -1 / (6 * this.area());\r\n    while (++i < n) {\r\n      a = b;\r\n      b = this[i];\r\n      c = a[0] * b[1] - b[0] * a[1];\r\n      x += (a[0] + b[0]) * c;\r\n      y += (a[1] + b[1]) * c;\r\n    }\r\n    return [ x * k, y * k ];\r\n  };\r\n  d3_geom_polygonPrototype.clip = function(subject) {\r\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\r\n    while (++i < n) {\r\n      input = subject.slice();\r\n      subject.length = 0;\r\n      b = this[i];\r\n      c = input[(m = input.length - closed) - 1];\r\n      j = -1;\r\n      while (++j < m) {\r\n        d = input[j];\r\n        if (d3_geom_polygonInside(d, a, b)) {\r\n          if (!d3_geom_polygonInside(c, a, b)) {\r\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\r\n          }\r\n          subject.push(d);\r\n        } else if (d3_geom_polygonInside(c, a, b)) {\r\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\r\n        }\r\n        c = d;\r\n      }\r\n      if (closed) subject.push(subject[0]);\r\n      a = b;\r\n    }\r\n    return subject;\r\n  };\r\n  function d3_geom_polygonInside(p, a, b) {\r\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\r\n  }\r\n  function d3_geom_polygonIntersect(c, d, a, b) {\r\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\r\n    return [ x1 + ua * x21, y1 + ua * y21 ];\r\n  }\r\n  function d3_geom_polygonClosed(coordinates) {\r\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\r\n    return !(a[0] - b[0] || a[1] - b[1]);\r\n  }\r\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\r\n  function d3_geom_voronoiBeach() {\r\n    d3_geom_voronoiRedBlackNode(this);\r\n    this.edge = this.site = this.circle = null;\r\n  }\r\n  function d3_geom_voronoiCreateBeach(site) {\r\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\r\n    beach.site = site;\r\n    return beach;\r\n  }\r\n  function d3_geom_voronoiDetachBeach(beach) {\r\n    d3_geom_voronoiDetachCircle(beach);\r\n    d3_geom_voronoiBeaches.remove(beach);\r\n    d3_geom_voronoiBeachPool.push(beach);\r\n    d3_geom_voronoiRedBlackNode(beach);\r\n  }\r\n  function d3_geom_voronoiRemoveBeach(beach) {\r\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\r\n      x: x,\r\n      y: y\r\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\r\n    d3_geom_voronoiDetachBeach(beach);\r\n    var lArc = previous;\r\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\r\n      previous = lArc.P;\r\n      disappearing.unshift(lArc);\r\n      d3_geom_voronoiDetachBeach(lArc);\r\n      lArc = previous;\r\n    }\r\n    disappearing.unshift(lArc);\r\n    d3_geom_voronoiDetachCircle(lArc);\r\n    var rArc = next;\r\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\r\n      next = rArc.N;\r\n      disappearing.push(rArc);\r\n      d3_geom_voronoiDetachBeach(rArc);\r\n      rArc = next;\r\n    }\r\n    disappearing.push(rArc);\r\n    d3_geom_voronoiDetachCircle(rArc);\r\n    var nArcs = disappearing.length, iArc;\r\n    for (iArc = 1; iArc < nArcs; ++iArc) {\r\n      rArc = disappearing[iArc];\r\n      lArc = disappearing[iArc - 1];\r\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\r\n    }\r\n    lArc = disappearing[0];\r\n    rArc = disappearing[nArcs - 1];\r\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\r\n    d3_geom_voronoiAttachCircle(lArc);\r\n    d3_geom_voronoiAttachCircle(rArc);\r\n  }\r\n  function d3_geom_voronoiAddBeach(site) {\r\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\r\n    while (node) {\r\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\r\n      if (dxl > ε) node = node.L; else {\r\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\r\n        if (dxr > ε) {\r\n          if (!node.R) {\r\n            lArc = node;\r\n            break;\r\n          }\r\n          node = node.R;\r\n        } else {\r\n          if (dxl > -ε) {\r\n            lArc = node.P;\r\n            rArc = node;\r\n          } else if (dxr > -ε) {\r\n            lArc = node;\r\n            rArc = node.N;\r\n          } else {\r\n            lArc = rArc = node;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    var newArc = d3_geom_voronoiCreateBeach(site);\r\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\r\n    if (!lArc && !rArc) return;\r\n    if (lArc === rArc) {\r\n      d3_geom_voronoiDetachCircle(lArc);\r\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\r\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\r\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\r\n      d3_geom_voronoiAttachCircle(lArc);\r\n      d3_geom_voronoiAttachCircle(rArc);\r\n      return;\r\n    }\r\n    if (!rArc) {\r\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\r\n      return;\r\n    }\r\n    d3_geom_voronoiDetachCircle(lArc);\r\n    d3_geom_voronoiDetachCircle(rArc);\r\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\r\n      x: (cy * hb - by * hc) / d + ax,\r\n      y: (bx * hc - cx * hb) / d + ay\r\n    };\r\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\r\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\r\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\r\n    d3_geom_voronoiAttachCircle(lArc);\r\n    d3_geom_voronoiAttachCircle(rArc);\r\n  }\r\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\r\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\r\n    if (!pby2) return rfocx;\r\n    var lArc = arc.P;\r\n    if (!lArc) return -Infinity;\r\n    site = lArc.site;\r\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\r\n    if (!plby2) return lfocx;\r\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\r\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\r\n    return (rfocx + lfocx) / 2;\r\n  }\r\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\r\n    var rArc = arc.N;\r\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\r\n    var site = arc.site;\r\n    return site.y === directrix ? site.x : Infinity;\r\n  }\r\n  function d3_geom_voronoiCell(site) {\r\n    this.site = site;\r\n    this.edges = [];\r\n  }\r\n  d3_geom_voronoiCell.prototype.prepare = function() {\r\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\r\n    while (iHalfEdge--) {\r\n      edge = halfEdges[iHalfEdge].edge;\r\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\r\n    }\r\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\r\n    return halfEdges.length;\r\n  };\r\n  function d3_geom_voronoiCloseCells(extent) {\r\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\r\n    while (iCell--) {\r\n      cell = cells[iCell];\r\n      if (!cell || !cell.prepare()) continue;\r\n      halfEdges = cell.edges;\r\n      nHalfEdges = halfEdges.length;\r\n      iHalfEdge = 0;\r\n      while (iHalfEdge < nHalfEdges) {\r\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\r\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\r\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\r\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\r\n            x: x0,\r\n            y: abs(x2 - x0) < ε ? y2 : y1\r\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\r\n            x: abs(y2 - y1) < ε ? x2 : x1,\r\n            y: y1\r\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\r\n            x: x1,\r\n            y: abs(x2 - x1) < ε ? y2 : y0\r\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\r\n            x: abs(y2 - y0) < ε ? x2 : x0,\r\n            y: y0\r\n          } : null), cell.site, null));\r\n          ++nHalfEdges;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\r\n    return b.angle - a.angle;\r\n  }\r\n  function d3_geom_voronoiCircle() {\r\n    d3_geom_voronoiRedBlackNode(this);\r\n    this.x = this.y = this.arc = this.site = this.cy = null;\r\n  }\r\n  function d3_geom_voronoiAttachCircle(arc) {\r\n    var lArc = arc.P, rArc = arc.N;\r\n    if (!lArc || !rArc) return;\r\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\r\n    if (lSite === rSite) return;\r\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\r\n    var d = 2 * (ax * cy - ay * cx);\r\n    if (d >= -ε2) return;\r\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\r\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\r\n    circle.arc = arc;\r\n    circle.site = cSite;\r\n    circle.x = x + bx;\r\n    circle.y = cy + Math.sqrt(x * x + y * y);\r\n    circle.cy = cy;\r\n    arc.circle = circle;\r\n    var before = null, node = d3_geom_voronoiCircles._;\r\n    while (node) {\r\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\r\n        if (node.L) node = node.L; else {\r\n          before = node.P;\r\n          break;\r\n        }\r\n      } else {\r\n        if (node.R) node = node.R; else {\r\n          before = node;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    d3_geom_voronoiCircles.insert(before, circle);\r\n    if (!before) d3_geom_voronoiFirstCircle = circle;\r\n  }\r\n  function d3_geom_voronoiDetachCircle(arc) {\r\n    var circle = arc.circle;\r\n    if (circle) {\r\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\r\n      d3_geom_voronoiCircles.remove(circle);\r\n      d3_geom_voronoiCirclePool.push(circle);\r\n      d3_geom_voronoiRedBlackNode(circle);\r\n      arc.circle = null;\r\n    }\r\n  }\r\n  function d3_geom_voronoiClipEdges(extent) {\r\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\r\n    while (i--) {\r\n      e = edges[i];\r\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\r\n        e.a = e.b = null;\r\n        edges.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n  function d3_geom_voronoiConnectEdge(edge, extent) {\r\n    var vb = edge.b;\r\n    if (vb) return true;\r\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\r\n    if (ry === ly) {\r\n      if (fx < x0 || fx >= x1) return;\r\n      if (lx > rx) {\r\n        if (!va) va = {\r\n          x: fx,\r\n          y: y0\r\n        }; else if (va.y >= y1) return;\r\n        vb = {\r\n          x: fx,\r\n          y: y1\r\n        };\r\n      } else {\r\n        if (!va) va = {\r\n          x: fx,\r\n          y: y1\r\n        }; else if (va.y < y0) return;\r\n        vb = {\r\n          x: fx,\r\n          y: y0\r\n        };\r\n      }\r\n    } else {\r\n      fm = (lx - rx) / (ry - ly);\r\n      fb = fy - fm * fx;\r\n      if (fm < -1 || fm > 1) {\r\n        if (lx > rx) {\r\n          if (!va) va = {\r\n            x: (y0 - fb) / fm,\r\n            y: y0\r\n          }; else if (va.y >= y1) return;\r\n          vb = {\r\n            x: (y1 - fb) / fm,\r\n            y: y1\r\n          };\r\n        } else {\r\n          if (!va) va = {\r\n            x: (y1 - fb) / fm,\r\n            y: y1\r\n          }; else if (va.y < y0) return;\r\n          vb = {\r\n            x: (y0 - fb) / fm,\r\n            y: y0\r\n          };\r\n        }\r\n      } else {\r\n        if (ly < ry) {\r\n          if (!va) va = {\r\n            x: x0,\r\n            y: fm * x0 + fb\r\n          }; else if (va.x >= x1) return;\r\n          vb = {\r\n            x: x1,\r\n            y: fm * x1 + fb\r\n          };\r\n        } else {\r\n          if (!va) va = {\r\n            x: x1,\r\n            y: fm * x1 + fb\r\n          }; else if (va.x < x0) return;\r\n          vb = {\r\n            x: x0,\r\n            y: fm * x0 + fb\r\n          };\r\n        }\r\n      }\r\n    }\r\n    edge.a = va;\r\n    edge.b = vb;\r\n    return true;\r\n  }\r\n  function d3_geom_voronoiEdge(lSite, rSite) {\r\n    this.l = lSite;\r\n    this.r = rSite;\r\n    this.a = this.b = null;\r\n  }\r\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\r\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\r\n    d3_geom_voronoiEdges.push(edge);\r\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\r\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\r\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\r\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\r\n    return edge;\r\n  }\r\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\r\n    var edge = new d3_geom_voronoiEdge(lSite, null);\r\n    edge.a = va;\r\n    edge.b = vb;\r\n    d3_geom_voronoiEdges.push(edge);\r\n    return edge;\r\n  }\r\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\r\n    if (!edge.a && !edge.b) {\r\n      edge.a = vertex;\r\n      edge.l = lSite;\r\n      edge.r = rSite;\r\n    } else if (edge.l === rSite) {\r\n      edge.b = vertex;\r\n    } else {\r\n      edge.a = vertex;\r\n    }\r\n  }\r\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\r\n    var va = edge.a, vb = edge.b;\r\n    this.edge = edge;\r\n    this.site = lSite;\r\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\r\n  }\r\n  d3_geom_voronoiHalfEdge.prototype = {\r\n    start: function() {\r\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\r\n    },\r\n    end: function() {\r\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\r\n    }\r\n  };\r\n  function d3_geom_voronoiRedBlackTree() {\r\n    this._ = null;\r\n  }\r\n  function d3_geom_voronoiRedBlackNode(node) {\r\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\r\n  }\r\n  d3_geom_voronoiRedBlackTree.prototype = {\r\n    insert: function(after, node) {\r\n      var parent, grandpa, uncle;\r\n      if (after) {\r\n        node.P = after;\r\n        node.N = after.N;\r\n        if (after.N) after.N.P = node;\r\n        after.N = node;\r\n        if (after.R) {\r\n          after = after.R;\r\n          while (after.L) after = after.L;\r\n          after.L = node;\r\n        } else {\r\n          after.R = node;\r\n        }\r\n        parent = after;\r\n      } else if (this._) {\r\n        after = d3_geom_voronoiRedBlackFirst(this._);\r\n        node.P = null;\r\n        node.N = after;\r\n        after.P = after.L = node;\r\n        parent = after;\r\n      } else {\r\n        node.P = node.N = null;\r\n        this._ = node;\r\n        parent = null;\r\n      }\r\n      node.L = node.R = null;\r\n      node.U = parent;\r\n      node.C = true;\r\n      after = node;\r\n      while (parent && parent.C) {\r\n        grandpa = parent.U;\r\n        if (parent === grandpa.L) {\r\n          uncle = grandpa.R;\r\n          if (uncle && uncle.C) {\r\n            parent.C = uncle.C = false;\r\n            grandpa.C = true;\r\n            after = grandpa;\r\n          } else {\r\n            if (after === parent.R) {\r\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\r\n              after = parent;\r\n              parent = after.U;\r\n            }\r\n            parent.C = false;\r\n            grandpa.C = true;\r\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\r\n          }\r\n        } else {\r\n          uncle = grandpa.L;\r\n          if (uncle && uncle.C) {\r\n            parent.C = uncle.C = false;\r\n            grandpa.C = true;\r\n            after = grandpa;\r\n          } else {\r\n            if (after === parent.L) {\r\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\r\n              after = parent;\r\n              parent = after.U;\r\n            }\r\n            parent.C = false;\r\n            grandpa.C = true;\r\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\r\n          }\r\n        }\r\n        parent = after.U;\r\n      }\r\n      this._.C = false;\r\n    },\r\n    remove: function(node) {\r\n      if (node.N) node.N.P = node.P;\r\n      if (node.P) node.P.N = node.N;\r\n      node.N = node.P = null;\r\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\r\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\r\n      if (parent) {\r\n        if (parent.L === node) parent.L = next; else parent.R = next;\r\n      } else {\r\n        this._ = next;\r\n      }\r\n      if (left && right) {\r\n        red = next.C;\r\n        next.C = node.C;\r\n        next.L = left;\r\n        left.U = next;\r\n        if (next !== right) {\r\n          parent = next.U;\r\n          next.U = node.U;\r\n          node = next.R;\r\n          parent.L = node;\r\n          next.R = right;\r\n          right.U = next;\r\n        } else {\r\n          next.U = parent;\r\n          parent = next;\r\n          node = next.R;\r\n        }\r\n      } else {\r\n        red = node.C;\r\n        node = next;\r\n      }\r\n      if (node) node.U = parent;\r\n      if (red) return;\r\n      if (node && node.C) {\r\n        node.C = false;\r\n        return;\r\n      }\r\n      do {\r\n        if (node === this._) break;\r\n        if (node === parent.L) {\r\n          sibling = parent.R;\r\n          if (sibling.C) {\r\n            sibling.C = false;\r\n            parent.C = true;\r\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\r\n            sibling = parent.R;\r\n          }\r\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\r\n            if (!sibling.R || !sibling.R.C) {\r\n              sibling.L.C = false;\r\n              sibling.C = true;\r\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\r\n              sibling = parent.R;\r\n            }\r\n            sibling.C = parent.C;\r\n            parent.C = sibling.R.C = false;\r\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\r\n            node = this._;\r\n            break;\r\n          }\r\n        } else {\r\n          sibling = parent.L;\r\n          if (sibling.C) {\r\n            sibling.C = false;\r\n            parent.C = true;\r\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\r\n            sibling = parent.L;\r\n          }\r\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\r\n            if (!sibling.L || !sibling.L.C) {\r\n              sibling.R.C = false;\r\n              sibling.C = true;\r\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\r\n              sibling = parent.L;\r\n            }\r\n            sibling.C = parent.C;\r\n            parent.C = sibling.L.C = false;\r\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\r\n            node = this._;\r\n            break;\r\n          }\r\n        }\r\n        sibling.C = true;\r\n        node = parent;\r\n        parent = parent.U;\r\n      } while (!node.C);\r\n      if (node) node.C = false;\r\n    }\r\n  };\r\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\r\n    var p = node, q = node.R, parent = p.U;\r\n    if (parent) {\r\n      if (parent.L === p) parent.L = q; else parent.R = q;\r\n    } else {\r\n      tree._ = q;\r\n    }\r\n    q.U = parent;\r\n    p.U = q;\r\n    p.R = q.L;\r\n    if (p.R) p.R.U = p;\r\n    q.L = p;\r\n  }\r\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\r\n    var p = node, q = node.L, parent = p.U;\r\n    if (parent) {\r\n      if (parent.L === p) parent.L = q; else parent.R = q;\r\n    } else {\r\n      tree._ = q;\r\n    }\r\n    q.U = parent;\r\n    p.U = q;\r\n    p.L = q.R;\r\n    if (p.L) p.L.U = p;\r\n    q.R = p;\r\n  }\r\n  function d3_geom_voronoiRedBlackFirst(node) {\r\n    while (node.L) node = node.L;\r\n    return node;\r\n  }\r\n  function d3_geom_voronoi(sites, bbox) {\r\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\r\n    d3_geom_voronoiEdges = [];\r\n    d3_geom_voronoiCells = new Array(sites.length);\r\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\r\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\r\n    while (true) {\r\n      circle = d3_geom_voronoiFirstCircle;\r\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\r\n        if (site.x !== x0 || site.y !== y0) {\r\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\r\n          d3_geom_voronoiAddBeach(site);\r\n          x0 = site.x, y0 = site.y;\r\n        }\r\n        site = sites.pop();\r\n      } else if (circle) {\r\n        d3_geom_voronoiRemoveBeach(circle.arc);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\r\n    var diagram = {\r\n      cells: d3_geom_voronoiCells,\r\n      edges: d3_geom_voronoiEdges\r\n    };\r\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\r\n    return diagram;\r\n  }\r\n  function d3_geom_voronoiVertexOrder(a, b) {\r\n    return b.y - a.y || b.x - a.x;\r\n  }\r\n  d3.geom.voronoi = function(points) {\r\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\r\n    if (points) return voronoi(points);\r\n    function voronoi(data) {\r\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\r\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\r\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\r\n          var s = e.start();\r\n          return [ s.x, s.y ];\r\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\r\n        polygon.point = data[i];\r\n      });\r\n      return polygons;\r\n    }\r\n    function sites(data) {\r\n      return data.map(function(d, i) {\r\n        return {\r\n          x: Math.round(fx(d, i) / ε) * ε,\r\n          y: Math.round(fy(d, i) / ε) * ε,\r\n          i: i\r\n        };\r\n      });\r\n    }\r\n    voronoi.links = function(data) {\r\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\r\n        return edge.l && edge.r;\r\n      }).map(function(edge) {\r\n        return {\r\n          source: data[edge.l.i],\r\n          target: data[edge.r.i]\r\n        };\r\n      });\r\n    };\r\n    voronoi.triangles = function(data) {\r\n      var triangles = [];\r\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\r\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\r\n        while (++j < m) {\r\n          e0 = e1;\r\n          s0 = s1;\r\n          e1 = edges[j].edge;\r\n          s1 = e1.l === site ? e1.r : e1.l;\r\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\r\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\r\n          }\r\n        }\r\n      });\r\n      return triangles;\r\n    };\r\n    voronoi.x = function(_) {\r\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\r\n    };\r\n    voronoi.y = function(_) {\r\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\r\n    };\r\n    voronoi.clipExtent = function(_) {\r\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\r\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\r\n      return voronoi;\r\n    };\r\n    voronoi.size = function(_) {\r\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\r\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\r\n    };\r\n    return voronoi;\r\n  };\r\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\r\n  function d3_geom_voronoiTriangleArea(a, b, c) {\r\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\r\n  }\r\n  d3.geom.delaunay = function(vertices) {\r\n    return d3.geom.voronoi().triangles(vertices);\r\n  };\r\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\r\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\r\n    if (compat = arguments.length) {\r\n      x = d3_geom_quadtreeCompatX;\r\n      y = d3_geom_quadtreeCompatY;\r\n      if (compat === 3) {\r\n        y2 = y1;\r\n        x2 = x1;\r\n        y1 = x1 = 0;\r\n      }\r\n      return quadtree(points);\r\n    }\r\n    function quadtree(data) {\r\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\r\n      if (x1 != null) {\r\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\r\n      } else {\r\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\r\n        xs = [], ys = [];\r\n        n = data.length;\r\n        if (compat) for (i = 0; i < n; ++i) {\r\n          d = data[i];\r\n          if (d.x < x1_) x1_ = d.x;\r\n          if (d.y < y1_) y1_ = d.y;\r\n          if (d.x > x2_) x2_ = d.x;\r\n          if (d.y > y2_) y2_ = d.y;\r\n          xs.push(d.x);\r\n          ys.push(d.y);\r\n        } else for (i = 0; i < n; ++i) {\r\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\r\n          if (x_ < x1_) x1_ = x_;\r\n          if (y_ < y1_) y1_ = y_;\r\n          if (x_ > x2_) x2_ = x_;\r\n          if (y_ > y2_) y2_ = y_;\r\n          xs.push(x_);\r\n          ys.push(y_);\r\n        }\r\n      }\r\n      var dx = x2_ - x1_, dy = y2_ - y1_;\r\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\r\n      function insert(n, d, x, y, x1, y1, x2, y2) {\r\n        if (isNaN(x) || isNaN(y)) return;\r\n        if (n.leaf) {\r\n          var nx = n.x, ny = n.y;\r\n          if (nx != null) {\r\n            if (abs(nx - x) + abs(ny - y) < .01) {\r\n              insertChild(n, d, x, y, x1, y1, x2, y2);\r\n            } else {\r\n              var nPoint = n.point;\r\n              n.x = n.y = n.point = null;\r\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\r\n              insertChild(n, d, x, y, x1, y1, x2, y2);\r\n            }\r\n          } else {\r\n            n.x = x, n.y = y, n.point = d;\r\n          }\r\n        } else {\r\n          insertChild(n, d, x, y, x1, y1, x2, y2);\r\n        }\r\n      }\r\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\r\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\r\n        n.leaf = false;\r\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\r\n        if (right) x1 = xm; else x2 = xm;\r\n        if (below) y1 = ym; else y2 = ym;\r\n        insert(n, d, x, y, x1, y1, x2, y2);\r\n      }\r\n      var root = d3_geom_quadtreeNode();\r\n      root.add = function(d) {\r\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\r\n      };\r\n      root.visit = function(f) {\r\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\r\n      };\r\n      root.find = function(point) {\r\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\r\n      };\r\n      i = -1;\r\n      if (x1 == null) {\r\n        while (++i < n) {\r\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\r\n        }\r\n        --i;\r\n      } else data.forEach(root.add);\r\n      xs = ys = data = d = null;\r\n      return root;\r\n    }\r\n    quadtree.x = function(_) {\r\n      return arguments.length ? (x = _, quadtree) : x;\r\n    };\r\n    quadtree.y = function(_) {\r\n      return arguments.length ? (y = _, quadtree) : y;\r\n    };\r\n    quadtree.extent = function(_) {\r\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\r\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \r\n      y2 = +_[1][1];\r\n      return quadtree;\r\n    };\r\n    quadtree.size = function(_) {\r\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\r\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\r\n      return quadtree;\r\n    };\r\n    return quadtree;\r\n  };\r\n  function d3_geom_quadtreeCompatX(d) {\r\n    return d.x;\r\n  }\r\n  function d3_geom_quadtreeCompatY(d) {\r\n    return d.y;\r\n  }\r\n  function d3_geom_quadtreeNode() {\r\n    return {\r\n      leaf: true,\r\n      nodes: [],\r\n      point: null,\r\n      x: null,\r\n      y: null\r\n    };\r\n  }\r\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\r\n    if (!f(node, x1, y1, x2, y2)) {\r\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\r\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\r\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\r\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\r\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\r\n    }\r\n  }\r\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\r\n    var minDistance2 = Infinity, closestPoint;\r\n    (function find(node, x1, y1, x2, y2) {\r\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\r\n      if (point = node.point) {\r\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\r\n        if (distance2 < minDistance2) {\r\n          var distance = Math.sqrt(minDistance2 = distance2);\r\n          x0 = x - distance, y0 = y - distance;\r\n          x3 = x + distance, y3 = y + distance;\r\n          closestPoint = point;\r\n        }\r\n      }\r\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\r\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\r\n        if (node = children[i & 3]) switch (i & 3) {\r\n         case 0:\r\n          find(node, x1, y1, xm, ym);\r\n          break;\r\n\r\n         case 1:\r\n          find(node, xm, y1, x2, ym);\r\n          break;\r\n\r\n         case 2:\r\n          find(node, x1, ym, xm, y2);\r\n          break;\r\n\r\n         case 3:\r\n          find(node, xm, ym, x2, y2);\r\n          break;\r\n        }\r\n      }\r\n    })(root, x0, y0, x3, y3);\r\n    return closestPoint;\r\n  }\r\n  d3.interpolateRgb = d3_interpolateRgb;\r\n  function d3_interpolateRgb(a, b) {\r\n    a = d3.rgb(a);\r\n    b = d3.rgb(b);\r\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\r\n    return function(t) {\r\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\r\n    };\r\n  }\r\n  d3.interpolateObject = d3_interpolateObject;\r\n  function d3_interpolateObject(a, b) {\r\n    var i = {}, c = {}, k;\r\n    for (k in a) {\r\n      if (k in b) {\r\n        i[k] = d3_interpolate(a[k], b[k]);\r\n      } else {\r\n        c[k] = a[k];\r\n      }\r\n    }\r\n    for (k in b) {\r\n      if (!(k in a)) {\r\n        c[k] = b[k];\r\n      }\r\n    }\r\n    return function(t) {\r\n      for (k in i) c[k] = i[k](t);\r\n      return c;\r\n    };\r\n  }\r\n  d3.interpolateNumber = d3_interpolateNumber;\r\n  function d3_interpolateNumber(a, b) {\r\n    a = +a, b = +b;\r\n    return function(t) {\r\n      return a * (1 - t) + b * t;\r\n    };\r\n  }\r\n  d3.interpolateString = d3_interpolateString;\r\n  function d3_interpolateString(a, b) {\r\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\r\n    a = a + \"\", b = b + \"\";\r\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\r\n      if ((bs = bm.index) > bi) {\r\n        bs = b.slice(bi, bs);\r\n        if (s[i]) s[i] += bs; else s[++i] = bs;\r\n      }\r\n      if ((am = am[0]) === (bm = bm[0])) {\r\n        if (s[i]) s[i] += bm; else s[++i] = bm;\r\n      } else {\r\n        s[++i] = null;\r\n        q.push({\r\n          i: i,\r\n          x: d3_interpolateNumber(am, bm)\r\n        });\r\n      }\r\n      bi = d3_interpolate_numberB.lastIndex;\r\n    }\r\n    if (bi < b.length) {\r\n      bs = b.slice(bi);\r\n      if (s[i]) s[i] += bs; else s[++i] = bs;\r\n    }\r\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\r\n      return b(t) + \"\";\r\n    }) : function() {\r\n      return b;\r\n    } : (b = q.length, function(t) {\r\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\r\n      return s.join(\"\");\r\n    });\r\n  }\r\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\r\n  d3.interpolate = d3_interpolate;\r\n  function d3_interpolate(a, b) {\r\n    var i = d3.interpolators.length, f;\r\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\r\n    return f;\r\n  }\r\n  d3.interpolators = [ function(a, b) {\r\n    var t = typeof b;\r\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\r\n  } ];\r\n  d3.interpolateArray = d3_interpolateArray;\r\n  function d3_interpolateArray(a, b) {\r\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\r\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\r\n    for (;i < na; ++i) c[i] = a[i];\r\n    for (;i < nb; ++i) c[i] = b[i];\r\n    return function(t) {\r\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\r\n      return c;\r\n    };\r\n  }\r\n  var d3_ease_default = function() {\r\n    return d3_identity;\r\n  };\r\n  var d3_ease = d3.map({\r\n    linear: d3_ease_default,\r\n    poly: d3_ease_poly,\r\n    quad: function() {\r\n      return d3_ease_quad;\r\n    },\r\n    cubic: function() {\r\n      return d3_ease_cubic;\r\n    },\r\n    sin: function() {\r\n      return d3_ease_sin;\r\n    },\r\n    exp: function() {\r\n      return d3_ease_exp;\r\n    },\r\n    circle: function() {\r\n      return d3_ease_circle;\r\n    },\r\n    elastic: d3_ease_elastic,\r\n    back: d3_ease_back,\r\n    bounce: function() {\r\n      return d3_ease_bounce;\r\n    }\r\n  });\r\n  var d3_ease_mode = d3.map({\r\n    \"in\": d3_identity,\r\n    out: d3_ease_reverse,\r\n    \"in-out\": d3_ease_reflect,\r\n    \"out-in\": function(f) {\r\n      return d3_ease_reflect(d3_ease_reverse(f));\r\n    }\r\n  });\r\n  d3.ease = function(name) {\r\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\r\n    t = d3_ease.get(t) || d3_ease_default;\r\n    m = d3_ease_mode.get(m) || d3_identity;\r\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\r\n  };\r\n  function d3_ease_clamp(f) {\r\n    return function(t) {\r\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\r\n    };\r\n  }\r\n  function d3_ease_reverse(f) {\r\n    return function(t) {\r\n      return 1 - f(1 - t);\r\n    };\r\n  }\r\n  function d3_ease_reflect(f) {\r\n    return function(t) {\r\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\r\n    };\r\n  }\r\n  function d3_ease_quad(t) {\r\n    return t * t;\r\n  }\r\n  function d3_ease_cubic(t) {\r\n    return t * t * t;\r\n  }\r\n  function d3_ease_cubicInOut(t) {\r\n    if (t <= 0) return 0;\r\n    if (t >= 1) return 1;\r\n    var t2 = t * t, t3 = t2 * t;\r\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\r\n  }\r\n  function d3_ease_poly(e) {\r\n    return function(t) {\r\n      return Math.pow(t, e);\r\n    };\r\n  }\r\n  function d3_ease_sin(t) {\r\n    return 1 - Math.cos(t * halfπ);\r\n  }\r\n  function d3_ease_exp(t) {\r\n    return Math.pow(2, 10 * (t - 1));\r\n  }\r\n  function d3_ease_circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n  }\r\n  function d3_ease_elastic(a, p) {\r\n    var s;\r\n    if (arguments.length < 2) p = .45;\r\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\r\n    return function(t) {\r\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\r\n    };\r\n  }\r\n  function d3_ease_back(s) {\r\n    if (!s) s = 1.70158;\r\n    return function(t) {\r\n      return t * t * ((s + 1) * t - s);\r\n    };\r\n  }\r\n  function d3_ease_bounce(t) {\r\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\r\n  }\r\n  d3.interpolateHcl = d3_interpolateHcl;\r\n  function d3_interpolateHcl(a, b) {\r\n    a = d3.hcl(a);\r\n    b = d3.hcl(b);\r\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\r\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\r\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\r\n    return function(t) {\r\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\r\n    };\r\n  }\r\n  d3.interpolateHsl = d3_interpolateHsl;\r\n  function d3_interpolateHsl(a, b) {\r\n    a = d3.hsl(a);\r\n    b = d3.hsl(b);\r\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\r\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\r\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\r\n    return function(t) {\r\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\r\n    };\r\n  }\r\n  d3.interpolateLab = d3_interpolateLab;\r\n  function d3_interpolateLab(a, b) {\r\n    a = d3.lab(a);\r\n    b = d3.lab(b);\r\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\r\n    return function(t) {\r\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\r\n    };\r\n  }\r\n  d3.interpolateRound = d3_interpolateRound;\r\n  function d3_interpolateRound(a, b) {\r\n    b -= a;\r\n    return function(t) {\r\n      return Math.round(a + b * t);\r\n    };\r\n  }\r\n  d3.transform = function(string) {\r\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\r\n    return (d3.transform = function(string) {\r\n      if (string != null) {\r\n        g.setAttribute(\"transform\", string);\r\n        var t = g.transform.baseVal.consolidate();\r\n      }\r\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\r\n    })(string);\r\n  };\r\n  function d3_transform(m) {\r\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\r\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\r\n      r0[0] *= -1;\r\n      r0[1] *= -1;\r\n      kx *= -1;\r\n      kz *= -1;\r\n    }\r\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\r\n    this.translate = [ m.e, m.f ];\r\n    this.scale = [ kx, ky ];\r\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\r\n  }\r\n  d3_transform.prototype.toString = function() {\r\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\r\n  };\r\n  function d3_transformDot(a, b) {\r\n    return a[0] * b[0] + a[1] * b[1];\r\n  }\r\n  function d3_transformNormalize(a) {\r\n    var k = Math.sqrt(d3_transformDot(a, a));\r\n    if (k) {\r\n      a[0] /= k;\r\n      a[1] /= k;\r\n    }\r\n    return k;\r\n  }\r\n  function d3_transformCombine(a, b, k) {\r\n    a[0] += k * b[0];\r\n    a[1] += k * b[1];\r\n    return a;\r\n  }\r\n  var d3_transformIdentity = {\r\n    a: 1,\r\n    b: 0,\r\n    c: 0,\r\n    d: 1,\r\n    e: 0,\r\n    f: 0\r\n  };\r\n  d3.interpolateTransform = d3_interpolateTransform;\r\n  function d3_interpolateTransformPop(s) {\r\n    return s.length ? s.pop() + \",\" : \"\";\r\n  }\r\n  function d3_interpolateTranslate(ta, tb, s, q) {\r\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\r\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\r\n      q.push({\r\n        i: i - 4,\r\n        x: d3_interpolateNumber(ta[0], tb[0])\r\n      }, {\r\n        i: i - 2,\r\n        x: d3_interpolateNumber(ta[1], tb[1])\r\n      });\r\n    } else if (tb[0] || tb[1]) {\r\n      s.push(\"translate(\" + tb + \")\");\r\n    }\r\n  }\r\n  function d3_interpolateRotate(ra, rb, s, q) {\r\n    if (ra !== rb) {\r\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\r\n      q.push({\r\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\r\n        x: d3_interpolateNumber(ra, rb)\r\n      });\r\n    } else if (rb) {\r\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\r\n    }\r\n  }\r\n  function d3_interpolateSkew(wa, wb, s, q) {\r\n    if (wa !== wb) {\r\n      q.push({\r\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\r\n        x: d3_interpolateNumber(wa, wb)\r\n      });\r\n    } else if (wb) {\r\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\r\n    }\r\n  }\r\n  function d3_interpolateScale(ka, kb, s, q) {\r\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\r\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\r\n      q.push({\r\n        i: i - 4,\r\n        x: d3_interpolateNumber(ka[0], kb[0])\r\n      }, {\r\n        i: i - 2,\r\n        x: d3_interpolateNumber(ka[1], kb[1])\r\n      });\r\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\r\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\r\n    }\r\n  }\r\n  function d3_interpolateTransform(a, b) {\r\n    var s = [], q = [];\r\n    a = d3.transform(a), b = d3.transform(b);\r\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\r\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\r\n    d3_interpolateSkew(a.skew, b.skew, s, q);\r\n    d3_interpolateScale(a.scale, b.scale, s, q);\r\n    a = b = null;\r\n    return function(t) {\r\n      var i = -1, n = q.length, o;\r\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\r\n      return s.join(\"\");\r\n    };\r\n  }\r\n  function d3_uninterpolateNumber(a, b) {\r\n    b = (b -= a = +a) || 1 / b;\r\n    return function(x) {\r\n      return (x - a) / b;\r\n    };\r\n  }\r\n  function d3_uninterpolateClamp(a, b) {\r\n    b = (b -= a = +a) || 1 / b;\r\n    return function(x) {\r\n      return Math.max(0, Math.min(1, (x - a) / b));\r\n    };\r\n  }\r\n  d3.layout = {};\r\n  d3.layout.bundle = function() {\r\n    return function(links) {\r\n      var paths = [], i = -1, n = links.length;\r\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\r\n      return paths;\r\n    };\r\n  };\r\n  function d3_layout_bundlePath(link) {\r\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\r\n    while (start !== lca) {\r\n      start = start.parent;\r\n      points.push(start);\r\n    }\r\n    var k = points.length;\r\n    while (end !== lca) {\r\n      points.splice(k, 0, end);\r\n      end = end.parent;\r\n    }\r\n    return points;\r\n  }\r\n  function d3_layout_bundleAncestors(node) {\r\n    var ancestors = [], parent = node.parent;\r\n    while (parent != null) {\r\n      ancestors.push(node);\r\n      node = parent;\r\n      parent = parent.parent;\r\n    }\r\n    ancestors.push(node);\r\n    return ancestors;\r\n  }\r\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\r\n    if (a === b) return a;\r\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\r\n    while (aNode === bNode) {\r\n      sharedNode = aNode;\r\n      aNode = aNodes.pop();\r\n      bNode = bNodes.pop();\r\n    }\r\n    return sharedNode;\r\n  }\r\n  d3.layout.chord = function() {\r\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\r\n    function relayout() {\r\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\r\n      chords = [];\r\n      groups = [];\r\n      k = 0, i = -1;\r\n      while (++i < n) {\r\n        x = 0, j = -1;\r\n        while (++j < n) {\r\n          x += matrix[i][j];\r\n        }\r\n        groupSums.push(x);\r\n        subgroupIndex.push(d3.range(n));\r\n        k += x;\r\n      }\r\n      if (sortGroups) {\r\n        groupIndex.sort(function(a, b) {\r\n          return sortGroups(groupSums[a], groupSums[b]);\r\n        });\r\n      }\r\n      if (sortSubgroups) {\r\n        subgroupIndex.forEach(function(d, i) {\r\n          d.sort(function(a, b) {\r\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\r\n          });\r\n        });\r\n      }\r\n      k = (τ - padding * n) / k;\r\n      x = 0, i = -1;\r\n      while (++i < n) {\r\n        x0 = x, j = -1;\r\n        while (++j < n) {\r\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\r\n          subgroups[di + \"-\" + dj] = {\r\n            index: di,\r\n            subindex: dj,\r\n            startAngle: a0,\r\n            endAngle: a1,\r\n            value: v\r\n          };\r\n        }\r\n        groups[di] = {\r\n          index: di,\r\n          startAngle: x0,\r\n          endAngle: x,\r\n          value: groupSums[di]\r\n        };\r\n        x += padding;\r\n      }\r\n      i = -1;\r\n      while (++i < n) {\r\n        j = i - 1;\r\n        while (++j < n) {\r\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\r\n          if (source.value || target.value) {\r\n            chords.push(source.value < target.value ? {\r\n              source: target,\r\n              target: source\r\n            } : {\r\n              source: source,\r\n              target: target\r\n            });\r\n          }\r\n        }\r\n      }\r\n      if (sortChords) resort();\r\n    }\r\n    function resort() {\r\n      chords.sort(function(a, b) {\r\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\r\n      });\r\n    }\r\n    chord.matrix = function(x) {\r\n      if (!arguments.length) return matrix;\r\n      n = (matrix = x) && matrix.length;\r\n      chords = groups = null;\r\n      return chord;\r\n    };\r\n    chord.padding = function(x) {\r\n      if (!arguments.length) return padding;\r\n      padding = x;\r\n      chords = groups = null;\r\n      return chord;\r\n    };\r\n    chord.sortGroups = function(x) {\r\n      if (!arguments.length) return sortGroups;\r\n      sortGroups = x;\r\n      chords = groups = null;\r\n      return chord;\r\n    };\r\n    chord.sortSubgroups = function(x) {\r\n      if (!arguments.length) return sortSubgroups;\r\n      sortSubgroups = x;\r\n      chords = null;\r\n      return chord;\r\n    };\r\n    chord.sortChords = function(x) {\r\n      if (!arguments.length) return sortChords;\r\n      sortChords = x;\r\n      if (chords) resort();\r\n      return chord;\r\n    };\r\n    chord.chords = function() {\r\n      if (!chords) relayout();\r\n      return chords;\r\n    };\r\n    chord.groups = function() {\r\n      if (!groups) relayout();\r\n      return groups;\r\n    };\r\n    return chord;\r\n  };\r\n  d3.layout.force = function() {\r\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\r\n    function repulse(node) {\r\n      return function(quad, x1, _, x2) {\r\n        if (quad.point !== node) {\r\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\r\n          if (dw * dw / theta2 < dn) {\r\n            if (dn < chargeDistance2) {\r\n              var k = quad.charge / dn;\r\n              node.px -= dx * k;\r\n              node.py -= dy * k;\r\n            }\r\n            return true;\r\n          }\r\n          if (quad.point && dn && dn < chargeDistance2) {\r\n            var k = quad.pointCharge / dn;\r\n            node.px -= dx * k;\r\n            node.py -= dy * k;\r\n          }\r\n        }\r\n        return !quad.charge;\r\n      };\r\n    }\r\n    force.tick = function() {\r\n      if ((alpha *= .99) < .005) {\r\n        timer = null;\r\n        event.end({\r\n          type: \"end\",\r\n          alpha: alpha = 0\r\n        });\r\n        return true;\r\n      }\r\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\r\n      for (i = 0; i < m; ++i) {\r\n        o = links[i];\r\n        s = o.source;\r\n        t = o.target;\r\n        x = t.x - s.x;\r\n        y = t.y - s.y;\r\n        if (l = x * x + y * y) {\r\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\r\n          x *= l;\r\n          y *= l;\r\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\r\n          t.y -= y * k;\r\n          s.x += x * (k = 1 - k);\r\n          s.y += y * k;\r\n        }\r\n      }\r\n      if (k = alpha * gravity) {\r\n        x = size[0] / 2;\r\n        y = size[1] / 2;\r\n        i = -1;\r\n        if (k) while (++i < n) {\r\n          o = nodes[i];\r\n          o.x += (x - o.x) * k;\r\n          o.y += (y - o.y) * k;\r\n        }\r\n      }\r\n      if (charge) {\r\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\r\n        i = -1;\r\n        while (++i < n) {\r\n          if (!(o = nodes[i]).fixed) {\r\n            q.visit(repulse(o));\r\n          }\r\n        }\r\n      }\r\n      i = -1;\r\n      while (++i < n) {\r\n        o = nodes[i];\r\n        if (o.fixed) {\r\n          o.x = o.px;\r\n          o.y = o.py;\r\n        } else {\r\n          o.x -= (o.px - (o.px = o.x)) * friction;\r\n          o.y -= (o.py - (o.py = o.y)) * friction;\r\n        }\r\n      }\r\n      event.tick({\r\n        type: \"tick\",\r\n        alpha: alpha\r\n      });\r\n    };\r\n    force.nodes = function(x) {\r\n      if (!arguments.length) return nodes;\r\n      nodes = x;\r\n      return force;\r\n    };\r\n    force.links = function(x) {\r\n      if (!arguments.length) return links;\r\n      links = x;\r\n      return force;\r\n    };\r\n    force.size = function(x) {\r\n      if (!arguments.length) return size;\r\n      size = x;\r\n      return force;\r\n    };\r\n    force.linkDistance = function(x) {\r\n      if (!arguments.length) return linkDistance;\r\n      linkDistance = typeof x === \"function\" ? x : +x;\r\n      return force;\r\n    };\r\n    force.distance = force.linkDistance;\r\n    force.linkStrength = function(x) {\r\n      if (!arguments.length) return linkStrength;\r\n      linkStrength = typeof x === \"function\" ? x : +x;\r\n      return force;\r\n    };\r\n    force.friction = function(x) {\r\n      if (!arguments.length) return friction;\r\n      friction = +x;\r\n      return force;\r\n    };\r\n    force.charge = function(x) {\r\n      if (!arguments.length) return charge;\r\n      charge = typeof x === \"function\" ? x : +x;\r\n      return force;\r\n    };\r\n    force.chargeDistance = function(x) {\r\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\r\n      chargeDistance2 = x * x;\r\n      return force;\r\n    };\r\n    force.gravity = function(x) {\r\n      if (!arguments.length) return gravity;\r\n      gravity = +x;\r\n      return force;\r\n    };\r\n    force.theta = function(x) {\r\n      if (!arguments.length) return Math.sqrt(theta2);\r\n      theta2 = x * x;\r\n      return force;\r\n    };\r\n    force.alpha = function(x) {\r\n      if (!arguments.length) return alpha;\r\n      x = +x;\r\n      if (alpha) {\r\n        if (x > 0) {\r\n          alpha = x;\r\n        } else {\r\n          timer.c = null, timer.t = NaN, timer = null;\r\n          event.end({\r\n            type: \"end\",\r\n            alpha: alpha = 0\r\n          });\r\n        }\r\n      } else if (x > 0) {\r\n        event.start({\r\n          type: \"start\",\r\n          alpha: alpha = x\r\n        });\r\n        timer = d3_timer(force.tick);\r\n      }\r\n      return force;\r\n    };\r\n    force.start = function() {\r\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\r\n      for (i = 0; i < n; ++i) {\r\n        (o = nodes[i]).index = i;\r\n        o.weight = 0;\r\n      }\r\n      for (i = 0; i < m; ++i) {\r\n        o = links[i];\r\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\r\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\r\n        ++o.source.weight;\r\n        ++o.target.weight;\r\n      }\r\n      for (i = 0; i < n; ++i) {\r\n        o = nodes[i];\r\n        if (isNaN(o.x)) o.x = position(\"x\", w);\r\n        if (isNaN(o.y)) o.y = position(\"y\", h);\r\n        if (isNaN(o.px)) o.px = o.x;\r\n        if (isNaN(o.py)) o.py = o.y;\r\n      }\r\n      distances = [];\r\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\r\n      strengths = [];\r\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\r\n      charges = [];\r\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\r\n      function position(dimension, size) {\r\n        if (!neighbors) {\r\n          neighbors = new Array(n);\r\n          for (j = 0; j < n; ++j) {\r\n            neighbors[j] = [];\r\n          }\r\n          for (j = 0; j < m; ++j) {\r\n            var o = links[j];\r\n            neighbors[o.source.index].push(o.target);\r\n            neighbors[o.target.index].push(o.source);\r\n          }\r\n        }\r\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\r\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\r\n        return Math.random() * size;\r\n      }\r\n      return force.resume();\r\n    };\r\n    force.resume = function() {\r\n      return force.alpha(.1);\r\n    };\r\n    force.stop = function() {\r\n      return force.alpha(0);\r\n    };\r\n    force.drag = function() {\r\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\r\n      if (!arguments.length) return drag;\r\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\r\n    };\r\n    function dragmove(d) {\r\n      d.px = d3.event.x, d.py = d3.event.y;\r\n      force.resume();\r\n    }\r\n    return d3.rebind(force, event, \"on\");\r\n  };\r\n  function d3_layout_forceDragstart(d) {\r\n    d.fixed |= 2;\r\n  }\r\n  function d3_layout_forceDragend(d) {\r\n    d.fixed &= ~6;\r\n  }\r\n  function d3_layout_forceMouseover(d) {\r\n    d.fixed |= 4;\r\n    d.px = d.x, d.py = d.y;\r\n  }\r\n  function d3_layout_forceMouseout(d) {\r\n    d.fixed &= ~4;\r\n  }\r\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\r\n    var cx = 0, cy = 0;\r\n    quad.charge = 0;\r\n    if (!quad.leaf) {\r\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\r\n      while (++i < n) {\r\n        c = nodes[i];\r\n        if (c == null) continue;\r\n        d3_layout_forceAccumulate(c, alpha, charges);\r\n        quad.charge += c.charge;\r\n        cx += c.charge * c.cx;\r\n        cy += c.charge * c.cy;\r\n      }\r\n    }\r\n    if (quad.point) {\r\n      if (!quad.leaf) {\r\n        quad.point.x += Math.random() - .5;\r\n        quad.point.y += Math.random() - .5;\r\n      }\r\n      var k = alpha * charges[quad.point.index];\r\n      quad.charge += quad.pointCharge = k;\r\n      cx += k * quad.point.x;\r\n      cy += k * quad.point.y;\r\n    }\r\n    quad.cx = cx / quad.charge;\r\n    quad.cy = cy / quad.charge;\r\n  }\r\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\r\n  d3.layout.hierarchy = function() {\r\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\r\n    function hierarchy(root) {\r\n      var stack = [ root ], nodes = [], node;\r\n      root.depth = 0;\r\n      while ((node = stack.pop()) != null) {\r\n        nodes.push(node);\r\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\r\n          var n, childs, child;\r\n          while (--n >= 0) {\r\n            stack.push(child = childs[n]);\r\n            child.parent = node;\r\n            child.depth = node.depth + 1;\r\n          }\r\n          if (value) node.value = 0;\r\n          node.children = childs;\r\n        } else {\r\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\r\n          delete node.children;\r\n        }\r\n      }\r\n      d3_layout_hierarchyVisitAfter(root, function(node) {\r\n        var childs, parent;\r\n        if (sort && (childs = node.children)) childs.sort(sort);\r\n        if (value && (parent = node.parent)) parent.value += node.value;\r\n      });\r\n      return nodes;\r\n    }\r\n    hierarchy.sort = function(x) {\r\n      if (!arguments.length) return sort;\r\n      sort = x;\r\n      return hierarchy;\r\n    };\r\n    hierarchy.children = function(x) {\r\n      if (!arguments.length) return children;\r\n      children = x;\r\n      return hierarchy;\r\n    };\r\n    hierarchy.value = function(x) {\r\n      if (!arguments.length) return value;\r\n      value = x;\r\n      return hierarchy;\r\n    };\r\n    hierarchy.revalue = function(root) {\r\n      if (value) {\r\n        d3_layout_hierarchyVisitBefore(root, function(node) {\r\n          if (node.children) node.value = 0;\r\n        });\r\n        d3_layout_hierarchyVisitAfter(root, function(node) {\r\n          var parent;\r\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\r\n          if (parent = node.parent) parent.value += node.value;\r\n        });\r\n      }\r\n      return root;\r\n    };\r\n    return hierarchy;\r\n  };\r\n  function d3_layout_hierarchyRebind(object, hierarchy) {\r\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\r\n    object.nodes = object;\r\n    object.links = d3_layout_hierarchyLinks;\r\n    return object;\r\n  }\r\n  function d3_layout_hierarchyVisitBefore(node, callback) {\r\n    var nodes = [ node ];\r\n    while ((node = nodes.pop()) != null) {\r\n      callback(node);\r\n      if ((children = node.children) && (n = children.length)) {\r\n        var n, children;\r\n        while (--n >= 0) nodes.push(children[n]);\r\n      }\r\n    }\r\n  }\r\n  function d3_layout_hierarchyVisitAfter(node, callback) {\r\n    var nodes = [ node ], nodes2 = [];\r\n    while ((node = nodes.pop()) != null) {\r\n      nodes2.push(node);\r\n      if ((children = node.children) && (n = children.length)) {\r\n        var i = -1, n, children;\r\n        while (++i < n) nodes.push(children[i]);\r\n      }\r\n    }\r\n    while ((node = nodes2.pop()) != null) {\r\n      callback(node);\r\n    }\r\n  }\r\n  function d3_layout_hierarchyChildren(d) {\r\n    return d.children;\r\n  }\r\n  function d3_layout_hierarchyValue(d) {\r\n    return d.value;\r\n  }\r\n  function d3_layout_hierarchySort(a, b) {\r\n    return b.value - a.value;\r\n  }\r\n  function d3_layout_hierarchyLinks(nodes) {\r\n    return d3.merge(nodes.map(function(parent) {\r\n      return (parent.children || []).map(function(child) {\r\n        return {\r\n          source: parent,\r\n          target: child\r\n        };\r\n      });\r\n    }));\r\n  }\r\n  d3.layout.partition = function() {\r\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\r\n    function position(node, x, dx, dy) {\r\n      var children = node.children;\r\n      node.x = x;\r\n      node.y = node.depth * dy;\r\n      node.dx = dx;\r\n      node.dy = dy;\r\n      if (children && (n = children.length)) {\r\n        var i = -1, n, c, d;\r\n        dx = node.value ? dx / node.value : 0;\r\n        while (++i < n) {\r\n          position(c = children[i], x, d = c.value * dx, dy);\r\n          x += d;\r\n        }\r\n      }\r\n    }\r\n    function depth(node) {\r\n      var children = node.children, d = 0;\r\n      if (children && (n = children.length)) {\r\n        var i = -1, n;\r\n        while (++i < n) d = Math.max(d, depth(children[i]));\r\n      }\r\n      return 1 + d;\r\n    }\r\n    function partition(d, i) {\r\n      var nodes = hierarchy.call(this, d, i);\r\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\r\n      return nodes;\r\n    }\r\n    partition.size = function(x) {\r\n      if (!arguments.length) return size;\r\n      size = x;\r\n      return partition;\r\n    };\r\n    return d3_layout_hierarchyRebind(partition, hierarchy);\r\n  };\r\n  d3.layout.pie = function() {\r\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\r\n    function pie(data) {\r\n      var n = data.length, values = data.map(function(d, i) {\r\n        return +value.call(pie, d, i);\r\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\r\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\r\n        return values[j] - values[i];\r\n      } : function(i, j) {\r\n        return sort(data[i], data[j]);\r\n      });\r\n      index.forEach(function(i) {\r\n        arcs[i] = {\r\n          data: data[i],\r\n          value: v = values[i],\r\n          startAngle: a,\r\n          endAngle: a += v * k + pa,\r\n          padAngle: p\r\n        };\r\n      });\r\n      return arcs;\r\n    }\r\n    pie.value = function(_) {\r\n      if (!arguments.length) return value;\r\n      value = _;\r\n      return pie;\r\n    };\r\n    pie.sort = function(_) {\r\n      if (!arguments.length) return sort;\r\n      sort = _;\r\n      return pie;\r\n    };\r\n    pie.startAngle = function(_) {\r\n      if (!arguments.length) return startAngle;\r\n      startAngle = _;\r\n      return pie;\r\n    };\r\n    pie.endAngle = function(_) {\r\n      if (!arguments.length) return endAngle;\r\n      endAngle = _;\r\n      return pie;\r\n    };\r\n    pie.padAngle = function(_) {\r\n      if (!arguments.length) return padAngle;\r\n      padAngle = _;\r\n      return pie;\r\n    };\r\n    return pie;\r\n  };\r\n  var d3_layout_pieSortByValue = {};\r\n  d3.layout.stack = function() {\r\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\r\n    function stack(data, index) {\r\n      if (!(n = data.length)) return data;\r\n      var series = data.map(function(d, i) {\r\n        return values.call(stack, d, i);\r\n      });\r\n      var points = series.map(function(d) {\r\n        return d.map(function(v, i) {\r\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\r\n        });\r\n      });\r\n      var orders = order.call(stack, points, index);\r\n      series = d3.permute(series, orders);\r\n      points = d3.permute(points, orders);\r\n      var offsets = offset.call(stack, points, index);\r\n      var m = series[0].length, n, i, j, o;\r\n      for (j = 0; j < m; ++j) {\r\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\r\n        for (i = 1; i < n; ++i) {\r\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    stack.values = function(x) {\r\n      if (!arguments.length) return values;\r\n      values = x;\r\n      return stack;\r\n    };\r\n    stack.order = function(x) {\r\n      if (!arguments.length) return order;\r\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\r\n      return stack;\r\n    };\r\n    stack.offset = function(x) {\r\n      if (!arguments.length) return offset;\r\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\r\n      return stack;\r\n    };\r\n    stack.x = function(z) {\r\n      if (!arguments.length) return x;\r\n      x = z;\r\n      return stack;\r\n    };\r\n    stack.y = function(z) {\r\n      if (!arguments.length) return y;\r\n      y = z;\r\n      return stack;\r\n    };\r\n    stack.out = function(z) {\r\n      if (!arguments.length) return out;\r\n      out = z;\r\n      return stack;\r\n    };\r\n    return stack;\r\n  };\r\n  function d3_layout_stackX(d) {\r\n    return d.x;\r\n  }\r\n  function d3_layout_stackY(d) {\r\n    return d.y;\r\n  }\r\n  function d3_layout_stackOut(d, y0, y) {\r\n    d.y0 = y0;\r\n    d.y = y;\r\n  }\r\n  var d3_layout_stackOrders = d3.map({\r\n    \"inside-out\": function(data) {\r\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\r\n        return max[a] - max[b];\r\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\r\n      for (i = 0; i < n; ++i) {\r\n        j = index[i];\r\n        if (top < bottom) {\r\n          top += sums[j];\r\n          tops.push(j);\r\n        } else {\r\n          bottom += sums[j];\r\n          bottoms.push(j);\r\n        }\r\n      }\r\n      return bottoms.reverse().concat(tops);\r\n    },\r\n    reverse: function(data) {\r\n      return d3.range(data.length).reverse();\r\n    },\r\n    \"default\": d3_layout_stackOrderDefault\r\n  });\r\n  var d3_layout_stackOffsets = d3.map({\r\n    silhouette: function(data) {\r\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\r\n      for (j = 0; j < m; ++j) {\r\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\r\n        if (o > max) max = o;\r\n        sums.push(o);\r\n      }\r\n      for (j = 0; j < m; ++j) {\r\n        y0[j] = (max - sums[j]) / 2;\r\n      }\r\n      return y0;\r\n    },\r\n    wiggle: function(data) {\r\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\r\n      y0[0] = o = o0 = 0;\r\n      for (j = 1; j < m; ++j) {\r\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\r\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\r\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\r\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\r\n          }\r\n          s2 += s3 * data[i][j][1];\r\n        }\r\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\r\n        if (o < o0) o0 = o;\r\n      }\r\n      for (j = 0; j < m; ++j) y0[j] -= o0;\r\n      return y0;\r\n    },\r\n    expand: function(data) {\r\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\r\n      for (j = 0; j < m; ++j) {\r\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\r\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\r\n      }\r\n      for (j = 0; j < m; ++j) y0[j] = 0;\r\n      return y0;\r\n    },\r\n    zero: d3_layout_stackOffsetZero\r\n  });\r\n  function d3_layout_stackOrderDefault(data) {\r\n    return d3.range(data.length);\r\n  }\r\n  function d3_layout_stackOffsetZero(data) {\r\n    var j = -1, m = data[0].length, y0 = [];\r\n    while (++j < m) y0[j] = 0;\r\n    return y0;\r\n  }\r\n  function d3_layout_stackMaxIndex(array) {\r\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\r\n    for (;i < n; ++i) {\r\n      if ((k = array[i][1]) > v) {\r\n        j = i;\r\n        v = k;\r\n      }\r\n    }\r\n    return j;\r\n  }\r\n  function d3_layout_stackReduceSum(d) {\r\n    return d.reduce(d3_layout_stackSum, 0);\r\n  }\r\n  function d3_layout_stackSum(p, d) {\r\n    return p + d[1];\r\n  }\r\n  d3.layout.histogram = function() {\r\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\r\n    function histogram(data, i) {\r\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\r\n      while (++i < m) {\r\n        bin = bins[i] = [];\r\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\r\n        bin.y = 0;\r\n      }\r\n      if (m > 0) {\r\n        i = -1;\r\n        while (++i < n) {\r\n          x = values[i];\r\n          if (x >= range[0] && x <= range[1]) {\r\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\r\n            bin.y += k;\r\n            bin.push(data[i]);\r\n          }\r\n        }\r\n      }\r\n      return bins;\r\n    }\r\n    histogram.value = function(x) {\r\n      if (!arguments.length) return valuer;\r\n      valuer = x;\r\n      return histogram;\r\n    };\r\n    histogram.range = function(x) {\r\n      if (!arguments.length) return ranger;\r\n      ranger = d3_functor(x);\r\n      return histogram;\r\n    };\r\n    histogram.bins = function(x) {\r\n      if (!arguments.length) return binner;\r\n      binner = typeof x === \"number\" ? function(range) {\r\n        return d3_layout_histogramBinFixed(range, x);\r\n      } : d3_functor(x);\r\n      return histogram;\r\n    };\r\n    histogram.frequency = function(x) {\r\n      if (!arguments.length) return frequency;\r\n      frequency = !!x;\r\n      return histogram;\r\n    };\r\n    return histogram;\r\n  };\r\n  function d3_layout_histogramBinSturges(range, values) {\r\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\r\n  }\r\n  function d3_layout_histogramBinFixed(range, n) {\r\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\r\n    while (++x <= n) f[x] = m * x + b;\r\n    return f;\r\n  }\r\n  function d3_layout_histogramRange(values) {\r\n    return [ d3.min(values), d3.max(values) ];\r\n  }\r\n  d3.layout.pack = function() {\r\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\r\n    function pack(d, i) {\r\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\r\n        return radius;\r\n      };\r\n      root.x = root.y = 0;\r\n      d3_layout_hierarchyVisitAfter(root, function(d) {\r\n        d.r = +r(d.value);\r\n      });\r\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\r\n      if (padding) {\r\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\r\n        d3_layout_hierarchyVisitAfter(root, function(d) {\r\n          d.r += dr;\r\n        });\r\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\r\n        d3_layout_hierarchyVisitAfter(root, function(d) {\r\n          d.r -= dr;\r\n        });\r\n      }\r\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\r\n      return nodes;\r\n    }\r\n    pack.size = function(_) {\r\n      if (!arguments.length) return size;\r\n      size = _;\r\n      return pack;\r\n    };\r\n    pack.radius = function(_) {\r\n      if (!arguments.length) return radius;\r\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\r\n      return pack;\r\n    };\r\n    pack.padding = function(_) {\r\n      if (!arguments.length) return padding;\r\n      padding = +_;\r\n      return pack;\r\n    };\r\n    return d3_layout_hierarchyRebind(pack, hierarchy);\r\n  };\r\n  function d3_layout_packSort(a, b) {\r\n    return a.value - b.value;\r\n  }\r\n  function d3_layout_packInsert(a, b) {\r\n    var c = a._pack_next;\r\n    a._pack_next = b;\r\n    b._pack_prev = a;\r\n    b._pack_next = c;\r\n    c._pack_prev = b;\r\n  }\r\n  function d3_layout_packSplice(a, b) {\r\n    a._pack_next = b;\r\n    b._pack_prev = a;\r\n  }\r\n  function d3_layout_packIntersects(a, b) {\r\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\r\n    return .999 * dr * dr > dx * dx + dy * dy;\r\n  }\r\n  function d3_layout_packSiblings(node) {\r\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\r\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\r\n    function bound(node) {\r\n      xMin = Math.min(node.x - node.r, xMin);\r\n      xMax = Math.max(node.x + node.r, xMax);\r\n      yMin = Math.min(node.y - node.r, yMin);\r\n      yMax = Math.max(node.y + node.r, yMax);\r\n    }\r\n    nodes.forEach(d3_layout_packLink);\r\n    a = nodes[0];\r\n    a.x = -a.r;\r\n    a.y = 0;\r\n    bound(a);\r\n    if (n > 1) {\r\n      b = nodes[1];\r\n      b.x = b.r;\r\n      b.y = 0;\r\n      bound(b);\r\n      if (n > 2) {\r\n        c = nodes[2];\r\n        d3_layout_packPlace(a, b, c);\r\n        bound(c);\r\n        d3_layout_packInsert(a, c);\r\n        a._pack_prev = c;\r\n        d3_layout_packInsert(c, b);\r\n        b = a._pack_next;\r\n        for (i = 3; i < n; i++) {\r\n          d3_layout_packPlace(a, b, c = nodes[i]);\r\n          var isect = 0, s1 = 1, s2 = 1;\r\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\r\n            if (d3_layout_packIntersects(j, c)) {\r\n              isect = 1;\r\n              break;\r\n            }\r\n          }\r\n          if (isect == 1) {\r\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\r\n              if (d3_layout_packIntersects(k, c)) {\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (isect) {\r\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\r\n            i--;\r\n          } else {\r\n            d3_layout_packInsert(a, c);\r\n            b = c;\r\n            bound(c);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\r\n    for (i = 0; i < n; i++) {\r\n      c = nodes[i];\r\n      c.x -= cx;\r\n      c.y -= cy;\r\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\r\n    }\r\n    node.r = cr;\r\n    nodes.forEach(d3_layout_packUnlink);\r\n  }\r\n  function d3_layout_packLink(node) {\r\n    node._pack_next = node._pack_prev = node;\r\n  }\r\n  function d3_layout_packUnlink(node) {\r\n    delete node._pack_next;\r\n    delete node._pack_prev;\r\n  }\r\n  function d3_layout_packTransform(node, x, y, k) {\r\n    var children = node.children;\r\n    node.x = x += k * node.x;\r\n    node.y = y += k * node.y;\r\n    node.r *= k;\r\n    if (children) {\r\n      var i = -1, n = children.length;\r\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\r\n    }\r\n  }\r\n  function d3_layout_packPlace(a, b, c) {\r\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\r\n    if (db && (dx || dy)) {\r\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\r\n      da *= da;\r\n      db *= db;\r\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\r\n      c.x = a.x + x * dx + y * dy;\r\n      c.y = a.y + x * dy - y * dx;\r\n    } else {\r\n      c.x = a.x + db;\r\n      c.y = a.y;\r\n    }\r\n  }\r\n  d3.layout.tree = function() {\r\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\r\n    function tree(d, i) {\r\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\r\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\r\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\r\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\r\n        var left = root0, right = root0, bottom = root0;\r\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\r\n          if (node.x < left.x) left = node;\r\n          if (node.x > right.x) right = node;\r\n          if (node.depth > bottom.depth) bottom = node;\r\n        });\r\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\r\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\r\n          node.x = (node.x + tx) * kx;\r\n          node.y = node.depth * ky;\r\n        });\r\n      }\r\n      return nodes;\r\n    }\r\n    function wrapTree(root0) {\r\n      var root1 = {\r\n        A: null,\r\n        children: [ root0 ]\r\n      }, queue = [ root1 ], node1;\r\n      while ((node1 = queue.pop()) != null) {\r\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\r\n          queue.push((children[i] = child = {\r\n            _: children[i],\r\n            parent: node1,\r\n            children: (child = children[i].children) && child.slice() || [],\r\n            A: null,\r\n            a: null,\r\n            z: 0,\r\n            m: 0,\r\n            c: 0,\r\n            s: 0,\r\n            t: null,\r\n            i: i\r\n          }).a = child);\r\n        }\r\n      }\r\n      return root1.children[0];\r\n    }\r\n    function firstWalk(v) {\r\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\r\n      if (children.length) {\r\n        d3_layout_treeShift(v);\r\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\r\n        if (w) {\r\n          v.z = w.z + separation(v._, w._);\r\n          v.m = v.z - midpoint;\r\n        } else {\r\n          v.z = midpoint;\r\n        }\r\n      } else if (w) {\r\n        v.z = w.z + separation(v._, w._);\r\n      }\r\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\r\n    }\r\n    function secondWalk(v) {\r\n      v._.x = v.z + v.parent.m;\r\n      v.m += v.parent.m;\r\n    }\r\n    function apportion(v, w, ancestor) {\r\n      if (w) {\r\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\r\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\r\n          vom = d3_layout_treeLeft(vom);\r\n          vop = d3_layout_treeRight(vop);\r\n          vop.a = v;\r\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\r\n          if (shift > 0) {\r\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\r\n            sip += shift;\r\n            sop += shift;\r\n          }\r\n          sim += vim.m;\r\n          sip += vip.m;\r\n          som += vom.m;\r\n          sop += vop.m;\r\n        }\r\n        if (vim && !d3_layout_treeRight(vop)) {\r\n          vop.t = vim;\r\n          vop.m += sim - sop;\r\n        }\r\n        if (vip && !d3_layout_treeLeft(vom)) {\r\n          vom.t = vip;\r\n          vom.m += sip - som;\r\n          ancestor = v;\r\n        }\r\n      }\r\n      return ancestor;\r\n    }\r\n    function sizeNode(node) {\r\n      node.x *= size[0];\r\n      node.y = node.depth * size[1];\r\n    }\r\n    tree.separation = function(x) {\r\n      if (!arguments.length) return separation;\r\n      separation = x;\r\n      return tree;\r\n    };\r\n    tree.size = function(x) {\r\n      if (!arguments.length) return nodeSize ? null : size;\r\n      nodeSize = (size = x) == null ? sizeNode : null;\r\n      return tree;\r\n    };\r\n    tree.nodeSize = function(x) {\r\n      if (!arguments.length) return nodeSize ? size : null;\r\n      nodeSize = (size = x) == null ? null : sizeNode;\r\n      return tree;\r\n    };\r\n    return d3_layout_hierarchyRebind(tree, hierarchy);\r\n  };\r\n  function d3_layout_treeSeparation(a, b) {\r\n    return a.parent == b.parent ? 1 : 2;\r\n  }\r\n  function d3_layout_treeLeft(v) {\r\n    var children = v.children;\r\n    return children.length ? children[0] : v.t;\r\n  }\r\n  function d3_layout_treeRight(v) {\r\n    var children = v.children, n;\r\n    return (n = children.length) ? children[n - 1] : v.t;\r\n  }\r\n  function d3_layout_treeMove(wm, wp, shift) {\r\n    var change = shift / (wp.i - wm.i);\r\n    wp.c -= change;\r\n    wp.s += shift;\r\n    wm.c += change;\r\n    wp.z += shift;\r\n    wp.m += shift;\r\n  }\r\n  function d3_layout_treeShift(v) {\r\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\r\n    while (--i >= 0) {\r\n      w = children[i];\r\n      w.z += shift;\r\n      w.m += shift;\r\n      shift += w.s + (change += w.c);\r\n    }\r\n  }\r\n  function d3_layout_treeAncestor(vim, v, ancestor) {\r\n    return vim.a.parent === v.parent ? vim.a : ancestor;\r\n  }\r\n  d3.layout.cluster = function() {\r\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\r\n    function cluster(d, i) {\r\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\r\n      d3_layout_hierarchyVisitAfter(root, function(node) {\r\n        var children = node.children;\r\n        if (children && children.length) {\r\n          node.x = d3_layout_clusterX(children);\r\n          node.y = d3_layout_clusterY(children);\r\n        } else {\r\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\r\n          node.y = 0;\r\n          previousNode = node;\r\n        }\r\n      });\r\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\r\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\r\n        node.x = (node.x - root.x) * size[0];\r\n        node.y = (root.y - node.y) * size[1];\r\n      } : function(node) {\r\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\r\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\r\n      });\r\n      return nodes;\r\n    }\r\n    cluster.separation = function(x) {\r\n      if (!arguments.length) return separation;\r\n      separation = x;\r\n      return cluster;\r\n    };\r\n    cluster.size = function(x) {\r\n      if (!arguments.length) return nodeSize ? null : size;\r\n      nodeSize = (size = x) == null;\r\n      return cluster;\r\n    };\r\n    cluster.nodeSize = function(x) {\r\n      if (!arguments.length) return nodeSize ? size : null;\r\n      nodeSize = (size = x) != null;\r\n      return cluster;\r\n    };\r\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\r\n  };\r\n  function d3_layout_clusterY(children) {\r\n    return 1 + d3.max(children, function(child) {\r\n      return child.y;\r\n    });\r\n  }\r\n  function d3_layout_clusterX(children) {\r\n    return children.reduce(function(x, child) {\r\n      return x + child.x;\r\n    }, 0) / children.length;\r\n  }\r\n  function d3_layout_clusterLeft(node) {\r\n    var children = node.children;\r\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\r\n  }\r\n  function d3_layout_clusterRight(node) {\r\n    var children = node.children, n;\r\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\r\n  }\r\n  d3.layout.treemap = function() {\r\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\r\n    function scale(children, k) {\r\n      var i = -1, n = children.length, child, area;\r\n      while (++i < n) {\r\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\r\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\r\n      }\r\n    }\r\n    function squarify(node) {\r\n      var children = node.children;\r\n      if (children && children.length) {\r\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\r\n        scale(remaining, rect.dx * rect.dy / node.value);\r\n        row.area = 0;\r\n        while ((n = remaining.length) > 0) {\r\n          row.push(child = remaining[n - 1]);\r\n          row.area += child.area;\r\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\r\n            remaining.pop();\r\n            best = score;\r\n          } else {\r\n            row.area -= row.pop().area;\r\n            position(row, u, rect, false);\r\n            u = Math.min(rect.dx, rect.dy);\r\n            row.length = row.area = 0;\r\n            best = Infinity;\r\n          }\r\n        }\r\n        if (row.length) {\r\n          position(row, u, rect, true);\r\n          row.length = row.area = 0;\r\n        }\r\n        children.forEach(squarify);\r\n      }\r\n    }\r\n    function stickify(node) {\r\n      var children = node.children;\r\n      if (children && children.length) {\r\n        var rect = pad(node), remaining = children.slice(), child, row = [];\r\n        scale(remaining, rect.dx * rect.dy / node.value);\r\n        row.area = 0;\r\n        while (child = remaining.pop()) {\r\n          row.push(child);\r\n          row.area += child.area;\r\n          if (child.z != null) {\r\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\r\n            row.length = row.area = 0;\r\n          }\r\n        }\r\n        children.forEach(stickify);\r\n      }\r\n    }\r\n    function worst(row, u) {\r\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\r\n      while (++i < n) {\r\n        if (!(r = row[i].area)) continue;\r\n        if (r < rmin) rmin = r;\r\n        if (r > rmax) rmax = r;\r\n      }\r\n      s *= s;\r\n      u *= u;\r\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\r\n    }\r\n    function position(row, u, rect, flush) {\r\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\r\n      if (u == rect.dx) {\r\n        if (flush || v > rect.dy) v = rect.dy;\r\n        while (++i < n) {\r\n          o = row[i];\r\n          o.x = x;\r\n          o.y = y;\r\n          o.dy = v;\r\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\r\n        }\r\n        o.z = true;\r\n        o.dx += rect.x + rect.dx - x;\r\n        rect.y += v;\r\n        rect.dy -= v;\r\n      } else {\r\n        if (flush || v > rect.dx) v = rect.dx;\r\n        while (++i < n) {\r\n          o = row[i];\r\n          o.x = x;\r\n          o.y = y;\r\n          o.dx = v;\r\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\r\n        }\r\n        o.z = false;\r\n        o.dy += rect.y + rect.dy - y;\r\n        rect.x += v;\r\n        rect.dx -= v;\r\n      }\r\n    }\r\n    function treemap(d) {\r\n      var nodes = stickies || hierarchy(d), root = nodes[0];\r\n      root.x = root.y = 0;\r\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\r\n      if (stickies) hierarchy.revalue(root);\r\n      scale([ root ], root.dx * root.dy / root.value);\r\n      (stickies ? stickify : squarify)(root);\r\n      if (sticky) stickies = nodes;\r\n      return nodes;\r\n    }\r\n    treemap.size = function(x) {\r\n      if (!arguments.length) return size;\r\n      size = x;\r\n      return treemap;\r\n    };\r\n    treemap.padding = function(x) {\r\n      if (!arguments.length) return padding;\r\n      function padFunction(node) {\r\n        var p = x.call(treemap, node, node.depth);\r\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\r\n      }\r\n      function padConstant(node) {\r\n        return d3_layout_treemapPad(node, x);\r\n      }\r\n      var type;\r\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \r\n      padConstant) : padConstant;\r\n      return treemap;\r\n    };\r\n    treemap.round = function(x) {\r\n      if (!arguments.length) return round != Number;\r\n      round = x ? Math.round : Number;\r\n      return treemap;\r\n    };\r\n    treemap.sticky = function(x) {\r\n      if (!arguments.length) return sticky;\r\n      sticky = x;\r\n      stickies = null;\r\n      return treemap;\r\n    };\r\n    treemap.ratio = function(x) {\r\n      if (!arguments.length) return ratio;\r\n      ratio = x;\r\n      return treemap;\r\n    };\r\n    treemap.mode = function(x) {\r\n      if (!arguments.length) return mode;\r\n      mode = x + \"\";\r\n      return treemap;\r\n    };\r\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\r\n  };\r\n  function d3_layout_treemapPadNull(node) {\r\n    return {\r\n      x: node.x,\r\n      y: node.y,\r\n      dx: node.dx,\r\n      dy: node.dy\r\n    };\r\n  }\r\n  function d3_layout_treemapPad(node, padding) {\r\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\r\n    if (dx < 0) {\r\n      x += dx / 2;\r\n      dx = 0;\r\n    }\r\n    if (dy < 0) {\r\n      y += dy / 2;\r\n      dy = 0;\r\n    }\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      dx: dx,\r\n      dy: dy\r\n    };\r\n  }\r\n  d3.random = {\r\n    normal: function(µ, σ) {\r\n      var n = arguments.length;\r\n      if (n < 2) σ = 1;\r\n      if (n < 1) µ = 0;\r\n      return function() {\r\n        var x, y, r;\r\n        do {\r\n          x = Math.random() * 2 - 1;\r\n          y = Math.random() * 2 - 1;\r\n          r = x * x + y * y;\r\n        } while (!r || r > 1);\r\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\r\n      };\r\n    },\r\n    logNormal: function() {\r\n      var random = d3.random.normal.apply(d3, arguments);\r\n      return function() {\r\n        return Math.exp(random());\r\n      };\r\n    },\r\n    bates: function(m) {\r\n      var random = d3.random.irwinHall(m);\r\n      return function() {\r\n        return random() / m;\r\n      };\r\n    },\r\n    irwinHall: function(m) {\r\n      return function() {\r\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\r\n        return s;\r\n      };\r\n    }\r\n  };\r\n  d3.scale = {};\r\n  function d3_scaleExtent(domain) {\r\n    var start = domain[0], stop = domain[domain.length - 1];\r\n    return start < stop ? [ start, stop ] : [ stop, start ];\r\n  }\r\n  function d3_scaleRange(scale) {\r\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\r\n  }\r\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\r\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\r\n    return function(x) {\r\n      return i(u(x));\r\n    };\r\n  }\r\n  function d3_scale_nice(domain, nice) {\r\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\r\n    if (x1 < x0) {\r\n      dx = i0, i0 = i1, i1 = dx;\r\n      dx = x0, x0 = x1, x1 = dx;\r\n    }\r\n    domain[i0] = nice.floor(x0);\r\n    domain[i1] = nice.ceil(x1);\r\n    return domain;\r\n  }\r\n  function d3_scale_niceStep(step) {\r\n    return step ? {\r\n      floor: function(x) {\r\n        return Math.floor(x / step) * step;\r\n      },\r\n      ceil: function(x) {\r\n        return Math.ceil(x / step) * step;\r\n      }\r\n    } : d3_scale_niceIdentity;\r\n  }\r\n  var d3_scale_niceIdentity = {\r\n    floor: d3_identity,\r\n    ceil: d3_identity\r\n  };\r\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\r\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\r\n    if (domain[k] < domain[0]) {\r\n      domain = domain.slice().reverse();\r\n      range = range.slice().reverse();\r\n    }\r\n    while (++j <= k) {\r\n      u.push(uninterpolate(domain[j - 1], domain[j]));\r\n      i.push(interpolate(range[j - 1], range[j]));\r\n    }\r\n    return function(x) {\r\n      var j = d3.bisect(domain, x, 1, k) - 1;\r\n      return i[j](u[j](x));\r\n    };\r\n  }\r\n  d3.scale.linear = function() {\r\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\r\n  };\r\n  function d3_scale_linear(domain, range, interpolate, clamp) {\r\n    var output, input;\r\n    function rescale() {\r\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\r\n      output = linear(domain, range, uninterpolate, interpolate);\r\n      input = linear(range, domain, uninterpolate, d3_interpolate);\r\n      return scale;\r\n    }\r\n    function scale(x) {\r\n      return output(x);\r\n    }\r\n    scale.invert = function(y) {\r\n      return input(y);\r\n    };\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return domain;\r\n      domain = x.map(Number);\r\n      return rescale();\r\n    };\r\n    scale.range = function(x) {\r\n      if (!arguments.length) return range;\r\n      range = x;\r\n      return rescale();\r\n    };\r\n    scale.rangeRound = function(x) {\r\n      return scale.range(x).interpolate(d3_interpolateRound);\r\n    };\r\n    scale.clamp = function(x) {\r\n      if (!arguments.length) return clamp;\r\n      clamp = x;\r\n      return rescale();\r\n    };\r\n    scale.interpolate = function(x) {\r\n      if (!arguments.length) return interpolate;\r\n      interpolate = x;\r\n      return rescale();\r\n    };\r\n    scale.ticks = function(m) {\r\n      return d3_scale_linearTicks(domain, m);\r\n    };\r\n    scale.tickFormat = function(m, format) {\r\n      return d3_scale_linearTickFormat(domain, m, format);\r\n    };\r\n    scale.nice = function(m) {\r\n      d3_scale_linearNice(domain, m);\r\n      return rescale();\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_linear(domain, range, interpolate, clamp);\r\n    };\r\n    return rescale();\r\n  }\r\n  function d3_scale_linearRebind(scale, linear) {\r\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\r\n  }\r\n  function d3_scale_linearNice(domain, m) {\r\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\r\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\r\n    return domain;\r\n  }\r\n  function d3_scale_linearTickRange(domain, m) {\r\n    if (m == null) m = 10;\r\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\r\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\r\n    extent[0] = Math.ceil(extent[0] / step) * step;\r\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\r\n    extent[2] = step;\r\n    return extent;\r\n  }\r\n  function d3_scale_linearTicks(domain, m) {\r\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\r\n  }\r\n  function d3_scale_linearTickFormat(domain, m, format) {\r\n    var range = d3_scale_linearTickRange(domain, m);\r\n    if (format) {\r\n      var match = d3_format_re.exec(format);\r\n      match.shift();\r\n      if (match[8] === \"s\") {\r\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\r\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\r\n        match[8] = \"f\";\r\n        format = d3.format(match.join(\"\"));\r\n        return function(d) {\r\n          return format(prefix.scale(d)) + prefix.symbol;\r\n        };\r\n      }\r\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\r\n      format = match.join(\"\");\r\n    } else {\r\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\r\n    }\r\n    return d3.format(format);\r\n  }\r\n  var d3_scale_linearFormatSignificant = {\r\n    s: 1,\r\n    g: 1,\r\n    p: 1,\r\n    r: 1,\r\n    e: 1\r\n  };\r\n  function d3_scale_linearPrecision(value) {\r\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\r\n  }\r\n  function d3_scale_linearFormatPrecision(type, range) {\r\n    var p = d3_scale_linearPrecision(range[2]);\r\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\r\n  }\r\n  d3.scale.log = function() {\r\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\r\n  };\r\n  function d3_scale_log(linear, base, positive, domain) {\r\n    function log(x) {\r\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\r\n    }\r\n    function pow(x) {\r\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\r\n    }\r\n    function scale(x) {\r\n      return linear(log(x));\r\n    }\r\n    scale.invert = function(x) {\r\n      return pow(linear.invert(x));\r\n    };\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return domain;\r\n      positive = x[0] >= 0;\r\n      linear.domain((domain = x.map(Number)).map(log));\r\n      return scale;\r\n    };\r\n    scale.base = function(_) {\r\n      if (!arguments.length) return base;\r\n      base = +_;\r\n      linear.domain(domain.map(log));\r\n      return scale;\r\n    };\r\n    scale.nice = function() {\r\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\r\n      linear.domain(niced);\r\n      domain = niced.map(pow);\r\n      return scale;\r\n    };\r\n    scale.ticks = function() {\r\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\r\n      if (isFinite(j - i)) {\r\n        if (positive) {\r\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\r\n          ticks.push(pow(i));\r\n        } else {\r\n          ticks.push(pow(i));\r\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\r\n        }\r\n        for (i = 0; ticks[i] < u; i++) {}\r\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\r\n        ticks = ticks.slice(i, j);\r\n      }\r\n      return ticks;\r\n    };\r\n    scale.tickFormat = function(n, format) {\r\n      if (!arguments.length) return d3_scale_logFormat;\r\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\r\n      var k = Math.max(1, base * n / scale.ticks().length);\r\n      return function(d) {\r\n        var i = d / pow(Math.round(log(d)));\r\n        if (i * base < base - .5) i *= base;\r\n        return i <= k ? format(d) : \"\";\r\n      };\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_log(linear.copy(), base, positive, domain);\r\n    };\r\n    return d3_scale_linearRebind(scale, linear);\r\n  }\r\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\r\n    floor: function(x) {\r\n      return -Math.ceil(-x);\r\n    },\r\n    ceil: function(x) {\r\n      return -Math.floor(-x);\r\n    }\r\n  };\r\n  d3.scale.pow = function() {\r\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\r\n  };\r\n  function d3_scale_pow(linear, exponent, domain) {\r\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\r\n    function scale(x) {\r\n      return linear(powp(x));\r\n    }\r\n    scale.invert = function(x) {\r\n      return powb(linear.invert(x));\r\n    };\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return domain;\r\n      linear.domain((domain = x.map(Number)).map(powp));\r\n      return scale;\r\n    };\r\n    scale.ticks = function(m) {\r\n      return d3_scale_linearTicks(domain, m);\r\n    };\r\n    scale.tickFormat = function(m, format) {\r\n      return d3_scale_linearTickFormat(domain, m, format);\r\n    };\r\n    scale.nice = function(m) {\r\n      return scale.domain(d3_scale_linearNice(domain, m));\r\n    };\r\n    scale.exponent = function(x) {\r\n      if (!arguments.length) return exponent;\r\n      powp = d3_scale_powPow(exponent = x);\r\n      powb = d3_scale_powPow(1 / exponent);\r\n      linear.domain(domain.map(powp));\r\n      return scale;\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_pow(linear.copy(), exponent, domain);\r\n    };\r\n    return d3_scale_linearRebind(scale, linear);\r\n  }\r\n  function d3_scale_powPow(e) {\r\n    return function(x) {\r\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\r\n    };\r\n  }\r\n  d3.scale.sqrt = function() {\r\n    return d3.scale.pow().exponent(.5);\r\n  };\r\n  d3.scale.ordinal = function() {\r\n    return d3_scale_ordinal([], {\r\n      t: \"range\",\r\n      a: [ [] ]\r\n    });\r\n  };\r\n  function d3_scale_ordinal(domain, ranger) {\r\n    var index, range, rangeBand;\r\n    function scale(x) {\r\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\r\n    }\r\n    function steps(start, step) {\r\n      return d3.range(domain.length).map(function(i) {\r\n        return start + step * i;\r\n      });\r\n    }\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return domain;\r\n      domain = [];\r\n      index = new d3_Map();\r\n      var i = -1, n = x.length, xi;\r\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\r\n      return scale[ranger.t].apply(scale, ranger.a);\r\n    };\r\n    scale.range = function(x) {\r\n      if (!arguments.length) return range;\r\n      range = x;\r\n      rangeBand = 0;\r\n      ranger = {\r\n        t: \"range\",\r\n        a: arguments\r\n      };\r\n      return scale;\r\n    };\r\n    scale.rangePoints = function(x, padding) {\r\n      if (arguments.length < 2) padding = 0;\r\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \r\n      0) : (stop - start) / (domain.length - 1 + padding);\r\n      range = steps(start + step * padding / 2, step);\r\n      rangeBand = 0;\r\n      ranger = {\r\n        t: \"rangePoints\",\r\n        a: arguments\r\n      };\r\n      return scale;\r\n    };\r\n    scale.rangeRoundPoints = function(x, padding) {\r\n      if (arguments.length < 2) padding = 0;\r\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \r\n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\r\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\r\n      rangeBand = 0;\r\n      ranger = {\r\n        t: \"rangeRoundPoints\",\r\n        a: arguments\r\n      };\r\n      return scale;\r\n    };\r\n    scale.rangeBands = function(x, padding, outerPadding) {\r\n      if (arguments.length < 2) padding = 0;\r\n      if (arguments.length < 3) outerPadding = padding;\r\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\r\n      range = steps(start + step * outerPadding, step);\r\n      if (reverse) range.reverse();\r\n      rangeBand = step * (1 - padding);\r\n      ranger = {\r\n        t: \"rangeBands\",\r\n        a: arguments\r\n      };\r\n      return scale;\r\n    };\r\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\r\n      if (arguments.length < 2) padding = 0;\r\n      if (arguments.length < 3) outerPadding = padding;\r\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\r\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\r\n      if (reverse) range.reverse();\r\n      rangeBand = Math.round(step * (1 - padding));\r\n      ranger = {\r\n        t: \"rangeRoundBands\",\r\n        a: arguments\r\n      };\r\n      return scale;\r\n    };\r\n    scale.rangeBand = function() {\r\n      return rangeBand;\r\n    };\r\n    scale.rangeExtent = function() {\r\n      return d3_scaleExtent(ranger.a[0]);\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_ordinal(domain, ranger);\r\n    };\r\n    return scale.domain(domain);\r\n  }\r\n  d3.scale.category10 = function() {\r\n    return d3.scale.ordinal().range(d3_category10);\r\n  };\r\n  d3.scale.category20 = function() {\r\n    return d3.scale.ordinal().range(d3_category20);\r\n  };\r\n  d3.scale.category20b = function() {\r\n    return d3.scale.ordinal().range(d3_category20b);\r\n  };\r\n  d3.scale.category20c = function() {\r\n    return d3.scale.ordinal().range(d3_category20c);\r\n  };\r\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\r\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\r\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\r\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\r\n  d3.scale.quantile = function() {\r\n    return d3_scale_quantile([], []);\r\n  };\r\n  function d3_scale_quantile(domain, range) {\r\n    var thresholds;\r\n    function rescale() {\r\n      var k = 0, q = range.length;\r\n      thresholds = [];\r\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\r\n      return scale;\r\n    }\r\n    function scale(x) {\r\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\r\n    }\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return domain;\r\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\r\n      return rescale();\r\n    };\r\n    scale.range = function(x) {\r\n      if (!arguments.length) return range;\r\n      range = x;\r\n      return rescale();\r\n    };\r\n    scale.quantiles = function() {\r\n      return thresholds;\r\n    };\r\n    scale.invertExtent = function(y) {\r\n      y = range.indexOf(y);\r\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_quantile(domain, range);\r\n    };\r\n    return rescale();\r\n  }\r\n  d3.scale.quantize = function() {\r\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\r\n  };\r\n  function d3_scale_quantize(x0, x1, range) {\r\n    var kx, i;\r\n    function scale(x) {\r\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\r\n    }\r\n    function rescale() {\r\n      kx = range.length / (x1 - x0);\r\n      i = range.length - 1;\r\n      return scale;\r\n    }\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return [ x0, x1 ];\r\n      x0 = +x[0];\r\n      x1 = +x[x.length - 1];\r\n      return rescale();\r\n    };\r\n    scale.range = function(x) {\r\n      if (!arguments.length) return range;\r\n      range = x;\r\n      return rescale();\r\n    };\r\n    scale.invertExtent = function(y) {\r\n      y = range.indexOf(y);\r\n      y = y < 0 ? NaN : y / kx + x0;\r\n      return [ y, y + 1 / kx ];\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_quantize(x0, x1, range);\r\n    };\r\n    return rescale();\r\n  }\r\n  d3.scale.threshold = function() {\r\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\r\n  };\r\n  function d3_scale_threshold(domain, range) {\r\n    function scale(x) {\r\n      if (x <= x) return range[d3.bisect(domain, x)];\r\n    }\r\n    scale.domain = function(_) {\r\n      if (!arguments.length) return domain;\r\n      domain = _;\r\n      return scale;\r\n    };\r\n    scale.range = function(_) {\r\n      if (!arguments.length) return range;\r\n      range = _;\r\n      return scale;\r\n    };\r\n    scale.invertExtent = function(y) {\r\n      y = range.indexOf(y);\r\n      return [ domain[y - 1], domain[y] ];\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_threshold(domain, range);\r\n    };\r\n    return scale;\r\n  }\r\n  d3.scale.identity = function() {\r\n    return d3_scale_identity([ 0, 1 ]);\r\n  };\r\n  function d3_scale_identity(domain) {\r\n    function identity(x) {\r\n      return +x;\r\n    }\r\n    identity.invert = identity;\r\n    identity.domain = identity.range = function(x) {\r\n      if (!arguments.length) return domain;\r\n      domain = x.map(identity);\r\n      return identity;\r\n    };\r\n    identity.ticks = function(m) {\r\n      return d3_scale_linearTicks(domain, m);\r\n    };\r\n    identity.tickFormat = function(m, format) {\r\n      return d3_scale_linearTickFormat(domain, m, format);\r\n    };\r\n    identity.copy = function() {\r\n      return d3_scale_identity(domain);\r\n    };\r\n    return identity;\r\n  }\r\n  d3.svg = {};\r\n  function d3_zero() {\r\n    return 0;\r\n  }\r\n  d3.svg.arc = function() {\r\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\r\n    function arc() {\r\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\r\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\r\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\r\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\r\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\r\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\r\n        if (!cw) p1 *= -1;\r\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\r\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\r\n      }\r\n      if (r1) {\r\n        x0 = r1 * Math.cos(a0 + p1);\r\n        y0 = r1 * Math.sin(a0 + p1);\r\n        x1 = r1 * Math.cos(a1 - p1);\r\n        y1 = r1 * Math.sin(a1 - p1);\r\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\r\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\r\n          var h1 = (a0 + a1) / 2;\r\n          x0 = r1 * Math.cos(h1);\r\n          y0 = r1 * Math.sin(h1);\r\n          x1 = y1 = null;\r\n        }\r\n      } else {\r\n        x0 = y0 = 0;\r\n      }\r\n      if (r0) {\r\n        x2 = r0 * Math.cos(a1 - p0);\r\n        y2 = r0 * Math.sin(a1 - p0);\r\n        x3 = r0 * Math.cos(a0 + p0);\r\n        y3 = r0 * Math.sin(a0 + p0);\r\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\r\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\r\n          var h0 = (a0 + a1) / 2;\r\n          x2 = r0 * Math.cos(h0);\r\n          y2 = r0 * Math.sin(h0);\r\n          x3 = y3 = null;\r\n        }\r\n      } else {\r\n        x2 = y2 = 0;\r\n      }\r\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\r\n        cr = r0 < r1 ^ cw ? 0 : 1;\r\n        var rc1 = rc, rc0 = rc;\r\n        if (da < π) {\r\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\r\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\r\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\r\n        }\r\n        if (x1 != null) {\r\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\r\n          if (rc === rc1) {\r\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\r\n          } else {\r\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\r\n          }\r\n        } else {\r\n          path.push(\"M\", x0, \",\", y0);\r\n        }\r\n        if (x3 != null) {\r\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\r\n          if (rc === rc0) {\r\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\r\n          } else {\r\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\r\n          }\r\n        } else {\r\n          path.push(\"L\", x2, \",\", y2);\r\n        }\r\n      } else {\r\n        path.push(\"M\", x0, \",\", y0);\r\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\r\n        path.push(\"L\", x2, \",\", y2);\r\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\r\n      }\r\n      path.push(\"Z\");\r\n      return path.join(\"\");\r\n    }\r\n    function circleSegment(r1, cw) {\r\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\r\n    }\r\n    arc.innerRadius = function(v) {\r\n      if (!arguments.length) return innerRadius;\r\n      innerRadius = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.outerRadius = function(v) {\r\n      if (!arguments.length) return outerRadius;\r\n      outerRadius = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.cornerRadius = function(v) {\r\n      if (!arguments.length) return cornerRadius;\r\n      cornerRadius = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.padRadius = function(v) {\r\n      if (!arguments.length) return padRadius;\r\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.startAngle = function(v) {\r\n      if (!arguments.length) return startAngle;\r\n      startAngle = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.endAngle = function(v) {\r\n      if (!arguments.length) return endAngle;\r\n      endAngle = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.padAngle = function(v) {\r\n      if (!arguments.length) return padAngle;\r\n      padAngle = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.centroid = function() {\r\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\r\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\r\n    };\r\n    return arc;\r\n  };\r\n  var d3_svg_arcAuto = \"auto\";\r\n  function d3_svg_arcInnerRadius(d) {\r\n    return d.innerRadius;\r\n  }\r\n  function d3_svg_arcOuterRadius(d) {\r\n    return d.outerRadius;\r\n  }\r\n  function d3_svg_arcStartAngle(d) {\r\n    return d.startAngle;\r\n  }\r\n  function d3_svg_arcEndAngle(d) {\r\n    return d.endAngle;\r\n  }\r\n  function d3_svg_arcPadAngle(d) {\r\n    return d && d.padAngle;\r\n  }\r\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\r\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\r\n  }\r\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\r\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\r\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\r\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\r\n  }\r\n  function d3_svg_line(projection) {\r\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\r\n    function line(data) {\r\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\r\n      function segment() {\r\n        segments.push(\"M\", interpolate(projection(points), tension));\r\n      }\r\n      while (++i < n) {\r\n        if (defined.call(this, d = data[i], i)) {\r\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\r\n        } else if (points.length) {\r\n          segment();\r\n          points = [];\r\n        }\r\n      }\r\n      if (points.length) segment();\r\n      return segments.length ? segments.join(\"\") : null;\r\n    }\r\n    line.x = function(_) {\r\n      if (!arguments.length) return x;\r\n      x = _;\r\n      return line;\r\n    };\r\n    line.y = function(_) {\r\n      if (!arguments.length) return y;\r\n      y = _;\r\n      return line;\r\n    };\r\n    line.defined = function(_) {\r\n      if (!arguments.length) return defined;\r\n      defined = _;\r\n      return line;\r\n    };\r\n    line.interpolate = function(_) {\r\n      if (!arguments.length) return interpolateKey;\r\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\r\n      return line;\r\n    };\r\n    line.tension = function(_) {\r\n      if (!arguments.length) return tension;\r\n      tension = _;\r\n      return line;\r\n    };\r\n    return line;\r\n  }\r\n  d3.svg.line = function() {\r\n    return d3_svg_line(d3_identity);\r\n  };\r\n  var d3_svg_lineInterpolators = d3.map({\r\n    linear: d3_svg_lineLinear,\r\n    \"linear-closed\": d3_svg_lineLinearClosed,\r\n    step: d3_svg_lineStep,\r\n    \"step-before\": d3_svg_lineStepBefore,\r\n    \"step-after\": d3_svg_lineStepAfter,\r\n    basis: d3_svg_lineBasis,\r\n    \"basis-open\": d3_svg_lineBasisOpen,\r\n    \"basis-closed\": d3_svg_lineBasisClosed,\r\n    bundle: d3_svg_lineBundle,\r\n    cardinal: d3_svg_lineCardinal,\r\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\r\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\r\n    monotone: d3_svg_lineMonotone\r\n  });\r\n  d3_svg_lineInterpolators.forEach(function(key, value) {\r\n    value.key = key;\r\n    value.closed = /-closed$/.test(key);\r\n  });\r\n  function d3_svg_lineLinear(points) {\r\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\r\n  }\r\n  function d3_svg_lineLinearClosed(points) {\r\n    return points.join(\"L\") + \"Z\";\r\n  }\r\n  function d3_svg_lineStep(points) {\r\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\r\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\r\n    if (n > 1) path.push(\"H\", p[0]);\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineStepBefore(points) {\r\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\r\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineStepAfter(points) {\r\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\r\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineCardinalOpen(points, tension) {\r\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\r\n  }\r\n  function d3_svg_lineCardinalClosed(points, tension) {\r\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \r\n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\r\n  }\r\n  function d3_svg_lineCardinal(points, tension) {\r\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\r\n  }\r\n  function d3_svg_lineHermite(points, tangents) {\r\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\r\n      return d3_svg_lineLinear(points);\r\n    }\r\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\r\n    if (quad) {\r\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\r\n      p0 = points[1];\r\n      pi = 2;\r\n    }\r\n    if (tangents.length > 1) {\r\n      t = tangents[1];\r\n      p = points[pi];\r\n      pi++;\r\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\r\n      for (var i = 2; i < tangents.length; i++, pi++) {\r\n        p = points[pi];\r\n        t = tangents[i];\r\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\r\n      }\r\n    }\r\n    if (quad) {\r\n      var lp = points[pi];\r\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\r\n    }\r\n    return path;\r\n  }\r\n  function d3_svg_lineCardinalTangents(points, tension) {\r\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\r\n    while (++i < n) {\r\n      p0 = p1;\r\n      p1 = p2;\r\n      p2 = points[i];\r\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\r\n    }\r\n    return tangents;\r\n  }\r\n  function d3_svg_lineBasis(points) {\r\n    if (points.length < 3) return d3_svg_lineLinear(points);\r\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\r\n    points.push(points[n - 1]);\r\n    while (++i <= n) {\r\n      pi = points[i];\r\n      px.shift();\r\n      px.push(pi[0]);\r\n      py.shift();\r\n      py.push(pi[1]);\r\n      d3_svg_lineBasisBezier(path, px, py);\r\n    }\r\n    points.pop();\r\n    path.push(\"L\", pi);\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineBasisOpen(points) {\r\n    if (points.length < 4) return d3_svg_lineLinear(points);\r\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\r\n    while (++i < 3) {\r\n      pi = points[i];\r\n      px.push(pi[0]);\r\n      py.push(pi[1]);\r\n    }\r\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\r\n    --i;\r\n    while (++i < n) {\r\n      pi = points[i];\r\n      px.shift();\r\n      px.push(pi[0]);\r\n      py.shift();\r\n      py.push(pi[1]);\r\n      d3_svg_lineBasisBezier(path, px, py);\r\n    }\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineBasisClosed(points) {\r\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\r\n    while (++i < 4) {\r\n      pi = points[i % n];\r\n      px.push(pi[0]);\r\n      py.push(pi[1]);\r\n    }\r\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\r\n    --i;\r\n    while (++i < m) {\r\n      pi = points[i % n];\r\n      px.shift();\r\n      px.push(pi[0]);\r\n      py.shift();\r\n      py.push(pi[1]);\r\n      d3_svg_lineBasisBezier(path, px, py);\r\n    }\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineBundle(points, tension) {\r\n    var n = points.length - 1;\r\n    if (n) {\r\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\r\n      while (++i <= n) {\r\n        p = points[i];\r\n        t = i / n;\r\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\r\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\r\n      }\r\n    }\r\n    return d3_svg_lineBasis(points);\r\n  }\r\n  function d3_svg_lineDot4(a, b) {\r\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n  }\r\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\r\n  function d3_svg_lineBasisBezier(path, x, y) {\r\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\r\n  }\r\n  function d3_svg_lineSlope(p0, p1) {\r\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\r\n  }\r\n  function d3_svg_lineFiniteDifferences(points) {\r\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\r\n    while (++i < j) {\r\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\r\n    }\r\n    m[i] = d;\r\n    return m;\r\n  }\r\n  function d3_svg_lineMonotoneTangents(points) {\r\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\r\n    while (++i < j) {\r\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\r\n      if (abs(d) < ε) {\r\n        m[i] = m[i + 1] = 0;\r\n      } else {\r\n        a = m[i] / d;\r\n        b = m[i + 1] / d;\r\n        s = a * a + b * b;\r\n        if (s > 9) {\r\n          s = d * 3 / Math.sqrt(s);\r\n          m[i] = s * a;\r\n          m[i + 1] = s * b;\r\n        }\r\n      }\r\n    }\r\n    i = -1;\r\n    while (++i <= j) {\r\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\r\n      tangents.push([ s || 0, m[i] * s || 0 ]);\r\n    }\r\n    return tangents;\r\n  }\r\n  function d3_svg_lineMonotone(points) {\r\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\r\n  }\r\n  d3.svg.line.radial = function() {\r\n    var line = d3_svg_line(d3_svg_lineRadial);\r\n    line.radius = line.x, delete line.x;\r\n    line.angle = line.y, delete line.y;\r\n    return line;\r\n  };\r\n  function d3_svg_lineRadial(points) {\r\n    var point, i = -1, n = points.length, r, a;\r\n    while (++i < n) {\r\n      point = points[i];\r\n      r = point[0];\r\n      a = point[1] - halfπ;\r\n      point[0] = r * Math.cos(a);\r\n      point[1] = r * Math.sin(a);\r\n    }\r\n    return points;\r\n  }\r\n  function d3_svg_area(projection) {\r\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\r\n    function area(data) {\r\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\r\n        return x;\r\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\r\n        return y;\r\n      } : d3_functor(y1), x, y;\r\n      function segment() {\r\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\r\n      }\r\n      while (++i < n) {\r\n        if (defined.call(this, d = data[i], i)) {\r\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\r\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\r\n        } else if (points0.length) {\r\n          segment();\r\n          points0 = [];\r\n          points1 = [];\r\n        }\r\n      }\r\n      if (points0.length) segment();\r\n      return segments.length ? segments.join(\"\") : null;\r\n    }\r\n    area.x = function(_) {\r\n      if (!arguments.length) return x1;\r\n      x0 = x1 = _;\r\n      return area;\r\n    };\r\n    area.x0 = function(_) {\r\n      if (!arguments.length) return x0;\r\n      x0 = _;\r\n      return area;\r\n    };\r\n    area.x1 = function(_) {\r\n      if (!arguments.length) return x1;\r\n      x1 = _;\r\n      return area;\r\n    };\r\n    area.y = function(_) {\r\n      if (!arguments.length) return y1;\r\n      y0 = y1 = _;\r\n      return area;\r\n    };\r\n    area.y0 = function(_) {\r\n      if (!arguments.length) return y0;\r\n      y0 = _;\r\n      return area;\r\n    };\r\n    area.y1 = function(_) {\r\n      if (!arguments.length) return y1;\r\n      y1 = _;\r\n      return area;\r\n    };\r\n    area.defined = function(_) {\r\n      if (!arguments.length) return defined;\r\n      defined = _;\r\n      return area;\r\n    };\r\n    area.interpolate = function(_) {\r\n      if (!arguments.length) return interpolateKey;\r\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\r\n      interpolateReverse = interpolate.reverse || interpolate;\r\n      L = interpolate.closed ? \"M\" : \"L\";\r\n      return area;\r\n    };\r\n    area.tension = function(_) {\r\n      if (!arguments.length) return tension;\r\n      tension = _;\r\n      return area;\r\n    };\r\n    return area;\r\n  }\r\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\r\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\r\n  d3.svg.area = function() {\r\n    return d3_svg_area(d3_identity);\r\n  };\r\n  d3.svg.area.radial = function() {\r\n    var area = d3_svg_area(d3_svg_lineRadial);\r\n    area.radius = area.x, delete area.x;\r\n    area.innerRadius = area.x0, delete area.x0;\r\n    area.outerRadius = area.x1, delete area.x1;\r\n    area.angle = area.y, delete area.y;\r\n    area.startAngle = area.y0, delete area.y0;\r\n    area.endAngle = area.y1, delete area.y1;\r\n    return area;\r\n  };\r\n  d3.svg.chord = function() {\r\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\r\n    function chord(d, i) {\r\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\r\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\r\n    }\r\n    function subgroup(self, f, d, i) {\r\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\r\n      return {\r\n        r: r,\r\n        a0: a0,\r\n        a1: a1,\r\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\r\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\r\n      };\r\n    }\r\n    function equals(a, b) {\r\n      return a.a0 == b.a0 && a.a1 == b.a1;\r\n    }\r\n    function arc(r, p, a) {\r\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\r\n    }\r\n    function curve(r0, p0, r1, p1) {\r\n      return \"Q 0,0 \" + p1;\r\n    }\r\n    chord.radius = function(v) {\r\n      if (!arguments.length) return radius;\r\n      radius = d3_functor(v);\r\n      return chord;\r\n    };\r\n    chord.source = function(v) {\r\n      if (!arguments.length) return source;\r\n      source = d3_functor(v);\r\n      return chord;\r\n    };\r\n    chord.target = function(v) {\r\n      if (!arguments.length) return target;\r\n      target = d3_functor(v);\r\n      return chord;\r\n    };\r\n    chord.startAngle = function(v) {\r\n      if (!arguments.length) return startAngle;\r\n      startAngle = d3_functor(v);\r\n      return chord;\r\n    };\r\n    chord.endAngle = function(v) {\r\n      if (!arguments.length) return endAngle;\r\n      endAngle = d3_functor(v);\r\n      return chord;\r\n    };\r\n    return chord;\r\n  };\r\n  function d3_svg_chordRadius(d) {\r\n    return d.radius;\r\n  }\r\n  d3.svg.diagonal = function() {\r\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\r\n    function diagonal(d, i) {\r\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\r\n        x: p0.x,\r\n        y: m\r\n      }, {\r\n        x: p3.x,\r\n        y: m\r\n      }, p3 ];\r\n      p = p.map(projection);\r\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\r\n    }\r\n    diagonal.source = function(x) {\r\n      if (!arguments.length) return source;\r\n      source = d3_functor(x);\r\n      return diagonal;\r\n    };\r\n    diagonal.target = function(x) {\r\n      if (!arguments.length) return target;\r\n      target = d3_functor(x);\r\n      return diagonal;\r\n    };\r\n    diagonal.projection = function(x) {\r\n      if (!arguments.length) return projection;\r\n      projection = x;\r\n      return diagonal;\r\n    };\r\n    return diagonal;\r\n  };\r\n  function d3_svg_diagonalProjection(d) {\r\n    return [ d.x, d.y ];\r\n  }\r\n  d3.svg.diagonal.radial = function() {\r\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\r\n    diagonal.projection = function(x) {\r\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\r\n    };\r\n    return diagonal;\r\n  };\r\n  function d3_svg_diagonalRadialProjection(projection) {\r\n    return function() {\r\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\r\n      return [ r * Math.cos(a), r * Math.sin(a) ];\r\n    };\r\n  }\r\n  d3.svg.symbol = function() {\r\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\r\n    function symbol(d, i) {\r\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\r\n    }\r\n    symbol.type = function(x) {\r\n      if (!arguments.length) return type;\r\n      type = d3_functor(x);\r\n      return symbol;\r\n    };\r\n    symbol.size = function(x) {\r\n      if (!arguments.length) return size;\r\n      size = d3_functor(x);\r\n      return symbol;\r\n    };\r\n    return symbol;\r\n  };\r\n  function d3_svg_symbolSize() {\r\n    return 64;\r\n  }\r\n  function d3_svg_symbolType() {\r\n    return \"circle\";\r\n  }\r\n  function d3_svg_symbolCircle(size) {\r\n    var r = Math.sqrt(size / π);\r\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\r\n  }\r\n  var d3_svg_symbols = d3.map({\r\n    circle: d3_svg_symbolCircle,\r\n    cross: function(size) {\r\n      var r = Math.sqrt(size / 5) / 2;\r\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\r\n    },\r\n    diamond: function(size) {\r\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\r\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\r\n    },\r\n    square: function(size) {\r\n      var r = Math.sqrt(size) / 2;\r\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\r\n    },\r\n    \"triangle-down\": function(size) {\r\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\r\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\r\n    },\r\n    \"triangle-up\": function(size) {\r\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\r\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\r\n    }\r\n  });\r\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\r\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\r\n  d3_selectionPrototype.transition = function(name) {\r\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\r\n      time: Date.now(),\r\n      ease: d3_ease_cubicInOut,\r\n      delay: 0,\r\n      duration: 250\r\n    };\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      subgroups.push(subgroup = []);\r\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\r\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\r\n        subgroup.push(node);\r\n      }\r\n    }\r\n    return d3_transition(subgroups, ns, id);\r\n  };\r\n  d3_selectionPrototype.interrupt = function(name) {\r\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\r\n  };\r\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\r\n  function d3_selection_interruptNS(ns) {\r\n    return function() {\r\n      var lock, activeId, active;\r\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\r\n        active.timer.c = null;\r\n        active.timer.t = NaN;\r\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\r\n        lock.active += .5;\r\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\r\n      }\r\n    };\r\n  }\r\n  function d3_transition(groups, ns, id) {\r\n    d3_subclass(groups, d3_transitionPrototype);\r\n    groups.namespace = ns;\r\n    groups.id = id;\r\n    return groups;\r\n  }\r\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\r\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\r\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\r\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\r\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\r\n  d3.transition = function(selection, name) {\r\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\r\n  };\r\n  d3.transition.prototype = d3_transitionPrototype;\r\n  d3_transitionPrototype.select = function(selector) {\r\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\r\n    selector = d3_selection_selector(selector);\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      subgroups.push(subgroup = []);\r\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\r\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\r\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\r\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\r\n          subgroup.push(subnode);\r\n        } else {\r\n          subgroup.push(null);\r\n        }\r\n      }\r\n    }\r\n    return d3_transition(subgroups, ns, id);\r\n  };\r\n  d3_transitionPrototype.selectAll = function(selector) {\r\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\r\n    selector = d3_selection_selectorAll(selector);\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\r\n        if (node = group[i]) {\r\n          transition = node[ns][id];\r\n          subnodes = selector.call(node, node.__data__, i, j);\r\n          subgroups.push(subgroup = []);\r\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\r\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\r\n            subgroup.push(subnode);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return d3_transition(subgroups, ns, id);\r\n  };\r\n  d3_transitionPrototype.filter = function(filter) {\r\n    var subgroups = [], subgroup, group, node;\r\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\r\n    for (var j = 0, m = this.length; j < m; j++) {\r\n      subgroups.push(subgroup = []);\r\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\r\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\r\n          subgroup.push(node);\r\n        }\r\n      }\r\n    }\r\n    return d3_transition(subgroups, this.namespace, this.id);\r\n  };\r\n  d3_transitionPrototype.tween = function(name, tween) {\r\n    var id = this.id, ns = this.namespace;\r\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\r\n    return d3_selection_each(this, tween == null ? function(node) {\r\n      node[ns][id].tween.remove(name);\r\n    } : function(node) {\r\n      node[ns][id].tween.set(name, tween);\r\n    });\r\n  };\r\n  function d3_transition_tween(groups, name, value, tween) {\r\n    var id = groups.id, ns = groups.namespace;\r\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\r\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\r\n    } : (value = tween(value), function(node) {\r\n      node[ns][id].tween.set(name, value);\r\n    }));\r\n  }\r\n  d3_transitionPrototype.attr = function(nameNS, value) {\r\n    if (arguments.length < 2) {\r\n      for (value in nameNS) this.attr(value, nameNS[value]);\r\n      return this;\r\n    }\r\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\r\n    function attrNull() {\r\n      this.removeAttribute(name);\r\n    }\r\n    function attrNullNS() {\r\n      this.removeAttributeNS(name.space, name.local);\r\n    }\r\n    function attrTween(b) {\r\n      return b == null ? attrNull : (b += \"\", function() {\r\n        var a = this.getAttribute(name), i;\r\n        return a !== b && (i = interpolate(a, b), function(t) {\r\n          this.setAttribute(name, i(t));\r\n        });\r\n      });\r\n    }\r\n    function attrTweenNS(b) {\r\n      return b == null ? attrNullNS : (b += \"\", function() {\r\n        var a = this.getAttributeNS(name.space, name.local), i;\r\n        return a !== b && (i = interpolate(a, b), function(t) {\r\n          this.setAttributeNS(name.space, name.local, i(t));\r\n        });\r\n      });\r\n    }\r\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\r\n  };\r\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\r\n    var name = d3.ns.qualify(nameNS);\r\n    function attrTween(d, i) {\r\n      var f = tween.call(this, d, i, this.getAttribute(name));\r\n      return f && function(t) {\r\n        this.setAttribute(name, f(t));\r\n      };\r\n    }\r\n    function attrTweenNS(d, i) {\r\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\r\n      return f && function(t) {\r\n        this.setAttributeNS(name.space, name.local, f(t));\r\n      };\r\n    }\r\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\r\n  };\r\n  d3_transitionPrototype.style = function(name, value, priority) {\r\n    var n = arguments.length;\r\n    if (n < 3) {\r\n      if (typeof name !== \"string\") {\r\n        if (n < 2) value = \"\";\r\n        for (priority in name) this.style(priority, name[priority], value);\r\n        return this;\r\n      }\r\n      priority = \"\";\r\n    }\r\n    function styleNull() {\r\n      this.style.removeProperty(name);\r\n    }\r\n    function styleString(b) {\r\n      return b == null ? styleNull : (b += \"\", function() {\r\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\r\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\r\n          this.style.setProperty(name, i(t), priority);\r\n        });\r\n      });\r\n    }\r\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\r\n  };\r\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\r\n    if (arguments.length < 3) priority = \"\";\r\n    function styleTween(d, i) {\r\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\r\n      return f && function(t) {\r\n        this.style.setProperty(name, f(t), priority);\r\n      };\r\n    }\r\n    return this.tween(\"style.\" + name, styleTween);\r\n  };\r\n  d3_transitionPrototype.text = function(value) {\r\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\r\n  };\r\n  function d3_transition_text(b) {\r\n    if (b == null) b = \"\";\r\n    return function() {\r\n      this.textContent = b;\r\n    };\r\n  }\r\n  d3_transitionPrototype.remove = function() {\r\n    var ns = this.namespace;\r\n    return this.each(\"end.transition\", function() {\r\n      var p;\r\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\r\n    });\r\n  };\r\n  d3_transitionPrototype.ease = function(value) {\r\n    var id = this.id, ns = this.namespace;\r\n    if (arguments.length < 1) return this.node()[ns][id].ease;\r\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\r\n    return d3_selection_each(this, function(node) {\r\n      node[ns][id].ease = value;\r\n    });\r\n  };\r\n  d3_transitionPrototype.delay = function(value) {\r\n    var id = this.id, ns = this.namespace;\r\n    if (arguments.length < 1) return this.node()[ns][id].delay;\r\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\r\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\r\n    } : (value = +value, function(node) {\r\n      node[ns][id].delay = value;\r\n    }));\r\n  };\r\n  d3_transitionPrototype.duration = function(value) {\r\n    var id = this.id, ns = this.namespace;\r\n    if (arguments.length < 1) return this.node()[ns][id].duration;\r\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\r\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\r\n    } : (value = Math.max(1, value), function(node) {\r\n      node[ns][id].duration = value;\r\n    }));\r\n  };\r\n  d3_transitionPrototype.each = function(type, listener) {\r\n    var id = this.id, ns = this.namespace;\r\n    if (arguments.length < 2) {\r\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\r\n      try {\r\n        d3_transitionInheritId = id;\r\n        d3_selection_each(this, function(node, i, j) {\r\n          d3_transitionInherit = node[ns][id];\r\n          type.call(node, node.__data__, i, j);\r\n        });\r\n      } finally {\r\n        d3_transitionInherit = inherit;\r\n        d3_transitionInheritId = inheritId;\r\n      }\r\n    } else {\r\n      d3_selection_each(this, function(node) {\r\n        var transition = node[ns][id];\r\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\r\n      });\r\n    }\r\n    return this;\r\n  };\r\n  d3_transitionPrototype.transition = function() {\r\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\r\n    for (var j = 0, m = this.length; j < m; j++) {\r\n      subgroups.push(subgroup = []);\r\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\r\n        if (node = group[i]) {\r\n          transition = node[ns][id0];\r\n          d3_transitionNode(node, i, ns, id1, {\r\n            time: transition.time,\r\n            ease: transition.ease,\r\n            delay: transition.delay + transition.duration,\r\n            duration: transition.duration\r\n          });\r\n        }\r\n        subgroup.push(node);\r\n      }\r\n    }\r\n    return d3_transition(subgroups, ns, id1);\r\n  };\r\n  function d3_transitionNamespace(name) {\r\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\r\n  }\r\n  function d3_transitionNode(node, i, ns, id, inherit) {\r\n    var lock = node[ns] || (node[ns] = {\r\n      active: 0,\r\n      count: 0\r\n    }), transition = lock[id], time, timer, duration, ease, tweens;\r\n    function schedule(elapsed) {\r\n      var delay = transition.delay;\r\n      timer.t = delay + time;\r\n      if (delay <= elapsed) return start(elapsed - delay);\r\n      timer.c = start;\r\n    }\r\n    function start(elapsed) {\r\n      var activeId = lock.active, active = lock[activeId];\r\n      if (active) {\r\n        active.timer.c = null;\r\n        active.timer.t = NaN;\r\n        --lock.count;\r\n        delete lock[activeId];\r\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\r\n      }\r\n      for (var cancelId in lock) {\r\n        if (+cancelId < id) {\r\n          var cancel = lock[cancelId];\r\n          cancel.timer.c = null;\r\n          cancel.timer.t = NaN;\r\n          --lock.count;\r\n          delete lock[cancelId];\r\n        }\r\n      }\r\n      timer.c = tick;\r\n      d3_timer(function() {\r\n        if (timer.c && tick(elapsed || 1)) {\r\n          timer.c = null;\r\n          timer.t = NaN;\r\n        }\r\n        return 1;\r\n      }, 0, time);\r\n      lock.active = id;\r\n      transition.event && transition.event.start.call(node, node.__data__, i);\r\n      tweens = [];\r\n      transition.tween.forEach(function(key, value) {\r\n        if (value = value.call(node, node.__data__, i)) {\r\n          tweens.push(value);\r\n        }\r\n      });\r\n      ease = transition.ease;\r\n      duration = transition.duration;\r\n    }\r\n    function tick(elapsed) {\r\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\r\n      while (n > 0) {\r\n        tweens[--n].call(node, e);\r\n      }\r\n      if (t >= 1) {\r\n        transition.event && transition.event.end.call(node, node.__data__, i);\r\n        if (--lock.count) delete lock[id]; else delete node[ns];\r\n        return 1;\r\n      }\r\n    }\r\n    if (!transition) {\r\n      time = inherit.time;\r\n      timer = d3_timer(schedule, 0, time);\r\n      transition = lock[id] = {\r\n        tween: new d3_Map(),\r\n        time: time,\r\n        timer: timer,\r\n        delay: inherit.delay,\r\n        duration: inherit.duration,\r\n        ease: inherit.ease,\r\n        index: i\r\n      };\r\n      inherit = null;\r\n      ++lock.count;\r\n    }\r\n  }\r\n  d3.svg.axis = function() {\r\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\r\n    function axis(g) {\r\n      g.each(function() {\r\n        var g = d3.select(this);\r\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\r\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\r\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \r\n        d3.transition(path));\r\n        tickEnter.append(\"line\");\r\n        tickEnter.append(\"text\");\r\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\r\n        if (orient === \"bottom\" || orient === \"top\") {\r\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\r\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\r\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\r\n        } else {\r\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\r\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\r\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\r\n        }\r\n        lineEnter.attr(y2, sign * innerTickSize);\r\n        textEnter.attr(y1, sign * tickSpacing);\r\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\r\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\r\n        if (scale1.rangeBand) {\r\n          var x = scale1, dx = x.rangeBand() / 2;\r\n          scale0 = scale1 = function(d) {\r\n            return x(d) + dx;\r\n          };\r\n        } else if (scale0.rangeBand) {\r\n          scale0 = scale1;\r\n        } else {\r\n          tickExit.call(tickTransform, scale1, scale0);\r\n        }\r\n        tickEnter.call(tickTransform, scale0, scale1);\r\n        tickUpdate.call(tickTransform, scale1, scale1);\r\n      });\r\n    }\r\n    axis.scale = function(x) {\r\n      if (!arguments.length) return scale;\r\n      scale = x;\r\n      return axis;\r\n    };\r\n    axis.orient = function(x) {\r\n      if (!arguments.length) return orient;\r\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\r\n      return axis;\r\n    };\r\n    axis.ticks = function() {\r\n      if (!arguments.length) return tickArguments_;\r\n      tickArguments_ = d3_array(arguments);\r\n      return axis;\r\n    };\r\n    axis.tickValues = function(x) {\r\n      if (!arguments.length) return tickValues;\r\n      tickValues = x;\r\n      return axis;\r\n    };\r\n    axis.tickFormat = function(x) {\r\n      if (!arguments.length) return tickFormat_;\r\n      tickFormat_ = x;\r\n      return axis;\r\n    };\r\n    axis.tickSize = function(x) {\r\n      var n = arguments.length;\r\n      if (!n) return innerTickSize;\r\n      innerTickSize = +x;\r\n      outerTickSize = +arguments[n - 1];\r\n      return axis;\r\n    };\r\n    axis.innerTickSize = function(x) {\r\n      if (!arguments.length) return innerTickSize;\r\n      innerTickSize = +x;\r\n      return axis;\r\n    };\r\n    axis.outerTickSize = function(x) {\r\n      if (!arguments.length) return outerTickSize;\r\n      outerTickSize = +x;\r\n      return axis;\r\n    };\r\n    axis.tickPadding = function(x) {\r\n      if (!arguments.length) return tickPadding;\r\n      tickPadding = +x;\r\n      return axis;\r\n    };\r\n    axis.tickSubdivide = function() {\r\n      return arguments.length && axis;\r\n    };\r\n    return axis;\r\n  };\r\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\r\n    top: 1,\r\n    right: 1,\r\n    bottom: 1,\r\n    left: 1\r\n  };\r\n  function d3_svg_axisX(selection, x0, x1) {\r\n    selection.attr(\"transform\", function(d) {\r\n      var v0 = x0(d);\r\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\r\n    });\r\n  }\r\n  function d3_svg_axisY(selection, y0, y1) {\r\n    selection.attr(\"transform\", function(d) {\r\n      var v0 = y0(d);\r\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\r\n    });\r\n  }\r\n  d3.svg.brush = function() {\r\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\r\n    function brush(g) {\r\n      g.each(function() {\r\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\r\n        var background = g.selectAll(\".background\").data([ 0 ]);\r\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\r\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\r\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\r\n        resize.exit().remove();\r\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\r\n          return \"resize \" + d;\r\n        }).style(\"cursor\", function(d) {\r\n          return d3_svg_brushCursor[d];\r\n        }).append(\"rect\").attr(\"x\", function(d) {\r\n          return /[ew]$/.test(d) ? -3 : null;\r\n        }).attr(\"y\", function(d) {\r\n          return /^[ns]/.test(d) ? -3 : null;\r\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\r\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\r\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\r\n        if (x) {\r\n          range = d3_scaleRange(x);\r\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\r\n          redrawX(gUpdate);\r\n        }\r\n        if (y) {\r\n          range = d3_scaleRange(y);\r\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\r\n          redrawY(gUpdate);\r\n        }\r\n        redraw(gUpdate);\r\n      });\r\n    }\r\n    brush.event = function(g) {\r\n      g.each(function() {\r\n        var event_ = event.of(this, arguments), extent1 = {\r\n          x: xExtent,\r\n          y: yExtent,\r\n          i: xExtentDomain,\r\n          j: yExtentDomain\r\n        }, extent0 = this.__chart__ || extent1;\r\n        this.__chart__ = extent1;\r\n        if (d3_transitionInheritId) {\r\n          d3.select(this).transition().each(\"start.brush\", function() {\r\n            xExtentDomain = extent0.i;\r\n            yExtentDomain = extent0.j;\r\n            xExtent = extent0.x;\r\n            yExtent = extent0.y;\r\n            event_({\r\n              type: \"brushstart\"\r\n            });\r\n          }).tween(\"brush:brush\", function() {\r\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\r\n            xExtentDomain = yExtentDomain = null;\r\n            return function(t) {\r\n              xExtent = extent1.x = xi(t);\r\n              yExtent = extent1.y = yi(t);\r\n              event_({\r\n                type: \"brush\",\r\n                mode: \"resize\"\r\n              });\r\n            };\r\n          }).each(\"end.brush\", function() {\r\n            xExtentDomain = extent1.i;\r\n            yExtentDomain = extent1.j;\r\n            event_({\r\n              type: \"brush\",\r\n              mode: \"resize\"\r\n            });\r\n            event_({\r\n              type: \"brushend\"\r\n            });\r\n          });\r\n        } else {\r\n          event_({\r\n            type: \"brushstart\"\r\n          });\r\n          event_({\r\n            type: \"brush\",\r\n            mode: \"resize\"\r\n          });\r\n          event_({\r\n            type: \"brushend\"\r\n          });\r\n        }\r\n      });\r\n    };\r\n    function redraw(g) {\r\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\r\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\r\n      });\r\n    }\r\n    function redrawX(g) {\r\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\r\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\r\n    }\r\n    function redrawY(g) {\r\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\r\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\r\n    }\r\n    function brushstart() {\r\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\r\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\r\n      if (d3.event.changedTouches) {\r\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\r\n      } else {\r\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\r\n      }\r\n      g.interrupt().selectAll(\"*\").interrupt();\r\n      if (dragging) {\r\n        origin[0] = xExtent[0] - origin[0];\r\n        origin[1] = yExtent[0] - origin[1];\r\n      } else if (resizing) {\r\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\r\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\r\n        origin[0] = xExtent[ex];\r\n        origin[1] = yExtent[ey];\r\n      } else if (d3.event.altKey) center = origin.slice();\r\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\r\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\r\n      event_({\r\n        type: \"brushstart\"\r\n      });\r\n      brushmove();\r\n      function keydown() {\r\n        if (d3.event.keyCode == 32) {\r\n          if (!dragging) {\r\n            center = null;\r\n            origin[0] -= xExtent[1];\r\n            origin[1] -= yExtent[1];\r\n            dragging = 2;\r\n          }\r\n          d3_eventPreventDefault();\r\n        }\r\n      }\r\n      function keyup() {\r\n        if (d3.event.keyCode == 32 && dragging == 2) {\r\n          origin[0] += xExtent[1];\r\n          origin[1] += yExtent[1];\r\n          dragging = 0;\r\n          d3_eventPreventDefault();\r\n        }\r\n      }\r\n      function brushmove() {\r\n        var point = d3.mouse(target), moved = false;\r\n        if (offset) {\r\n          point[0] += offset[0];\r\n          point[1] += offset[1];\r\n        }\r\n        if (!dragging) {\r\n          if (d3.event.altKey) {\r\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\r\n            origin[0] = xExtent[+(point[0] < center[0])];\r\n            origin[1] = yExtent[+(point[1] < center[1])];\r\n          } else center = null;\r\n        }\r\n        if (resizingX && move1(point, x, 0)) {\r\n          redrawX(g);\r\n          moved = true;\r\n        }\r\n        if (resizingY && move1(point, y, 1)) {\r\n          redrawY(g);\r\n          moved = true;\r\n        }\r\n        if (moved) {\r\n          redraw(g);\r\n          event_({\r\n            type: \"brush\",\r\n            mode: dragging ? \"move\" : \"resize\"\r\n          });\r\n        }\r\n      }\r\n      function move1(point, scale, i) {\r\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\r\n        if (dragging) {\r\n          r0 -= position;\r\n          r1 -= size + position;\r\n        }\r\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\r\n        if (dragging) {\r\n          max = (min += position) + size;\r\n        } else {\r\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\r\n          if (position < min) {\r\n            max = min;\r\n            min = position;\r\n          } else {\r\n            max = position;\r\n          }\r\n        }\r\n        if (extent[0] != min || extent[1] != max) {\r\n          if (i) yExtentDomain = null; else xExtentDomain = null;\r\n          extent[0] = min;\r\n          extent[1] = max;\r\n          return true;\r\n        }\r\n      }\r\n      function brushend() {\r\n        brushmove();\r\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\r\n        d3.select(\"body\").style(\"cursor\", null);\r\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\r\n        dragRestore();\r\n        event_({\r\n          type: \"brushend\"\r\n        });\r\n      }\r\n    }\r\n    brush.x = function(z) {\r\n      if (!arguments.length) return x;\r\n      x = z;\r\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\r\n      return brush;\r\n    };\r\n    brush.y = function(z) {\r\n      if (!arguments.length) return y;\r\n      y = z;\r\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\r\n      return brush;\r\n    };\r\n    brush.clamp = function(z) {\r\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\r\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\r\n      return brush;\r\n    };\r\n    brush.extent = function(z) {\r\n      var x0, x1, y0, y1, t;\r\n      if (!arguments.length) {\r\n        if (x) {\r\n          if (xExtentDomain) {\r\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\r\n          } else {\r\n            x0 = xExtent[0], x1 = xExtent[1];\r\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\r\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\r\n          }\r\n        }\r\n        if (y) {\r\n          if (yExtentDomain) {\r\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\r\n          } else {\r\n            y0 = yExtent[0], y1 = yExtent[1];\r\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\r\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\r\n          }\r\n        }\r\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\r\n      }\r\n      if (x) {\r\n        x0 = z[0], x1 = z[1];\r\n        if (y) x0 = x0[0], x1 = x1[0];\r\n        xExtentDomain = [ x0, x1 ];\r\n        if (x.invert) x0 = x(x0), x1 = x(x1);\r\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\r\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\r\n      }\r\n      if (y) {\r\n        y0 = z[0], y1 = z[1];\r\n        if (x) y0 = y0[1], y1 = y1[1];\r\n        yExtentDomain = [ y0, y1 ];\r\n        if (y.invert) y0 = y(y0), y1 = y(y1);\r\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\r\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\r\n      }\r\n      return brush;\r\n    };\r\n    brush.clear = function() {\r\n      if (!brush.empty()) {\r\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\r\n        xExtentDomain = yExtentDomain = null;\r\n      }\r\n      return brush;\r\n    };\r\n    brush.empty = function() {\r\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\r\n    };\r\n    return d3.rebind(brush, event, \"on\");\r\n  };\r\n  var d3_svg_brushCursor = {\r\n    n: \"ns-resize\",\r\n    e: \"ew-resize\",\r\n    s: \"ns-resize\",\r\n    w: \"ew-resize\",\r\n    nw: \"nwse-resize\",\r\n    ne: \"nesw-resize\",\r\n    se: \"nwse-resize\",\r\n    sw: \"nesw-resize\"\r\n  };\r\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\r\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\r\n  var d3_time_formatUtc = d3_time_format.utc;\r\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\r\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\r\n  function d3_time_formatIsoNative(date) {\r\n    return date.toISOString();\r\n  }\r\n  d3_time_formatIsoNative.parse = function(string) {\r\n    var date = new Date(string);\r\n    return isNaN(date) ? null : date;\r\n  };\r\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\r\n  d3_time.second = d3_time_interval(function(date) {\r\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\r\n  }, function(date, offset) {\r\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\r\n  }, function(date) {\r\n    return date.getSeconds();\r\n  });\r\n  d3_time.seconds = d3_time.second.range;\r\n  d3_time.seconds.utc = d3_time.second.utc.range;\r\n  d3_time.minute = d3_time_interval(function(date) {\r\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\r\n  }, function(date, offset) {\r\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\r\n  }, function(date) {\r\n    return date.getMinutes();\r\n  });\r\n  d3_time.minutes = d3_time.minute.range;\r\n  d3_time.minutes.utc = d3_time.minute.utc.range;\r\n  d3_time.hour = d3_time_interval(function(date) {\r\n    var timezone = date.getTimezoneOffset() / 60;\r\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\r\n  }, function(date, offset) {\r\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\r\n  }, function(date) {\r\n    return date.getHours();\r\n  });\r\n  d3_time.hours = d3_time.hour.range;\r\n  d3_time.hours.utc = d3_time.hour.utc.range;\r\n  d3_time.month = d3_time_interval(function(date) {\r\n    date = d3_time.day(date);\r\n    date.setDate(1);\r\n    return date;\r\n  }, function(date, offset) {\r\n    date.setMonth(date.getMonth() + offset);\r\n  }, function(date) {\r\n    return date.getMonth();\r\n  });\r\n  d3_time.months = d3_time.month.range;\r\n  d3_time.months.utc = d3_time.month.utc.range;\r\n  function d3_time_scale(linear, methods, format) {\r\n    function scale(x) {\r\n      return linear(x);\r\n    }\r\n    scale.invert = function(x) {\r\n      return d3_time_scaleDate(linear.invert(x));\r\n    };\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\r\n      linear.domain(x);\r\n      return scale;\r\n    };\r\n    function tickMethod(extent, count) {\r\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\r\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\r\n        return d / 31536e6;\r\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\r\n    }\r\n    scale.nice = function(interval, skip) {\r\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\r\n      if (method) interval = method[0], skip = method[1];\r\n      function skipped(date) {\r\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\r\n      }\r\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\r\n        floor: function(date) {\r\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\r\n          return date;\r\n        },\r\n        ceil: function(date) {\r\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\r\n          return date;\r\n        }\r\n      } : interval));\r\n    };\r\n    scale.ticks = function(interval, skip) {\r\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\r\n        range: interval\r\n      }, skip ];\r\n      if (method) interval = method[0], skip = method[1];\r\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\r\n    };\r\n    scale.tickFormat = function() {\r\n      return format;\r\n    };\r\n    scale.copy = function() {\r\n      return d3_time_scale(linear.copy(), methods, format);\r\n    };\r\n    return d3_scale_linearRebind(scale, linear);\r\n  }\r\n  function d3_time_scaleDate(t) {\r\n    return new Date(t);\r\n  }\r\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\r\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\r\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\r\n    return d.getMilliseconds();\r\n  } ], [ \":%S\", function(d) {\r\n    return d.getSeconds();\r\n  } ], [ \"%I:%M\", function(d) {\r\n    return d.getMinutes();\r\n  } ], [ \"%I %p\", function(d) {\r\n    return d.getHours();\r\n  } ], [ \"%a %d\", function(d) {\r\n    return d.getDay() && d.getDate() != 1;\r\n  } ], [ \"%b %d\", function(d) {\r\n    return d.getDate() != 1;\r\n  } ], [ \"%B\", function(d) {\r\n    return d.getMonth();\r\n  } ], [ \"%Y\", d3_true ] ]);\r\n  var d3_time_scaleMilliseconds = {\r\n    range: function(start, stop, step) {\r\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\r\n    },\r\n    floor: d3_identity,\r\n    ceil: d3_identity\r\n  };\r\n  d3_time_scaleLocalMethods.year = d3_time.year;\r\n  d3_time.scale = function() {\r\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\r\n  };\r\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\r\n    return [ m[0].utc, m[1] ];\r\n  });\r\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\r\n    return d.getUTCMilliseconds();\r\n  } ], [ \":%S\", function(d) {\r\n    return d.getUTCSeconds();\r\n  } ], [ \"%I:%M\", function(d) {\r\n    return d.getUTCMinutes();\r\n  } ], [ \"%I %p\", function(d) {\r\n    return d.getUTCHours();\r\n  } ], [ \"%a %d\", function(d) {\r\n    return d.getUTCDay() && d.getUTCDate() != 1;\r\n  } ], [ \"%b %d\", function(d) {\r\n    return d.getUTCDate() != 1;\r\n  } ], [ \"%B\", function(d) {\r\n    return d.getUTCMonth();\r\n  } ], [ \"%Y\", d3_true ] ]);\r\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\r\n  d3_time.scale.utc = function() {\r\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\r\n  };\r\n  d3.text = d3_xhrType(function(request) {\r\n    return request.responseText;\r\n  });\r\n  d3.json = function(url, callback) {\r\n    return d3_xhr(url, \"application/json\", d3_json, callback);\r\n  };\r\n  function d3_json(request) {\r\n    return JSON.parse(request.responseText);\r\n  }\r\n  d3.html = function(url, callback) {\r\n    return d3_xhr(url, \"text/html\", d3_html, callback);\r\n  };\r\n  function d3_html(request) {\r\n    var range = d3_document.createRange();\r\n    range.selectNode(d3_document.body);\r\n    return range.createContextualFragment(request.responseText);\r\n  }\r\n  d3.xml = d3_xhrType(function(request) {\r\n    return request.responseXML;\r\n  });\r\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else {}\r\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/d3-celestial/lib/d3.js\n");

/***/ })

});